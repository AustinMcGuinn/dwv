{"version":3,"file":"dwv.min.js","mappings":"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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCO,eAAgB,CACdiCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC19BC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMxmCQ,WAAY,CACVV,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IA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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowCenterAndWidth.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/gui/overlayData.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/app/defaults.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__626__, __WEBPACK_EXTERNAL_MODULE__812__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","module.exports = __WEBPACK_EXTERNAL_MODULE__436__;","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {Array} [dims] Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an array sort callback.\n * f(a,b) > 0 -> b,a\n * f(a,b) < 0 -> a,b\n * f(a,b) = 0 -> original order\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {Function} A function that compares two Index.\n */\nexport function getIndexCompareFunction(direction) {\n  return function (a, b) {\n    return a.get(direction) - b.get(direction);\n  };\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index.\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index\n  let pointLength = 0;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    if (dim > pointLength) {\n      pointLength = dim;\n    }\n  }\n  if (pointLength === 0) {\n    throw new Error('No dimension found in point stringId');\n  }\n  // default values\n  const values = new Array(pointLength);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    dim = parseInt(strIds[j].substring(1, 3), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rescale LUT class.\n * Typically converts from integer to float.\n */\nexport class RescaleLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  #isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  #lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#isIdRsi = rsi.isID();\n\n    this.#length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this.#isIdRsi) {\n      this.#lut = new Float32Array(this.#length);\n      for (let i = 0; i < this.#length; ++i) {\n        this.#lut[i] = this.#rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#isIdRsi ? offset : this.#lut[offset];\n  }\n\n} // class RescaleLut\n","/**\n * Minimum window width value.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\n */\nconst minWindowWidth = 1;\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, {center: number, width: number}>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: {center: 40, width: 400},\n    lung: {center: -500, width: 1500},\n    bone: {center: 500, width: 2000},\n    brain: {center: 40, width: 80},\n    head: {center: 90, width: 350}\n  }\n};\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * WindowCenterAndWidth class.\n * <br>Pseudo-code:\n * <pre>\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * </pre>\n *\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\n */\nexport class WindowCenterAndWidth {\n\n  /**\n   * The center.\n   *\n   * @type {number}\n   */\n  #center;\n\n  /**\n   * The width.\n   *\n   * @type {number}\n   */\n  #width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      throw new Error('Window width shall always be greater than or equal to ' +\n        minWindowWidth);\n    }\n    this.#center = center;\n    this.#width = width;\n\n    this.#init();\n  }\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const c = this.#center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Get the window center.\n   *\n   * @returns {number} The window center.\n   */\n  getCenter() {\n    return this.#center;\n  }\n\n  /**\n   * Get the window width.\n   *\n   * @returns {number} The window width.\n   */\n  getWidth() {\n    return this.#width;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n  /**\n   * Check for window level equality.\n   *\n   * @param {WindowCenterAndWidth} rhs The other window level to compare to.\n   * @returns {boolean} True if both window level are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getCenter() === rhs.getCenter() &&\n      this.getWidth() === rhs.getWidth();\n  }\n\n} // class WindowLevel\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleLut} from './rescaleLut';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class.\n * Typically converts from float to integer.\n */\nexport class WindowLut {\n\n  /**\n   * The rescale LUT.\n   *\n   * @type {RescaleLut}\n   */\n  #rescaleLut;\n\n  /**\n   * The window level.\n   *\n   * @type {WindowCenterAndWidth}\n   */\n  #windowLevel;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  #isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, window level is set with\n   *   the 'setWindowLevel' method.\n   *\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(rescaleLut, isSigned, isDiscrete) {\n    this.#rescaleLut = rescaleLut;\n\n    if (isSigned) {\n      const size = this.#rescaleLut.getLength();\n      this.#signedShift = size / 2;\n    } else {\n      this.#signedShift = 0;\n    }\n\n    this.#isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the window / level.\n   *\n   * @returns {WindowCenterAndWidth} The window / level.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Get the rescale lut.\n   *\n   * @returns {RescaleLut} The rescale lut.\n   */\n  getRescaleLut() {\n    return this.#rescaleLut;\n  }\n\n  /**\n   * Set the window center and width.\n   *\n   * @param {WindowCenterAndWidth} wl The window level.\n   */\n  setWindowLevel(wl) {\n    // store the window values\n    this.#windowLevel = wl;\n\n    // possible signed shift (LUT indices are positive)\n    this.#windowLevel.setSignedOffset(\n      this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\n\n    // create lut if not continous\n    if (this.#isDiscrete) {\n      const size = this.#rescaleLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this.#isDiscrete) {\n      return this.#lut[offset + this.#signedShift];\n    } else {\n      return Math.floor(this.#windowLevel.apply(offset + this.#signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {Array} THe LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values.\n *  otherwise return 0 for the first third and\n *  lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values.\n *  otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n// jsdoc does not understand index signatures as type...\n// for ex: {[key: string]: {red: number[], green: number[], blue: number[]}}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, {red: number[], green: number[], blue: number[]}>}\n */\nexport const lut = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable max-len */\n\n  // pet\n  /* eslint-disable max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot metal blue\n  /* eslint-disable max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet 20 step\n  /* eslint-disable max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable max-len */\n};\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {object} c1 The first colour.\n * @param {object} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {object} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {object} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {object} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\n * @param {object} rgbTriplet RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgbTriplet) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgbTriplet.r * 0.001172549 +\n    rgbTriplet.g * 0.002301961 +\n    rgbTriplet.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {object} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.getX() * this.getX()) +\n      (this.getY() * this.getY()) +\n      (this.getZ() * this.getZ())\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * @see https://en.wikipedia.org/wiki/Cross_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * @see https://en.wikipedia.org/wiki/Dot_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.getX() * vector3D.getX()) +\n      (this.getY() * vector3D.getY()) +\n      (this.getZ() * vector3D.getZ());\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {Array} values row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {Array} array3D The input 3D array.\n   * @returns {Array} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum,\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\n * @see https://github.com/willnode/N-Matrix-Programmer\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix = null;\n  if (name === 'axial') {\n    matrix = getIdentityMat33();\n  } else if (name === 'coronal') {\n    matrix = getCoronalMat33();\n  } else if (name === 'sagittal') {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() + ', ' + this.getY() + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} The distance to the input point.\n   */\n  getDistance(point2D) {\n    return Math.sqrt(\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\n  }\n\n  /**\n   * Round a Point2D.\n   *\n   * @returns {Point2D} The rounded point.\n   */\n  getRound() {\n    return new Point2D(\n      Math.round(this.getX()),\n      Math.round(this.getY())\n    );\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.getX(), rhs.getX(), tol) &&\n      isSimilar(this.getY(), rhs.getY(), tol) &&\n      isSimilar(this.getZ(), rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.getX() - point3D.getX()),\n      (this.getY() - point3D.getY()),\n      (this.getZ() - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Get an array find callback for a similar input point.\n *\n * @param {Point3D} point The point to compare to.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {Function} A function that compares, using `isSimilar`,\n *   its input point to the one given as input to this function.\n */\nexport function getSimilarPoint3DFunction(point, tol) {\n  return function (element) {\n    return element.isSimilar(point, tol);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/* eslint-disable quote-props */\n/* eslint max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE'\n * - (vr) 'OB or OW' -> 'ox'\n * - (vr) 'US or SS' -> 'xs'\n * - (vr) 'US or OW' -> 'xx'\n * - (vr) 'US or SS or OW' -> 'xs'\n * - added 'GenericGroupLength' element to each group\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {object} tags The tags to add.\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n// -> removed duplicates (commented)\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n// Value Representation (VR) with 32bit Value Length (VL)\n// Added locally used 'ox'\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n// String VR with extended or replaced default character repertoire defined in\n// Specific Character Set (0008,0005)\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n// VR types\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group.');\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element.');\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {Array|undefined} The info as [vr, multiplicity, name].\n   */\n  getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key.');\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {object} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {object} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {object|null} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag = null;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string:\n *  key0=val00&key0=val01&key1=val10 returns\n *  { key0 : [val00, val01], key1 : val1 }\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {Array} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @example\n *    const values = {\"length\": { \"value\": 33, \"unit\": \"cm\" } };\n *    const str = \"The length is: {length}.\";\n *    const res = dwv.replaceFlags(str, values); // \"The length is: 33 cm.\"\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\n * Can be a solution to not have trailing zero as when\n * using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: arr.slice(start, end).find(callbackFn)\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *  {'Content-Type', ..., data} (depending on header tags)\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","import {\n  Tag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes,\n} from './dictionary';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.33.0-beta.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n * after the 128 bytes preamble.\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * (exported for tests only)\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {Array} orientation The image orientation patient.\n * @returns {string} The orientation name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\n  let name;\n  if (arrayEquals(orientation, axialOrientation)) {\n    name = 'axial';\n  } else if (arrayEquals(orientation, coronalOrientation)) {\n    name = 'coronal';\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\n    name = 'sagittal';\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2';\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.2';\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.50' ||\n    syntax === '1.2.840.10008.1.2.4.51';\n}\n\n/**\n * Tell if a given syntax is a retired JPEG one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a retired jpeg syntax.\n */\nfunction isJpegRetiredTransferSyntax(syntax) {\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\n    !isJpegBaselineTransferSyntax(syntax) &&\n    !isJpegLosslessTransferSyntax(syntax)) ||\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.57' ||\n    syntax === '1.2.840.10008.1.2.4.70';\n}\n\n/**\n * Tell if a given syntax is a JPEG-LS one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg-ls syntax.\n */\nfunction isJpeglsTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo = null;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n\n  // Unsupported:\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\n\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\n    isRleTransferSyntax(syntax)); // RLE\n}\n\n/**\n * Get the transfer syntax name.\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\n *\n * @param {string} syntax The transfer syntax.\n * @returns {string} The name of the transfer syntax.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (syntax === '1.2.840.10008.1.2') {\n    // Implicit VR - Little Endian\n    name = 'Little Endian Implicit';\n  } else if (syntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR - Little Endian\n    name = 'Little Endian Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\n    // Deflated Explicit VR - Little Endian\n    name = 'Little Endian Deflated Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR - Big Endian\n    name = 'Big Endian Explicit';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    // JPEG baseline\n    if (syntax === '1.2.840.10008.1.2.4.50') {\n      name = 'JPEG Baseline';\n    } else { // *.51\n      name = 'JPEG Extended, Process 2+4';\n    }\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    // JPEG Lossless\n    if (syntax === '1.2.840.10008.1.2.4.57') {\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\n    } else { // *.70\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\n    }\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\n    // Retired JPEG\n    name = 'Retired JPEG';\n  } else if (isJpeglsTransferSyntax(syntax)) {\n    // JPEG-LS\n    name = 'JPEG-LS';\n  } else if (isJpeg2000TransferSyntax(syntax)) {\n    // JPEG 2000\n    if (syntax === '1.2.840.10008.1.2.4.91') {\n      name = 'JPEG 2000 (Lossless or Lossy)';\n    } else { // *.90\n      name = 'JPEG 2000 (Lossless only)';\n    }\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\n    // MPEG2 Image Compression\n    name = 'MPEG2';\n  } else if (isRleTransferSyntax(syntax)) {\n    // RLE (lossless)\n    name = 'RLE';\n  }\n  // return\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n * See https://github.com/ivmartel/dwv/issues/188\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {object} firstDataElement The first data element of the DICOM header.\n * @returns {object} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      // ImplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2';\n    } else {\n      // ExplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2.1';\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      // ExplicitVRBigEndian\n      syntax = '1.2.840.10008.1.2.2';\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = {\n    tag: new Tag('0002', '0010'),\n    vr: 'UI'\n  };\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   i.e. without its value.\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\n *\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {object}\n   */\n  #dicomElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * @external TextDecoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  /**\n   * Get the raw DICOM data elements.\n   *\n   * @returns {object} The raw DICOM elements.\n   */\n  getDicomElements() {\n    return this.#dicomElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} An object containing the element\n   *   'tag', 'vl', 'vr', 'data' and 'endOffset'.\n   */\n  #readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data = null;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = {\n      tag: tag,\n      vr: vr,\n      vl: vl,\n      startOffset: startOffset,\n      endOffset: endOffset\n    };\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {object} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\n          );\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        data = Array.from(reader.readUint8Array(offset, vl));\n      } else {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        for (let l = 0; l < keys.length; ++l) {\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            pixelRepresentation, bitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {Array} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dicomElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dicomElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dicomElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dicomElements['00020010'];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dicomElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dicomElements[key] === 'undefined') {\n        this.#dicomElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dicomElements['7FE00010'] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dicomElements['00280103'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dicomElements['00280100'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dicomElements['00080005'];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dicomElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dicomElements['7FE00010'];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dicomElements['00280008'] !== 'undefined') {\n          numberOfFrames = Number(this.#dicomElements['00280008'].value[0]);\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\n */\nexport class ListenerHandler {\n  /**\n   * listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {Array} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Array} regions An array of regions.\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  BIG_EPSILON,\n  isSimilar,\n  getIdentityMat33\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Array}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {object}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Array} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      this.#origins,\n      this.#orientation\n    );\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Updating slice spacing.');\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest index\n    let closestSliceIndex = 0;\n    let minDist = point.getDistance(localOrigins[0]);\n    let dist = 0;\n    for (let i = 0; i < localOrigins.length; ++i) {\n      dist = point.getDistance(localOrigins[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestSliceIndex = i;\n      }\n    }\n    const closestOrigin = localOrigins[closestSliceIndex];\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n    // use third orientation matrix column as base plane vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    const dotProd = normal.dotProduct(pointDir);\n    // oposite vectors get higher index\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    if (typeof time !== 'undefined') {\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Array} origins An array of Point3D.\n * @param {Matrix33} orientation The oritentation matrix.\n * @param {boolean} [withCheck] Flag to activate spacing variation check,\n *   default to true.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\n  if (typeof withCheck === 'undefined') {\n    withCheck = true;\n  }\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n  // (x, y, z) = orientationMatrix * (i, j, k)\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\n  // applied on the patient position, reorders indices\n  // so that Z is the slice direction\n  const invOrientation = orientation.getInverse();\n  let origin1 = invOrientation.multiplyVector3D(origins[0]);\n  let origin2 = invOrientation.multiplyVector3D(origins[1]);\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\n  const deltas = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    origin1 = invOrientation.multiplyVector3D(origins[i]);\n    origin2 = invOrientation.multiplyVector3D(origins[i + 1]);\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\n    if (diff === 0) {\n      throw new Error('Zero slice spacing.' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    // keep smallest\n    if (diff < sliceSpacing) {\n      sliceSpacing = diff;\n    }\n    if (withCheck) {\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\n        deltas.push(Math.abs(sliceSpacing - diff));\n      }\n    }\n  }\n  // warn if non constant\n  if (withCheck && deltas.length !== 0) {\n    const sumReducer = function (sum, value) {\n      return sum + value;\n    };\n    const mean = deltas.reduce(sumReducer) / deltas.length;\n    if (mean > 1e-4) {\n      logger.warn('Varying slice spacing, mean delta: ' +\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\n    }\n  }\n\n  return sliceSpacing;\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromDictionary,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DicomElements wrapper.\n *\n * Warning: limited support for merged meta data.\n */\nexport class DicomElementsWrapper {\n\n  /**\n   * Wrapped elements.\n   *\n   * @type {Array}\n   */\n  #dicomElements;\n\n  /**\n   * @param {Array} dicomElements The elements to wrap.\n   */\n  constructor(dicomElements) {\n    this.#dicomElements = dicomElements;\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @param {boolean} [asArray] Get the value as an Array.\n   * @returns {object} The DICOM element value.\n   */\n  getFromKey(groupElementKey, asArray) {\n    // default\n    if (typeof asArray === 'undefined') {\n      asArray = false;\n    }\n    let value = null;\n    const dElement = this.#dicomElements[groupElementKey];\n    if (typeof dElement !== 'undefined') {\n      // raw value if only one\n      if (dElement.value.length === 1 && asArray === false) {\n        value = dElement.value[0];\n      } else {\n        value = dElement.value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Dump the DICOM tags to an object.\n   *\n   * @returns {object} The DICOM tags as an object.\n   */\n  dumpToObject() {\n    const keys = Object.keys(this.#dicomElements);\n    const obj = {};\n    let dicomElement = null;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      const tag = getTagFromKey(keys[i]);\n      obj[this.#getTagName(tag)] =\n        this.#getElementAsObject(tag, dicomElement);\n    }\n    return obj;\n  }\n\n  /**\n   * Get a tag string name from the dictionary.\n   *\n   * @param {object} tag The DICOM tag object.\n   * @returns {string} The tag name.\n   */\n  #getTagName(tag) {\n    let name = tag.getNameFromDictionary();\n    if (name === null) {\n      name = tag.getKey();\n    }\n    return name;\n  }\n\n  /**\n   * Get a DICOM element as a simple object.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @returns {object} The element as a simple object.\n   */\n  #getElementAsObject(tag, dicomElement) {\n    // element value\n    let value = null;\n\n    const isPixel = isPixelDataTag(tag);\n\n    const vr = dicomElement.vr;\n    if (vr === 'SQ' &&\n      typeof dicomElement.value !== 'undefined' &&\n      !isPixel) {\n      value = [];\n      const items = dicomElement.value;\n      let itemValues = null;\n      for (let i = 0; i < items.length; ++i) {\n        itemValues = {};\n        const keys = Object.keys(items[i]);\n        for (let k = 0; k < keys.length; ++k) {\n          const itemElement = items[i][keys[k]];\n          const tag = getTagFromKey(keys[k]);\n          const key = this.#getTagName(tag);\n          // do not inclure Item elements\n          if (key !== 'Item') {\n            itemValues[key] = this.#getElementAsObject(tag, itemElement);\n          }\n        }\n        value.push(itemValues);\n      }\n    } else {\n      value = this.#getElementValueAsString(tag, dicomElement);\n    }\n\n    // return\n    return {\n      value: value,\n      vr: vr\n    };\n  }\n\n  /**\n   * Dump the DICOM tags to a string.\n   *\n   * @returns {string} The dumped file.\n   */\n  dump() {\n    const keys = Object.keys(this.#dicomElements);\n    let result = '\\n';\n    result += '# Dicom-File-Format\\n';\n    result += '\\n';\n    result += '# Dicom-Meta-Information-Header\\n';\n    result += '# Used TransferSyntax: ';\n    if (isNativeLittleEndian()) {\n      result += 'Little Endian Explicit\\n';\n    } else {\n      result += 'NOT Little Endian Explicit\\n';\n    }\n    let dicomElement = null;\n    let tag = null;\n    let checkHeader = true;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      tag = getTagFromKey(keys[i]);\n      if (checkHeader && tag.getGroup() !== '0002') {\n        result += '\\n';\n        result += '# Dicom-Data-Set\\n';\n        result += '# Used TransferSyntax: ';\n        const syntax = this.#dicomElements['00020010'].value[0];\n        result += getTransferSyntaxName(syntax);\n        result += '\\n';\n        checkHeader = false;\n      }\n      result += this.#getElementAsString(tag, dicomElement) + '\\n';\n    }\n    return result;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n   * @returns {string} A string representation of the DICOM element.\n   */\n  #getElementValueAsString(tag, dicomElement, pretty) {\n    let str = '';\n    const strLenLimit = 65;\n\n    // dafault to pretty output\n    if (typeof pretty === 'undefined') {\n      pretty = true;\n    }\n    // check dicom element input\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\n      return str;\n    }\n\n    // Polyfill for Number.isInteger.\n    const isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n    };\n\n    // TODO Support sequences.\n\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n      str += '(no value available)';\n    } else if (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength) {\n      str = '(PixelSequence)';\n    } else if (dicomElement.vr === 'DA' && pretty) {\n      const daObj = getDate(dicomElement);\n      const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n      str = da.toLocaleDateString();\n    } else if (dicomElement.vr === 'TM' && pretty) {\n      const tmObj = getTime(dicomElement);\n      str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n    } else {\n      let isOtherVR = false;\n      if (dicomElement.vr.length !== 0) {\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n      }\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'DS');\n      let valueStr = '';\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n        valueStr = '';\n        if (k !== 0) {\n          valueStr += '\\\\';\n        }\n        if (isFloatNumberVR) {\n          const num = Number(dicomElement.value[k]);\n          if (!isInteger(num) && pretty) {\n            valueStr += num.toPrecision(4);\n          } else {\n            valueStr += num.toString();\n          }\n        } else if (isOtherVR) {\n          let tmp = dicomElement.value[k].toString(16);\n          if (dicomElement.vr === 'OB') {\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n          } else {\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n          }\n          valueStr += tmp;\n        } else {\n          valueStr += dicomElement.value[k];\n        }\n        // check length\n        if (str.length + valueStr.length <= strLenLimit) {\n          str += valueStr;\n        } else {\n          str += '...';\n          break;\n        }\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Get a data element as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {string} [prefix] A string to prepend this one.\n   * @returns {string} The element as a string.\n   */\n  #getElementAsString(tag, dicomElement, prefix) {\n    // default prefix\n    prefix = prefix || '';\n\n    // get tag anme from dictionary\n    const tagName = tag.getNameFromDictionary();\n\n    let deSize = dicomElement.value.length;\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n\n    // no size for delimitations\n    if (isItemDelimitationItemTag(tag) ||\n      isSequenceDelimitationItemTag(tag)) {\n      deSize = 0;\n    } else if (isOtherVR) {\n      deSize = 1;\n    }\n\n    const isPixSequence = (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength);\n\n    let line = null;\n\n    // (group,element)\n    line = '(';\n    line += tag.getGroup().toLowerCase();\n    line += ',';\n    line += tag.getElement().toLowerCase();\n    line += ') ';\n    // value representation\n    line += dicomElement.vr;\n    // value\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 &&\n      dicomElement.value[0] === '') {\n      line += ' (no value available)';\n      deSize = 0;\n    } else {\n      // simple number display\n      if (dicomElement.vr === 'na') {\n        line += ' ';\n        line += dicomElement.value[0];\n      } else if (isPixSequence) {\n        // pixel sequence\n        line += ' (PixelSequence #=' + deSize + ')';\n      } else if (dicomElement.vr === 'SQ') {\n        line += ' (Sequence with';\n        if (dicomElement.undefinedLength) {\n          line += ' undefined';\n        } else {\n          line += ' explicit';\n        }\n        line += ' length #=';\n        line += dicomElement.value.length;\n        line += ')';\n      } else if (isOtherVR ||\n          dicomElement.vr === 'pi' ||\n          dicomElement.vr === 'UL' ||\n          dicomElement.vr === 'US' ||\n          dicomElement.vr === 'SL' ||\n          dicomElement.vr === 'SS' ||\n          dicomElement.vr === 'FL' ||\n          dicomElement.vr === 'FD' ||\n          dicomElement.vr === 'AT') {\n        // 'O'ther array, limited display length\n        line += ' ';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n      } else {\n        // default\n        line += ' [';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n        line += ']';\n      }\n    }\n\n    // align #\n    const nSpaces = 55 - line.length;\n    if (nSpaces > 0) {\n      for (let s = 0; s < nSpaces; ++s) {\n        line += ' ';\n      }\n    }\n    line += ' # ';\n    if (dicomElement.vl < 100) {\n      line += ' ';\n    }\n    if (dicomElement.vl < 10) {\n      line += ' ';\n    }\n    line += dicomElement.vl;\n    line += ', ';\n    line += deSize; //dictElement[1];\n    line += ' ';\n    if (tagName !== null) {\n      line += tagName;\n    } else {\n      line += 'Unknown Tag & Data';\n    }\n\n    let message = null;\n\n    // continue for sequence\n    if (dicomElement.vr === 'SQ') {\n      let item = null;\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n        item = dicomElement.value[l];\n        const itemKeys = Object.keys(item);\n        if (itemKeys.length === 0) {\n          continue;\n        }\n\n        // get the item element\n        const itemTag = getItemTag();\n        const itemElement = item['FFFEE000'];\n        message = '(Item with';\n        if (itemElement.undefinedLength) {\n          message += ' undefined';\n        } else {\n          message += ' explicit';\n        }\n        message += ' length #=' + (itemKeys.length - 1) + ')';\n        itemElement.value = [message];\n        itemElement.vr = 'na';\n\n        line += '\\n';\n        line += this.#getElementAsString(itemTag, itemElement, prefix + '  ');\n\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n          const itemTag = getTagFromKey(itemKeys[m]);\n          if (itemKeys[m] !== 'xFFFEE000') {\n            line += '\\n';\n            line += this.#getElementAsString(itemTag, item[itemKeys[m]],\n              prefix + '    ');\n          }\n        }\n\n        message = '(ItemDelimitationItem';\n        if (!itemElement.undefinedLength) {\n          message += ' for re-encoding';\n        }\n        message += ')';\n        const itemDelimTag = getItemDelimitationItemTag();\n        const itemDelimElement = {\n          vr: 'na',\n          vl: '0',\n          value: [message]\n        };\n        line += '\\n';\n        line += this.#getElementAsString(\n          itemDelimTag, itemDelimElement, prefix + '  ');\n\n      }\n\n      message = '(SequenceDelimitationItem';\n      if (!dicomElement.undefinedLength) {\n        message += ' for re-encod.';\n      }\n      message += ')';\n      const sqDelimTag = getSequenceDelimitationItemTag();\n      const sqDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += this.#getElementAsString(sqDelimTag, sqDelimElement, prefix);\n    } else if (isPixSequence) {\n      // pixel sequence\n      let pixItem = null;\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n        pixItem = dicomElement.value[n];\n        line += '\\n';\n        pixItem.vr = 'pi';\n        line += this.#getElementAsString(\n          getPixelDataTag(), pixItem, prefix + '  ');\n      }\n\n      const pixDelimTag = getSequenceDelimitationItemTag();\n      const pixDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: ['(SequenceDelimitationItem)']\n      };\n      line += '\\n';\n      line += this.#getElementAsString(pixDelimTag, pixDelimElement, prefix);\n    }\n\n    return prefix + line;\n  }\n\n  /**\n   * Get a DICOM Element value from a tag name.\n   * Uses the DICOM dictionary.\n   *\n   * @param {string} name The tag name.\n   * @returns {object} The DICOM element value.\n   */\n  getFromName(name) {\n    let value = null;\n    const tag = getTagFromDictionary(name);\n    // check that we are not at the end of the dictionary\n    if (tag !== null) {\n      value = this.getFromKey(tag.getKey());\n    }\n    return value;\n  }\n\n} // class DicomElementsWrapper\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {object} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit !== 'undefined') {\n    const modality = elements['00080060'].value[0];\n    if (modality === 'CT') {\n      unit = 'HU';\n    }\n  }\n  return unit;\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {object} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dtDate = getDate({value: [dtValue.substring(0, 8)]});\n  const dtTime = dtValue.length >= 9\n    ? getTime({value: [dtValue.substring(8)]}) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Check an input tag.\n *\n * @param {object} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] The expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nfunction checkTag(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n\n/**\n * Do the input elements allow for PET SUV calculation.\n *\n * @param {object} elements The DICOM elements to check.\n * @returns {string} A warning if the elements are not as expected.\n */\nexport function canGetSuvFactor(elements) {\n  let warning = '';\n\n  // RadiopharmaceuticalInformationSequence (type2)\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements['00540016'];\n  warning += checkTag(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0]['00181074'];\n    warning += checkTag(totalDoseEl, totalDoseStr);\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0]['00181075'];\n    warning += checkTag(halfLifeEl, halfLifeStr);\n  }\n  // PatientWeight (type3, kilograms)\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements['00101030'];\n  warning += checkTag(patWeightEl, patientWeightStr);\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements['00280051'];\n  warning += checkTag(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements['00541102'];\n  warning += checkTag(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements['00541001'];\n  warning += checkTag(unitEl, unitTagStr, ['BQML']);\n\n  // series date/time must be before acquisition date/time\n\n  // AcquisitionDate (type3)\n  const acqDateEl = elements['00080022'];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements['00080032'];\n\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year, acqDateObj.monthIndex, acqDateObj.day,\n      acqTimeObj.hours, acqTimeObj.minutes,\n      acqTimeObj.seconds, acqTimeObj.milliseconds\n    );\n\n    // SeriesDate (type1 for PET)\n    const seriesDateEl = elements['00080021'];\n    // SeriesTime (type1 for PET)\n    const seriesTimeEl = elements['00080031'];\n    const seriesDateObj = getDate(seriesDateEl);\n    const seriesTimeObj = getTime(seriesTimeEl);\n    const seriesDate = new Date(\n      seriesDateObj.year, seriesDateObj.monthIndex, seriesDateObj.day,\n      seriesTimeObj.hours, seriesTimeObj.minutes,\n      seriesTimeObj.seconds, seriesTimeObj.milliseconds\n    );\n\n    if (seriesDate > acqDate) {\n      warning += ' Series date/time is after Aquisition date/time';\n    }\n  }\n\n  if (warning.length !== 0) {\n    warning = 'Cannot calculate PET SUV:' + warning;\n  }\n  return warning;\n}\n\n/**\n * Get the PET SUV factor.\n *\n * @see https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf\n * (from https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)#SUV_Calculation )\n * @param {object} elements The DICOM elements.\n * @returns {number} The factor.\n */\nexport function getSuvFactor(elements) {\n\n  // SeriesDate (type1 for PET)\n  const seriesDateEl = elements['00080021'];\n  const seriesDateObj = getDate(seriesDateEl);\n  // SeriesTime (type1 for PET)\n  const seriesTimeEl = elements['00080031'];\n  const seriesTimeObj = getTime(seriesTimeEl);\n\n  // RadiopharmaceuticalInformationSequence (type2)\n  const radioInfoSq = elements['00540016'];\n  if (radioInfoSq.value.length !== 1) {\n    console.warn(\n      'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.');\n  }\n  // RadiopharmaceuticalStartDateTime (type3)\n  const radioStartDateTimeEl = radioInfoSq.value[0]['00181078'];\n  let radioStartDateObj;\n  let radioStartTimeObj;\n  if (typeof radioStartDateTimeEl === 'undefined') {\n    radioStartDateObj = seriesDateObj;\n    // RadiopharmaceuticalStartTime (type3)\n    const radioStartTimeEl = radioInfoSq.value[0]['00181072'];\n    radioStartTimeObj = getTime(radioStartTimeEl);\n  } else {\n    const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n    radioStartDateObj = radioStartDateTime.date;\n    radioStartTimeObj = radioStartDateTime.time;\n  }\n  if (typeof radioStartTimeObj === 'undefined') {\n    radioStartTimeObj = {\n      hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n    };\n  }\n  const radioStart = new Date(\n    radioStartDateObj.year,\n    radioStartDateObj.monthIndex,\n    radioStartDateObj.day,\n    radioStartTimeObj.hours,\n    radioStartTimeObj.minutes,\n    radioStartTimeObj.seconds,\n    radioStartTimeObj.milliseconds\n  );\n\n  // RadionuclideTotalDose (type3, Bq)\n  const totalDoseEl = radioInfoSq.value[0]['00181074'];\n  // RadionuclideHalfLife (type3, seconds)\n  const halfLifeEl = radioInfoSq.value[0]['00181075'];\n  // PatientWeight (type3, kilograms)\n  const patWeightEl = elements['00101030'];\n\n  // Series date/time\n  const scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n  // Date diff is in milliseconds\n  const decaySeconds = (scanStart.getTime() - radioStart.getTime()) / 1000;\n  const decay = Math.pow(2,\n    (-decaySeconds / parseFloat(halfLifeEl.value[0]))\n  );\n  const decayedDose = totalDoseEl.value[0] * decay;\n  // factor is grams / Bq\n  const suvFactor = (patWeightEl.value[0] * 1000) / decayedDose;\n\n  return suvFactor;\n}\n\n/**\n * Get the file list from a DICOMDIR\n *\n * @param {object} data The buffer data of the DICOMDIR\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {object} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\nimport {Image} from './image';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor,\n  getSuvFactor,\n  canGetSuvFactor\n} from '../dicom/dicomElementsWrapper';\nimport {Vector3D} from '../math/vector';\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(dicomElements) {\n    // will throw if columns or rows is not defined\n    getImage2DSize(dicomElements);\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dicomElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // frames\n    const frames = dicomElements['00280008'];\n    if (frames) {\n      sizeValues.push(frames.value[0]);\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dicomElements);\n\n    // TransferSyntaxUID\n    const syntax = dicomElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dicomElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // slice orientation (cosines are matrices' columns)\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n    const imageOrientationPatient = dicomElements['00200037'];\n    let orientationMatrix;\n    if (typeof imageOrientationPatient !== 'undefined') {\n      const rowCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[0]),\n        parseFloat(imageOrientationPatient.value[1]),\n        parseFloat(imageOrientationPatient.value[2]));\n      const colCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[3]),\n        parseFloat(imageOrientationPatient.value[4]),\n        parseFloat(imageOrientationPatient.value[5]));\n      const normal = rowCosines.crossProduct(colCosines);\n      /* eslint-disable array-element-newline */\n      orientationMatrix = new Matrix33([\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n      ]);\n      /* eslint-enable array-element-newline */\n    }\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dicomElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dicomElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dicomElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dicomElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dicomElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dicomElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dicomElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n    const modality = dicomElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n\n    // PET SUV\n    let intensityFactor = 1;\n    if (modality.value[0] === 'PT') {\n      const warn = canGetSuvFactor(dicomElements);\n      if (warn.length === 0) {\n        intensityFactor = getSuvFactor(dicomElements);\n        logger.info('Applying PET SUV calibration: ' + intensityFactor);\n        slope *= intensityFactor;\n        intercept *= intensityFactor;\n      } else {\n        logger.warn(warn);\n      }\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    const sopClassUID = dicomElements['00080016'];\n    if (typeof sopClassUID !== 'undefined') {\n      meta.SOPClassUID = sopClassUID.value[0];\n    }\n    const studyUID = dicomElements['0020000D'];\n    if (typeof studyUID !== 'undefined') {\n      meta.StudyInstanceUID = studyUID.value[0];\n    }\n    const seriesUID = dicomElements['0020000E'];\n    if (typeof seriesUID !== 'undefined') {\n      meta.SeriesInstanceUID = seriesUID.value[0];\n    }\n    const bits = dicomElements['00280101'];\n    if (typeof bits !== 'undefined') {\n      meta.BitsStored = bits.value[0];\n    }\n    const pixelRep = dicomElements['00280103'];\n    if (typeof pixelRep !== 'undefined') {\n      meta.PixelRepresentation = pixelRep.value[0];\n    }\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    const pixelUnit = getPixelUnit(dicomElements);\n    if (typeof pixelUnit !== 'undefined') {\n      meta.pixelUnit = pixelUnit;\n    }\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (typeof frameOfReferenceUID !== 'undefined') {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dicomElements['00281050'];\n    const windowWidth = dicomElements['00281051'];\n    const windowCWExplanation = dicomElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        let width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          width *= intensityFactor;\n          if (width < 1) {\n            width = 1;\n          }\n          windowPresets[name] = {\n            wl: [new WindowCenterAndWidth(\n              center * intensityFactor,\n              width\n            )],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      let redLut = dicomElements['00281201'];\n      let greenLut = dicomElements['00281202'];\n      let blueLut = dicomElements['00281203'];\n      // check red palette descriptor (should all be equal)\n      const descriptor = dicomElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n              descriptor.length === 3) {\n        if (descriptor[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          const vlSize = redLut.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dicomElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLut.map(scaleTo8);\n            greenLut = greenLut.map(scaleTo8);\n            blueLut = blueLut.map(scaleTo8);\n          }\n        } else if (descriptor[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLut.slice(0);\n          redLut = new Uint8Array(clone.buffer);\n          clone = greenLut.slice(0);\n          greenLut = new Uint8Array(clone.buffer);\n          clone = blueLut.slice(0);\n          blueLut = new Uint8Array(clone.buffer);\n        }\n      }\n      // set the palette\n      meta.paletteLut = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dicomElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","import {getImage2DSize} from '../dicom/dicomElementsWrapper';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\nimport {Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab\n} from '../utils/colour';\nimport {Size} from './size';\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {object} rootElement The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(rootElement, tagDefinition) {\n  const element = rootElement[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: 'x00020010',\n    type: '1',\n    enum: ['1.2.840.10008.1.2.1']\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: 'x00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: 'x00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: 'x00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: 'x00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: 'x00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: 'x00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: 'x00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: 'x00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: 'x00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: 'x00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nfunction getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {object} rootElement The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nfunction getDimensionOrganization(rootElement) {\n  // Dimension Organization Sequence (required)\n  const orgSq = rootElement['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = rootElement['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A code object.\n */\nfunction getCode(element) {\n  // meaning -> CodeMeaning (type1)\n  const code = {\n    meaning: element['00080104'].value[0]\n  };\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (element['00080100']) {\n    code.value = element['00080100'].value[0];\n  } else if (element['00080119']) {\n    code.longValue = element['00080119'].value[0];\n  } else if (element['00080120']) {\n    code.urnValue = element['00080120'].value[0];\n  } else {\n    throw Error('Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (element['00080102']) {\n      code.schemeDesignator = element['00080102'].value[0];\n    } else {\n      throw Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A segment object.\n */\nfunction getSegment(element) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = {\n    number: element['00620004'].value[0],\n    label: element['00620005'].value[0],\n    algorithmType: element['00620008'].value[0]\n  };\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (element['00620009']) {\n    segment.algorithmName = element['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof element['0062000C'] !== 'undefined') {\n    segment.displayValue = element['006200C'].value;\n  } else if (typeof element['0062000D'] !== 'undefined') {\n    const cielabElement = element['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof element['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(element['00620003'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof element['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(element['0062000F'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof element['00620020'] !== 'undefined') {\n    segment.trackingId = element['00620020'].value[0];\n    segment.trackingUid = element['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isSimilar = false;\n    } else {\n      isSimilar = isSimilar ||\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {object} measure The dicom element.\n * @returns {Spacing} A spacing object.\n */\nfunction getSpacingFromMeasure(measure) {\n  // Pixel Spacing\n  if (typeof measure['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = measure['00280030'];\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[0]),\n    parseFloat(pixelSpacing.value[1])\n  ];\n  // Slice Thickness\n  if (typeof measure['00180050'] !== 'undefined') {\n    spacingValues.push(parseFloat(measure['00180050'].value[0]));\n  } else if (typeof measure['00180088'] !== 'undefined') {\n    // Spacing Between Slices\n    spacingValues.push(parseFloat(measure['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {object} groupItem The dicom element.\n * @returns {object} A frame information object.\n */\nfunction getSegmentFrameInfo(groupItem) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof groupItem['00089124'] !== 'undefined') {\n    const derivationImageSq = groupItem['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push(sourceImages);\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = groupItem['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = groupItem['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = segmentIdSq[0]['0062000B'].value[0];\n  // Plane Position Sequence (required, only one)\n  const planePosSq = groupItem['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = {\n    dimIndex: dimIndex,\n    imagePosPat: imagePosPat,\n    derivationImages: derivationImages,\n    refSegmentNumber: refSegmentNumber\n  };\n  // Plane Orientation Sequence\n  if (typeof groupItem['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = groupItem['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof groupItem['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = groupItem['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /*\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} _dicomElements The DICOM tags.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dicomElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dicomElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dicomElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dicomElements);\n\n    // Segment Sequence\n    const segSequence = dicomElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayValue.r !== 'undefined' &&\n        typeof segment.displayValue.g !== 'undefined' &&\n        typeof segment.displayValue.b !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dicomElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dicomElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // use calculated spacing\n    let newSpacing = spacing;\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      frameOrigins, orientationMatrix, false);\n    const spacingValues = spacing.getValues();\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      geoSliceSpacing !== spacingValues[2]) {\n      spacingValues[2] = geoSliceSpacing;\n      newSpacing = new Spacing(spacingValues);\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isNotSmall = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isNotSmall(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n    const uids = [0];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m);\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      const pixelValue = frameSegment.displayValue;\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = pixelValue.r;\n            buffer[offset + 1] = pixelValue.g;\n            buffer[offset + 2] = pixelValue.b;\n          } else {\n            buffer[offset] = pixelValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    // Study\n    meta.StudyDate = dicomElements['00080020'].value[0];\n    meta.StudyTime = dicomElements['00080030'].value[0];\n    meta.StudyInstanceUID = dicomElements['0020000D'].value[0];\n    meta.StudyID = dicomElements['00200010'].value[0];\n    // Series\n    meta.SeriesInstanceUID = dicomElements['0020000E'].value[0];\n    meta.SeriesNumber = dicomElements['00200011'].value[0];\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = dicomElements['00080090'].value[0];\n    // patient info\n    meta.PatientName = dicomElements['00100010'].value[0];\n    meta.PatientID = dicomElements['00100020'].value[0];\n    meta.PatientBirthDate = dicomElements['00100030'].value[0];\n    meta.PatientSex = dicomElements['00100040'].value[0];\n    // Enhanced General Equipment Module\n    meta.Manufacturer = dicomElements['00080070'].value[0];\n    meta.ManufacturerModelName = dicomElements['00081090'].value[0];\n    meta.DeviceSerialNumber = dicomElements['00181000'].value[0];\n    meta.SoftwareVersions = dicomElements['00181020'].value[0];\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dicomElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dicomElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {Array}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\n   *   1:RRR...GGG...BBB...).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {object}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {object}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {Array} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(this.#rsi);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {object} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {object} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|object} value The value to check.\n   * @returns {Array} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    if (this.#numberOfComponents === 1) {\n      value = [value];\n    } else if (this.#numberOfComponents === 3 &&\n      typeof value.r !== 'undefined') {\n      value = [value.r, value.g, value.b];\n    }\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== value[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {Array} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this.#dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this.#rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {object} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {object} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsets List of offsets where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsets(offsets, value) {\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      this.#buffer[offset] = value.r;\n      this.#buffer[offset + 1] = value.g;\n      this.#buffer[offset + 2] = value.b;\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object|Array} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (typeof value !== 'undefined' &&\n        typeof value.r !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      } else {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagechange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {View} from './view';\nimport {lut} from './luts';\nimport {\n  WindowCenterAndWidth,\n  defaultPresets\n} from './windowCenterAndWidth';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dicomElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setDefaultColourMap(lut.invPlain);\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      const paletteLut = image.getMeta().paletteLut;\n      if (typeof (paletteLut) !== 'undefined') {\n        view.setDefaultColourMap(paletteLut);\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowCenterAndWidth(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLut} from './windowLut';\nimport {lut} from './luts';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {Matrix33} from '../math/matrix';\nimport {Point} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {Array}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {object} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {object}\n   */\n  #windowLut;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {object}\n   */\n  #currentWl = null;\n\n  /**\n   * colour map.\n   *\n   * @type {object}\n   */\n  #colourMap = lut.plain;\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {object}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to 0.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {*} _value The pixel value. Can be a number for monochrome\n   *  data or an array for RGB data.\n   * @param {number} _index The data index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  getCurrentWindowLut() {\n    // get the current window level\n    let wl;\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      const currentIndex = this.getCurrentIndex();\n      // get the preset for this slice\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\n    }\n    // regular case\n    if (typeof wl === 'undefined') {\n      // if no current, use first id\n      if (!this.#currentWl) {\n        this.setWindowLevelPresetById(0, true);\n      }\n      wl = this.#currentWl;\n    }\n\n    // get the window lut\n    if (typeof this.#windowLut === 'undefined') {\n      // if the image rsi is not constant, the iterator will use\n      //  rescaled values -> no need to handle non constant rsi here\n      let rsi;\n      let isDiscrete;\n      if (this.#image.isConstantRSI()) {\n        rsi = this.#image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const rescaleLut = new RescaleLut(\n        rsi,\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      this.#windowLut = new WindowLut(\n        rescaleLut,\n        this.#image.getMeta().IsSigned,\n        isDiscrete);\n    }\n\n    // update lut window level if not present or different from previous\n    const lutWl = this.#windowLut.getWindowLevel();\n    if (typeof lutWl === 'undefined' || !wl.equals(lutWl)) {\n      // set lut window level\n      this.#windowLut.setWindowLevel(wl);\n      // fire change event\n      if (typeof lutWl === 'undefined' ||\n        lutWl.getWidth() !== wl.getWidth() ||\n        lutWl.getCenter() !== wl.getCenter()) {\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [wl.getCenter(), wl.getWidth()],\n          wc: wl.getCenter(),\n          ww: wl.getWidth(),\n          skipGenerate: true\n        });\n      }\n    }\n\n    // return\n    return this.#windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {object} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Set the default colour map.\n   *\n   * @param {object} map The colour map.\n   */\n  setDefaultColourMap(map) {\n    this.#colourMap = map;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n          this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {object} The colour map of the image.\n   */\n  getColourMap() {\n    return this.#colourMap;\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {object} map The colour map of the image.\n   * @fires View#colourchange\n   */\n  setColourMap(map) {\n    this.#colourMap = map;\n    /**\n     * Color change event.\n     *\n     * @event View#colourchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     * @property {number} wc The new window center value.\n     * @property {number} ww The new window wdth value.\n     */\n    this.#fireEvent({\n      type: 'colourchange',\n      wc: this.getCurrentWindowLut().getWindowLevel().getCenter(),\n      ww: this.getCurrentWindowLut().getWindowLevel().getWidth()\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the origin at a given position.\n   *\n   * @param {Point} position The position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {Array} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(center, width, name, silent) {\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\n    if (width < 1) {\n      return;\n    }\n\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // new window level\n    const newWl = new WindowCenterAndWidth(center, width);\n\n    // check if new\n    const isNew = !newWl.equals(this.#currentWl);\n\n    // compare to previous if present\n    if (isNew) {\n      const isNewWidth = this.#currentWl\n        ? this.#currentWl.getWidth() !== width : true;\n      const isNewCenter = this.#currentWl\n        ? this.#currentWl.getCenter() !== center : true;\n      // assign\n      this.#currentWl = newWl;\n      this.#currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this.#windowPresets[name] !== 'undefined') {\n          this.#windowPresets[name].wl[0] = newWl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [newWl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      if (isNewWidth || isNewCenter) {\n        /**\n         * Window/level change event.\n         *\n         * @event View#wlchange\n         * @type {object}\n         * @property {Array} value The changed value.\n         * @property {number} wc The new window center value.\n         * @property {number} ww The new window wdth value.\n         * @property {boolean} skipGenerate Flag to skip view generation.\n         */\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [center, width],\n          wc: center,\n          ww: width,\n          skipGenerate: silent\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(\n      wl.getCenter(), wl.getWidth(), name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowCenterAndWidth} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowCenterAndWidth(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut(),\n        this.getColourMap()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getColourMap(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.decrementIndex(this.getScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.incrementIndex(this.getScrollIndex(), silent);\n  }\n\n} // class View\n","/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} windowLut The window/level LUT.\n * @param {object} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {object} offset3D The 3D offset as {x,y,z}.\n   * @returns {object} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {object} values Values as {x,y,z}.\n   * @returns {object} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {object} offset The previous offset as {x,y}.\n * @param {object} scale The previous scale as {x,y}.\n * @param {object} newScale The new scale as {x,y}.\n * @param {object} center The scale center as {x,y}.\n * @returns {object} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * Display position: {x,y}\n * Plane position: Index (access: get(i))\n * (world) Position: Point3D (access: getX, getY, getZ)\n *\n * Display -> World:\n * planePos = viewLayer.displayToPlanePos(displayPos)\n * -> compensate for layer scale and offset\n * pos = viewController.getPositionFromPlanePoint(planePos)\n *\n * World -> display\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\n * no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * List of layers.\n   *\n   * @type {Array}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y}.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y}.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = null;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * The target orientation matrix.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Set the target orientation.\n   *\n   * @param {Matrix33} orientation The orientation matrix.\n   */\n  setTargetOrientation(orientation) {\n    this.#targetOrientation = orientation;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    return this.#layers.length;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer} The layer.\n   */\n  getActiveViewLayer() {\n    return this.#layers[this.#activeViewLayerIndex];\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        if (this.#layers[i].getViewController().equalImageMeta(meta)) {\n          res.push(this.#layers[i]);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {Array} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        res.push(this.#layers[i].getDataIndex());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer} The layer.\n   */\n  getActiveDrawLayer() {\n    return this.#layers[this.#activeDrawLayerIndex];\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    this.#activeViewLayerIndex = index;\n  }\n\n  /**\n   * Set the active view layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveViewLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveViewLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    this.#activeDrawLayerIndex = index;\n  }\n\n  /**\n   * Set the active draw layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveDrawLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveDrawLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      viewLayer.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  #unbindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      viewLayer.removeEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.removeEventListener('renderstart', this.#fireEvent);\n    viewLayer.removeEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  #unbindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.removeEventListener('drawcreate', this.#fireEvent);\n    drawLayer.removeEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = null;\n    this.#activeDrawLayerIndex = null;\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this.#layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer');\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this.#unbindViewLayer(layer);\n      if (this.#activeViewLayerIndex === index) {\n        this.#activeViewLayerIndex = undefined;\n      }\n    } else {\n      this.#unbindDrawLayer(layer);\n      if (this.#activeDrawLayerIndex === index) {\n        this.#activeDrawLayerIndex = undefined;\n      }\n    }\n    // remove from storage\n    this.#layers.splice(index, 1);\n    // update html\n    const layerDiv = document.getElementById(layer.getId());\n    if (layerDiv) {\n      layerDiv.remove();\n    }\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    const layer0 = this.#layers[0];\n    const vc = layer0.getViewController();\n    const p2D = vc.getPlanePositionFromPosition(position);\n    const displayPos = layer0.planePosToDisplay(p2D.x, p2D.y);\n\n    const lineH = document.createElement('hr');\n    lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n    lineH.className = 'horizontal';\n    lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n    lineH.style.left = '0px';\n    lineH.style.top = displayPos.y + 'px';\n\n    const lineV = document.createElement('hr');\n    lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n    lineV.className = 'vertical';\n    lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n    lineV.style.left = (displayPos.x) + 'px';\n    lineV.style.top = '0px';\n\n    this.#containerDiv.appendChild(lineH);\n    this.#containerDiv.appendChild(lineV);\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    let div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-horizontal');\n    if (div) {\n      div.remove();\n    }\n    div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-vertical');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        this.#layers[j].removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[j].removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0 = null;\n    let baseViewLayerOrigin = null;\n    // update position for all layers except the source one\n    for (let i = 0; i < this.#layers.length; ++i) {\n\n      // update base offset (does not trigger redraw)\n      // TODO check draw layers update\n      let hasSetOffset = false;\n      if (this.#layers[i] instanceof ViewLayer) {\n        const vc = this.#layers[i].getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (!baseViewLayerOrigin) {\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n        } else {\n          if (vc.canSetPosition(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            const scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            const planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n\n            hasSetOffset =\n              this.#layers[i].setBaseOffset(scrollOffset, planeOffset);\n          }\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (this.#layers[i].getId() !== event.srclayerid) {\n        hasSetPos = this.#layers[i].setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        this.#layers[i].draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (let k = 0; k < this.#layers.length; ++k) {\n      if (this.#layers[k] instanceof ViewLayer) {\n        this.#layers[k].addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[k].addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the fit scale: the scale that fits the largest data.\n   *\n   * @returns {number|undefined} The fit scale.\n   */\n  calculateFitScale() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max size\n    const maxSize = this.getMaxSize();\n    if (typeof maxSize === 'undefined') {\n      return undefined;\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxSize.x,\n      this.#containerDiv.offsetHeight / maxSize.y\n    );\n  }\n\n  /**\n   * Set the layer group fit scale.\n   *\n   * @param {number} scaleIn The fit scale.\n   */\n  setFitScale(scaleIn) {\n    // get maximum size\n    const maxSize = this.getMaxSize();\n    // exit if none\n    if (typeof maxSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\n    };\n\n    // apply to layers\n    for (let j = 0; j < this.#layers.length; ++j) {\n      this.#layers[j].fitToContainer(scaleIn, containerSize, fitOffset);\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data size.\n   *\n   * @returns {object|undefined} The largest size as {x,y}.\n   */\n  getMaxSize() {\n    let maxSize = {x: 0, y: 0};\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        const size = this.#layers[j].getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {object} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setScale(this.#scale, center);\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {object} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {object} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setOffset(this.#offset);\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].draw();\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].display(flag);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper.\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {Array}\n   */\n  #segments;\n\n  /**\n   * List of ids of hidden segments.\n   *\n   * @type {Array}\n   */\n  #hiddenSegments = [];\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    this.#segments = mask.getMeta().custom.segments;\n  }\n\n  /**\n   * Check if a segment is part of the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {Array} numbers Array of segment numbers.\n   * @returns {Array} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        values.push(segment.displayValue);\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {object} The segment.\n   */\n  getSegment(segmentNumber) {\n    return this.#segments.find(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Get the inner segment list.\n   *\n   * @returns {Array} The list of segments.\n   */\n  getSegments() {\n    return this.#segments;\n  }\n\n  /**\n   * Set the inner segment list.\n   *\n   * @param {Array} list The segment list.\n   */\n  setSegments(list) {\n    this.#segments = list;\n  }\n\n  /**\n   * Set the hidden segment list.\n   * TODO: not sure if needed...\n   *\n   * @param {Array} list The list of hidden segment numbers.\n   */\n  setHiddenSegments(list) {\n    this.#hiddenSegments = list;\n  }\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number|undefined} The index in the array.\n   */\n  #getHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#getHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenSegments.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Segment is allready in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#getHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\n      const segment = this.getSegment(this.#hiddenSegments[i]);\n      if (typeof segment !== 'undefined') {\n        hiddenColours.push(segment.displayValue);\n      }\n    }\n\n    // create alpha function\n    return function (value/*, index*/) {\n      for (let i = 0; i < hiddenColours.length; ++i) {\n        if (value[0] === hiddenColours[i].r &&\n          value[1] === hiddenColours[i].g &&\n          value[2] === hiddenColours[i].b) {\n          return 0;\n        }\n      }\n      // default\n      return 255;\n    };\n  }\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {eventFn} cmdCallback The command event callback.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\n    const delcmd = new DeleteSegmentCommand(\n      this.#mask, this.getSegment(segmentNumber));\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    if (delcmd.isValid()) {\n      delcmd.execute();\n      // callback\n      exeCallback(delcmd);\n      // possibly hidden\n      if (this.isHidden(segmentNumber)) {\n        this.removeFromHidden(segmentNumber);\n      }\n    }\n  }\n\n} // class MaskSegmentHelper\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {object}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {Array}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {object} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    this.#offsets = mask.getOffsets(segment.displayValue);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {lut} from '../image/luts';\nimport {ListenerHandler} from '../utils/listen';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {Point, Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Associated data index.\n   *\n   * @type {number}\n   */\n  #index;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Mask segment helper.\n   *\n   * @type {MaskSegmentHelper}\n   */\n  #maskSegmentHelper;\n\n  // third dimension player ID (created by setInterval)\n  #playerID = null;\n  // associated data index\n  #dataIndex;\n\n  /**\n   * @param {View} view The associated view.\n   * @param {number} index The associated data index.\n   */\n  constructor(view, index) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n    this.#index = index;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#maskSegmentHelper =\n        new MaskSegmentHelper(view.getImage());\n    }\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {object} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return typeof this.#maskSegmentHelper !== 'undefined';\n  }\n\n  /**\n   * Get the mask segment helper.\n   *\n   * @returns {object} The helper.\n   */\n  getMaskSegmentHelper() {\n    return this.#maskSegmentHelper;\n  }\n\n  /**\n   * Apply the hidden segments list by setting\n   * the corresponding alpha function.\n   */\n  applyHiddenSegments() {\n    if (this.isMask) {\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\n    }\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, exeCallback) {\n    if (this.isMask) {\n      this.#maskSegmentHelper.deleteSegment(\n        segmentNumber, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this.#view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {Array} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (this.#playerID !== null);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  /**\n   * Get the origin at a given posittion.\n   *\n   * @param {Point} position The input position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   * @param {number} index The data index of the image.\n   */\n  setImage(img, index) {\n    this.#view.setImage(img);\n    this.#dataIndex = index;\n  }\n\n  /**\n   * Get the current spacing.\n   *\n   * @returns {Array} The 2D spacing.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing();\n    return [spacing.get(0), spacing.get(1)];\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position the input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let position = this.getCurrentIndex();\n    let rescaled = true;\n\n    // created oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      // generate slice values\n      const sliceIter = getSliceIterator(\n        image,\n        position,\n        rescaled,\n        orientation\n      );\n      const sliceValues = getIteratorValues(sliceIter);\n      // oriented geometry\n      const orientedSize = image.getGeometry().getSize(orientation);\n      const sizeValues = orientedSize.getValues();\n      sizeValues[2] = 1;\n      const sliceSize = new Size(sizeValues);\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\n      const spacingValues = orientedSpacing.getValues();\n      spacingValues[2] = 1;\n      const sliceSpacing = new Spacing(spacingValues);\n      const sliceOrigin = new Point3D(0, 0, 0);\n      const sliceGeometry =\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n      // slice image\n      // @ts-ignore\n      image = new Image(sliceGeometry, sliceValues);\n      // update position\n      position = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, position, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {Array} regions A list of regions.\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    const iter = getVariableRegionSliceIterator(\n      this.#view.getImage(),\n      this.getCurrentIndex(),\n      true, regions\n    );\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canWindowLevel() {\n    return this.#view.getImage().canWindowLevel();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    return this.#view.canSetPosition(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a position from a 2D (x,y) position.\n   *\n   * @param {number} x The column position.\n   * @param {number} y The row position.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(x, y) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(x, y, k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D (x,y) position from a position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {object} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return {\n      x: planePoint.getX(),\n      y: planePoint.getY(),\n    };\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {object} point2D The 2D position as {x,y}.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.#view.incrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.#view.decrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.#view.decrementScrollIndex(silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.#view.incrementScrollIndex(silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (this.#playerID === null) {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (this.#playerID !== null) {\n      clearInterval(this.#playerID);\n      this.#playerID = null;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {object} The window center and width.\n   */\n  getWindowLevel() {\n    return {\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\n    };\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window/level.\n   *\n   * @param {number} wc The window center.\n   * @param {number} ww The window width.\n   */\n  setWindowLevel(wc, ww) {\n    this.#view.setWindowLevel(wc, ww);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {object} The colour map.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {object} colourMap The colour map.\n   */\n  setColourMap(colourMap) {\n    this.#view.setColourMap(colourMap);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Set the colour map from a name.\n   *\n   * @param {string} name The name of the colour map to set.\n   */\n  setColourMapFromName(name) {\n    // check if we have it\n    if (!lut[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n    // enable it\n    this.setColourMap(lut[name]);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class ViewController\n","import {logger} from '../utils/logger';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get a HTML element associated to a container div.\n *\n * @param {string} containerDivId The id of the container div.\n * @param {string} name The name or id to find.\n * @returns {object} The found element or null.\n * @deprecated\n */\nexport function getElement(containerDivId, name) {\n  // get by class in the container div\n  const parent = document.getElementById(containerDivId);\n  if (!parent) {\n    return null;\n  }\n  const elements = parent.getElementsByClassName(name);\n  // getting the last element since some libraries (ie jquery-mobile) create\n  // span in front of regular tags (such as select)...\n  let element = elements[elements.length - 1];\n  // if not found get by id with 'containerDivId-className'\n  if (typeof element === 'undefined') {\n    element = document.getElementById(containerDivId + '-' + name);\n  }\n  return element;\n}\n\n/**\n * Overridalbe custom UI object for client defined UI.\n */\nexport const customUI = {\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {object} data The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog(data, callback) {\n    const textExpr = prompt('Label', data.textExpr);\n    if (textExpr !== null) {\n      data.textExpr = textExpr;\n      callback(data);\n    }\n  }\n};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Array} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push({\n      x: touches[i].pageX - offsetLeft,\n      y: touches[i].pageY - offsetTop\n    });\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Array} The array of offsets.\n */\nexport function getEventOffset(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  } else {\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\n    // between that event and the padding edge of the target node\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\n    positions.push({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n  }\n  return positions;\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * @see https://github.com/ivmartel/dwv/issues/902\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\n   *\n   * @type {boolean}\n   */\n  #imageSmoothingEnabled = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Set the imageSmoothingEnabled flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  enableImageSmoothing(flag) {\n    this.#imageSmoothingEnabled = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {number} index The associated data index.\n   */\n  setView(view, index) {\n    this.#dataIndex = index;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourchange', this.#onColourChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view, index);\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataIndex === event.dataid) {\n      this.#viewController.setImage(event.value[0], this.#dataIndex);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   */\n  onimagechange = (event) => {\n    // event.value = [index]\n    if (this.#dataIndex === event.dataid) {\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n    this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to an index.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {Index} The equivalent index.\n   */\n  displayToPlaneIndex(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return new Index([\n      Math.floor(planePos.x),\n      Math.floor(planePos.y)\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The de-scaled position as {x,y}.\n   */\n  displayToPlaneScale(x, y) {\n    return {\n      x: x / this.#scale.x,\n      y: y / this.#scale.y\n    };\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The plane position as {x,y}.\n   */\n  displayToPlanePos(x, y) {\n    const deScaled = this.displayToPlaneScale(x, y);\n    return {\n      x: deScaled.x + this.#offset.x,\n      y: deScaled.y + this.#offset.y\n    };\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The display position as {x,y}.\n   */\n  planePosToDisplay(x, y) {\n    return {\n      x: (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x,\n      y: (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y\n    };\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The main plane position as {x,y}.\n   */\n  displayToMainPlanePos(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return {\n      x: planePos.x - this.#baseOffset.x,\n      y: planePos.y - this.#baseOffset.y\n    };\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothingEnabled;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {object} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    let needsDraw = false;\n\n    // update canvas size if needed (triggers canvas reset)\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\n      }\n      // canvas size  change triggers canvas reset\n      this.#canvas.width = fitSize.x;\n      this.#canvas.height = fitSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n    // previous fit scale\n    const previousFitScale = this.#fitScale;\n    // previous scale without fit\n    const previousScale = {\n      x: this.#scale.x / this.#fitScale.x,\n      y: this.#scale.y / this.#fitScale.y\n    };\n    // fit scale\n    const newFitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // scale\n    const newScale = {\n      x: previousScale.x * newFitScale.x,\n      y: previousScale.y * newFitScale.y\n    };\n    // check if different\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x * previousFitScale.x / newFitScale.x,\n      y: this.#flipOffset.y * previousFitScale.y / newFitScale.y\n    };\n    // check if different\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update global offset\n      this.#offset = {\n        x: this.#viewOffset.x +\n          this.#baseOffset.x +\n          this.#zoomOffset.x +\n          this.#flipOffset.x,\n        y: this.#viewOffset.y +\n          this.#baseOffset.y +\n          this.#zoomOffset.y +\n          this.#flipOffset.y\n      };\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(\n        names[i], this.#fireEvent, {passive: true});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {getShadowColour} from '../utils/colour';\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {object}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {object}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {number} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {object} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {number} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {object} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {object} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {object} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {Konva.Layer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {number} id The id of the create draw.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {object}\n   */\n  #translation;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {Konva.Layer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {Konva.Layer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {object} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from '../math/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * Konva.\n *\n * @external Konva\n * @see https://konvajs.org/\n */\nimport Konva from 'konva';\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {object} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {Konva.Layer} konvaLayer The draw layer.\n   */\n  constructor(konvaLayer) {\n    this.#konvaLayer = konvaLayer;\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {object} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup = null;\n    if (posGroups.length === 1) {\n      posGroup = posGroups[0];\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {Array} A list of draw details as\n   *   {id, position, type, color, meta}\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      // @ts-ignore\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      // @ts-ignore\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        // @ts-ignore\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup, shape.className, this.#konvaLayer);\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {object} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    // @ts-ignore\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    // @ts-ignore\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    // @ts-ignore\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {object} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group, shapeDisplayName, this.#konvaLayer);\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    exeCallback(delcmd);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const groups = this.#konvaLayer.getChildren();\n    while (groups.length) {\n      this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\n    }\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  #drawController = null;\n\n  /**\n   * The plane helper.\n   *\n   * @type {object}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {object} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {object} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {object} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} index The associated data index.\n   */\n  initialise(size, spacing, index) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataIndex = index;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(konvaLayer);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    // update konva\n    this.#konvaStage.width(fitSize.x);\n    this.#konvaStage.height(fitSize.y);\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y / this.#fitScale.y\n    };\n    // update fit scale\n    this.#fitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // update scale\n    this.#konvaStage.scale({\n      x: previousScale.x * this.#fitScale.x,\n      y: previousScale.y * this.#fitScale.y\n    });\n\n    // update offsets\n    this.#viewOffset = {\n      x: fitOffset.x / this.#fitScale.x,\n      y: fitOffset.y / this.#fitScale.y\n    };\n    this.#konvaStage.offset({\n      x: this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toogleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {object} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {LayerGroup} from './layerGroup';\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setWindowLevel(event.value[0], event.value[1]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data index\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  // associated layer groups\n  #layerGroups = [];\n  // active layer group index\n  #activeLayerGroupIndex = null;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = null;\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this.#layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this.#layerGroups.splice(index, 1);\n    // update active index\n    if (this.#activeLayerGroupIndex === index) {\n      this.#activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Synchronise the fit scale of the group layers.\n   */\n  syncLayerGroupScale() {\n    let minScale;\n    const hasScale = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const scale = this.#layerGroups[i].calculateFitScale();\n      if (typeof scale !== 'undefined') {\n        hasScale.push(i);\n        if (typeof minScale === 'undefined' || scale < minScale) {\n          minScale = scale;\n        }\n      }\n    }\n    // exit if no scale\n    if (typeof minScale === 'undefined') {\n      return;\n    }\n    // apply min scale to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasScale.includes(j)) {\n        this.#layerGroups[j].setFitScale(minScale);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021)\n *   - store position as array\n *   - new draw position group key\n * - v0.4 (dwv 0.29.0, 06/2021)\n *   - move drawing details into meta property\n *   - remove scale center and translation, add offset\n * - v0.3 (dwv v0.23.0, 03/2018)\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation\n *   - new details structure: simple array of objects referenced by draw ids\n * - v0.2 (dwv v0.17.0, 12/2016)\n *   - adds draw details: array [nslices][nframes] of detail objects\n * - v0.1 (dwv v0.15.0, 07/2016)\n *   - adds version\n *   - drawings: array [nslices][nframes] with all groups\n * - initial release (dwv v0.10.0, 05/2015), no version number...\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings\n *   - drawings: array [nslices] with all groups\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {App} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': viewController.getWindowLevel().center,\n      'window-width': viewController.getWindowLevel().width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    viewController.setWindowLevel(\n      data['window-center'], data['window-width']);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(0); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3.\n * v0.2: one layer per slice/frame\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2.\n * v0.1: text on its own\n * v0.2: text as part of label\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3.\n * - v0.2: array [nslices][nframes] with all\n * - v0.3: simple array of objects referenced by draw ids\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4.\n * - v0.3: properties at group root\n * - v0.4: properties in group meta object\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: position as object\n * - v0.5: position as array\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: draw id as 'slice-0_frame-1'\n * - v0.5: draw id as '#2-0_#3-1''\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: 'base?query#fragment'\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\n * or encoded URI with base and key value/pairs:\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n * be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode.\n *   replaceMode can be:\n *   - key (default): keep the key\n *   - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {Array} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {Array} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // keydown listener\n    window.addEventListener('keydown',\n      this.#getOnMouch('window', 'keydown'), true);\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {object} layer The layer to listen to.\n   * @param {string} layerGroupDivId The associated layer group div id.\n   */\n  bindLayer(layer, layerGroupDivId) {\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n    // update class var\n    this.#boundLayers[layerGroupDivId] = layer;\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners.\n   *\n   * @param {object} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getOnMouch(layerId, eventType) {\n    // augment event with converted offsets\n    const augmentEventOffsets = function (event) {\n      // event offset(s)\n      const offsets = getEventOffset(event);\n      // should have at least one offset\n      event._x = offsets[0].x;\n      event._y = offsets[0].y;\n      // possible second\n      if (offsets.length === 2) {\n        event._x1 = offsets[1].x;\n        event._y1 = offsets[1].y;\n      }\n    };\n\n    const applySelectedTool = (event) => {\n      // make sure we have a tool\n      if (this.#selectedTool) {\n        const func = this.#selectedTool[event.type];\n        if (func) {\n          func(event);\n        }\n      }\n    };\n\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      let callback = null;\n      if (eventType === 'keydown') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else if (eventType === 'touchend') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else {\n        // mouse or touch events\n        callback = function (event) {\n          augmentEventOffsets(event);\n          applySelectedTool(event);\n        };\n      }\n      // store callback\n      this.#callbackStore[layerId][eventType] = callback;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {Array}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {object} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for request + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\n   *    to the request\n   *  - batchSize: the size of the request url batch\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      this.#addLoadend();\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * @external XMLHttpRequest\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * @external Worker\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * @external JpegImage\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * @external jpeg\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * @external JpxImage\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      dataIndex: info.dataIndex,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factoryWarnings = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {object} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory} The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    // mask factory for DICOM SEG\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n    // default image factory\n    if (typeof factory === 'undefined') {\n      factory = new ImageFactory();\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dicomElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#getFactory(dicomElements);\n    // create the image\n    try {\n      const image = factory.create(\n        dicomElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: dicomElements\n        },\n        source: origin,\n        warn: this.#factoryWarnings[index]\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.dataIndex,\n      source: origin\n    });\n\n    const dataIndex = event.dataIndex;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n\n    this.onloadstart({\n      source: origin,\n      dataIndex: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let warning;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      const factory = this.#getFactory(dicomParser.getDicomElements());\n      warning = factory.checkElements(dicomParser.getDicomElements());\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = (algoName !== null);\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\n    this.#factoryWarnings[dataIndex] = warning;\n\n    if (needDecompression) {\n      // gather pixel buffer meta data\n      const bitsAllocated =\n        dicomParser.getDicomElements()['00280100'].value[0];\n      const pixelRepresentation =\n        dicomParser.getDicomElements()['00280103'].value[0];\n      const pixelMeta = {\n        bitsAllocated: bitsAllocated,\n        isSigned: (pixelRepresentation === 1)\n      };\n      const columnsElement = dicomParser.getDicomElements()['00280011'];\n      const rowsElement = dicomParser.getDicomElements()['00280010'];\n      if (typeof columnsElement !== 'undefined' &&\n        typeof rowsElement !== 'undefined') {\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n      }\n      const samplesPerPixelElement =\n        dicomParser.getDicomElements()['00280002'];\n      if (typeof samplesPerPixelElement !== 'undefined') {\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n      }\n      const planarConfigurationElement =\n        dicomParser.getDicomElements()['00280006'];\n      if (typeof planarConfigurationElement !== 'undefined') {\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n      }\n\n      // number of items\n      const numberOfItems = pixelBuffer.length;\n\n      // setup the decoder (one decoder per all converts)\n      if (this.#pixelDecoder === null) {\n        this.#pixelDecoder = new PixelBufferDecoder(\n          algoName, numberOfItems);\n        // callbacks\n        // pixelDecoder.ondecodestart: nothing to do\n        this.#pixelDecoder.ondecodeditem = (event) => {\n          this.#onDecodedItem(event);\n          // send onload and onloadend when all items have been decoded\n          if (event.itemNumber + 1 === event.numberOfItems) {\n            this.onload(event);\n            this.onloadend(event);\n          }\n        };\n        // pixelDecoder.ondecoded: nothing to do\n        // pixelDecoder.ondecodeend: nothing to do\n        this.#pixelDecoder.onerror = this.onerror;\n        this.#pixelDecoder.onabort = this.onabort;\n      }\n\n      // launch decode\n      for (let i = 0; i < numberOfItems; ++i) {\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n          {\n            itemNumber: i,\n            numberOfItems: numberOfItems,\n            dataIndex: dataIndex\n          }\n        );\n      }\n    } else {\n      // no decompression\n      // send progress\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: dataIndex,\n        source: origin\n      });\n      // generate image\n      this.#generateImage(dataIndex, origin);\n      // send load events\n      this.onload({\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous)\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if:\n   *  - the url has a 'contentType' and it is 'application/dicom'\n   *    (as in wado urls)\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/dicom'\n      const isDicom = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/dicom') &&\n          element.value[18] !== '+';\n      };\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined' &&\n      mem['Content-Type'] === 'application/dicom') {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeader, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/json' or 'application/dicom+json\n      const isJson = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/json') &&\n          startsWith(element.value, 'application/dicom+json');\n      };\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('json')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] The url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      const isMultipart = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'multipart/related');\n      };\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * if abort is triggered, all image.onload callbacks have to be cancelled\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'image/'\n      const isImage = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'image/');\n      };\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n * url example (cors enabled):\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'video/'\n      const isVideo = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'video/');\n      };\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * @external JSZip\n * @see https://github.com/Stuk/jszip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback\n   *\n   * @param {ArrayBuffer} content unzipped file image\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/zip'\n      const isZip = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/zip');\n      };\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('zip')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {Array}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {object} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for reader + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {Array} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * @external FileReader\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      reader.onloadend = this.#addLoadend;\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * load counter.\n   *\n   * @type {number}\n   */\n  #counter = -1;\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Get the next load id.\n   *\n   * @returns {number} The next id.\n   */\n  #getNextLoadId() {\n    ++this.#counter;\n    return this.#counter;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   */\n  loadFiles(files) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0]);\n    } else {\n      this.#loadImageFiles(files);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  loadURLs(urls, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], options);\n    } else {\n      this.#loadImageUrls(urls, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   */\n  loadImageObject(data) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image');\n  }\n\n  /**\n   * Abort the current loaders.\n   */\n  abort() {\n    const keys = Object.keys(this.#currentLoaders);\n    for (let i = 0; i < keys.length; ++i) {\n      this.#currentLoaders[i].loader.abort();\n      delete this.#currentLoaders[i];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {FileList} files The list of image files to load.\n   */\n  #loadImageFiles(files) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image');\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   */\n  #loadStateFile(file) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state');\n  }\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {Array|FileList} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, options) {\n    const eventInfo = {\n      loadtype: loadType,\n    };\n\n    // load id\n    const loadId = this.#getNextLoadId();\n    eventInfo.loadid = loadId;\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[loadId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        loadid: loadId\n      };\n      if (typeof this.#currentLoaders[loadId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[loadId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[loadId] !== 'undefined' &&\n        this.#currentLoaders[loadId].isFirstItem) {\n        this.#currentLoaders[loadId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[loadId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        loadid: loadId\n      });\n      this.onloadend({\n        loadid: loadId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of {image, meta}.\n   *\n   * @type {object}\n   */\n  #data = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the length of the data storage.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return Object.keys(this.#data).length;\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#data = [];\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @returns {object} The data.\n   */\n  get(index) {\n    return this.#data[index];\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image to set.\n   */\n  setImage(index, image) {\n    this.#data[index].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: index\n    });\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(index, image, meta) {\n    if (typeof this.#data[index] !== 'undefined') {\n      throw new Error('Index already used in storage: ' + index);\n    }\n    // store the new image\n    this.#data[index] = {\n      image: image,\n      meta: meta\n    };\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(index, image, meta) {\n    const dataToUpdate = this.#data[index];\n\n    // add slice to current image\n    dataToUpdate.image.appendSlice(image);\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input index\n   * to the event value.\n   *\n   * @param {number} index The data index.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(index) {\n    return (event) => {\n      event.dataid = index;\n      this.#fireEvent(event);\n    };\n  }\n\n} // ImageController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {Array} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {number}\n   */\n  #dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  #configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {Array}\n   */\n  #eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  #isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  #data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  #currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {number} dataId The associated data ID.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this.#app = app;\n    this.#dataId = dataId;\n    this.#configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this.#configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this.#configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this.#eventNames.includes(eventType)) {\n            this.#eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this.#data = [];\n    this.#currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this.#data[dataUid] = createOverlayData(data, this.#configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this.#data[dataUid] = createOverlayDataForDom(data, this.#configs);\n    }\n    // store uid\n    this.#currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  #onSliceChange = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this.#currentDataUid !== event.data.imageUid) {\n      this.#currentDataUid = event.data.imageUid;\n      this.#updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners\n   */\n  #updateData = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this.#data[this.#currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this.#currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    // fire valuechange for listeners\n    this.#fireEvent({type: 'valuechange', data: sliceOverlayData});\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this.#isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this.#app.addEventListener('positionchange', this.#onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.addEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this.#app.removeEventListener('positionchange', this.#onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.removeEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent(event) {\n    this.#listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated wheel event deltaY.\n   *\n   * @type {number}\n   */\n  #wheelDeltaY = 0;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel(event) {\n    // deltaMode (deltaY values on my machine...):\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\n    // - 2 (DOM_DELTA_PAGE): ??\n    // TODO: check scroll event\n    let scrollMin = 52;\n    if (event.deltaMode === 1) {\n      scrollMin = 5.99;\n    }\n    this.#wheelDeltaY += event.deltaY;\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\n      return;\n    } else {\n      this.#wheelDeltaY = 0;\n    }\n\n    const up = event.deltaY < 0 ? true : false;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const imageSize = viewController.getImageSize();\n    if (imageSize.canScroll3D()) {\n      if (up) {\n        viewController.incrementScrollIndex();\n      } else {\n        viewController.decrementScrollIndex();\n      }\n    } else if (imageSize.moreThanOne(3)) {\n      if (up) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","/**\n * Namespace for translation function.\n * (in a namespace to allow for override from client)\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    // defaut expects something like 'unit.cm2'\n    const unit = {\n      mm: 'mm',\n      cm2: 'cm²',\n      degree: '°'\n    };\n    const props = key.split('.');\n    if (props.length !== 2) {\n      throw new Error('Unexpected translation key length.');\n    }\n    if (props[0] !== 'unit') {\n      throw new Error('Unexpected translation key prefix.');\n    }\n    return unit[props[1]];\n  }\n\n};\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacingX, spacingY) {\n    let wlen = null;\n    if (spacingX !== null && spacingY !== null) {\n      const dxs = this.getDeltaX() * spacingX;\n      const dys = this.getDeltaY() * spacingY;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing[0], spacing[1]);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","/**\n * Get the minimum, maximum, mean and standard deviation\n * of an array of values.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {Array} array The array of values to extract stats from.\n * @param {Array} flags A list of stat values to calculate.\n * @returns {object} A stats object.\n */\nexport function getStats(array, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(array);\n  } else {\n    return getSimpleStats(array);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {Array} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A simple stats object.\n */\nfunction getSimpleStats(array) {\n  let min = array[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = array.length;\n  for (let i = 0; i < length; ++i) {\n    val = array[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  const variance = sumSqr / length - mean * mean;\n  const stdDev = Math.sqrt(variance);\n\n  return {\n    min: min,\n    max: max,\n    mean: mean,\n    stdDev: stdDev\n  };\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A full stats object.\n */\nfunction getFullStats(array) {\n  // get simple stats\n  const stats = getSimpleStats(array);\n\n  // sort array... can get slow...\n  array.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(array, 0.5);\n  stats.p25 = getPercentile(array, 0.25);\n  stats.p75 = getPercentile(array, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n * that lie between data points.\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\n *\n * @param {Array} array The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile,\n */\nfunction getPercentile(array, ratio) {\n  // check input\n  if (array.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return array[0];\n  } else if (ratio === 1) {\n    return array[array.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (array.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = array[i0];\n  const v1 = array[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {object} style The application style.\n * @returns {object} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {object}\n   */\n  #shape = null;\n\n  /**\n   * Edited view controller. Used for quantification update.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Draw event callback.\n   *\n   * @type {eventFn}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {object} inshape The shape to edit.\n   */\n  setShape(inshape) {\n    this.#shape = inshape;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {object} vc The associated view controller.\n   */\n  setViewController(vc) {\n    this.#viewController = vc;\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {object} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {object} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {object} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {object} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      const layerDetails = getLayerDetailsFromEvent(event.evt);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the anchor position\n      validateAnchorPosition(drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        anchor.getLayer(),\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {object} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getEventOffset,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  canNodeChangeColour,\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw layer group structure. The layout is:\n *\n * drawLayer\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\n *       |_ shape: name=\"shape\"\n *       |_ label: name=\"label\"\n *       |_ extra: line tick, protractor arc...\n *\n * Discussion:\n * - posGroup > shapeGroup\n *    pro: slice/frame display: 1 loop\n *    cons: multi-slice shape splitted in positionGroups\n * - shapeGroup > posGroup\n *    pros: more logical\n *    cons: slice/frame display: 2 loops\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {object}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {object}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n\n    // trash cross\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {object}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {object}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if a draw was started (handle at mouse move or up)\n    if (this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    // determine if the click happened in an existing shape\n    const stage = drawLayer.getKonvaStage();\n    const kshape = stage.getIntersection({\n      x: event._x,\n      y: event._y\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (kshape) {\n      const group = kshape.getParent();\n      const selectedShape = group.find('.shape')[0];\n      // reset editor if click on other shape\n      // (and avoid anchors mouse down)\n      if (selectedShape && selectedShape !== this.#shapeEditor.getShape()) {\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(selectedShape);\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        this.#shapeEditor.setViewController(viewController);\n        this.#shapeEditor.enable();\n      }\n    } else {\n      // disable edition\n      this.#shapeEditor.disable();\n      this.#shapeEditor.setShape(null);\n      this.#shapeEditor.setViewController(null);\n      // start storing points\n      this.#started = true;\n      // set factory\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n      // clear array\n      this.#points = [];\n      // store point\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      this.#points.push(this.#lastPoint);\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    // draw line to current pos\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      // if it was marked as temporary\n      if (this.#points.length !== 1 &&\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // mark it as temporary\n      this.#lastPoint.tmp = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      // reset flag\n      this.#started = false;\n    } else {\n      // remove temporary flag\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        delete this.#points[this.#points.length - 1].tmp;\n      }\n    }\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    // reset flag\n    this.#started = false;\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#started) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n    let konvaLayer;\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      konvaLayer = shapeGroup.getLayer();\n      const shapeDisplayName = getShapeDisplayName(\n        shapeGroup.getChildren(isNodeNameShape)[0]);\n      // delete command\n      const delcmd = new DeleteGroupCommand(shapeGroup,\n        shapeDisplayName, konvaLayer);\n      delcmd.onExecute = this.#fireEvent;\n      delcmd.onUndo = this.#fireEvent;\n      delcmd.execute();\n      this.#app.addToUndoStack(delcmd);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // reset flag and points\n      this.#started = false;\n      this.#points = [];\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Array} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    // create shape group\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Array} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // reset temporary shape group\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      finalShapeGroup, this.#shapeName, konvaLayer);\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // execute it\n    this.#command.execute();\n    // save it in undo stack\n    this.#app.addToUndoStack(this.#command);\n\n    // activate shape listeners\n    this.setShapeOn(finalShapeGroup, layerGroup);\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.setShape(null);\n    this.#shapeEditor.setViewController(null);\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n      // same for colour\n      this.setFeatures({lineColour: this.#style.getLineColour()});\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.setShapeOn(group, layerGroup);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#setShapeOff(group);\n      });\n    }\n    // draw\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Set shape group off properties.\n   *\n   * @param {object} shapeGroup The shape group to set off.\n   */\n  #setShapeOff(shapeGroup) {\n    // mouse styling\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {object} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {object} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n      const colour = this.#style.getLineColour();\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\n        function (ashape) {\n          ashape.stroke(colour);\n        }\n      );\n    }\n  }\n\n  /**\n   * Set shape group on properties.\n   *\n   * @param {object} shapeGroup The shape group to set on.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  setShapeOn(shapeGroup, layerGroup) {\n    // adapt shape and cursor when mouse over\n    const mouseOnShape = () => {\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    };\n    // mouse over event hanlding\n    shapeGroup.on('mouseover', () => {\n      // save local vars\n      this.#activeShapeGroup = shapeGroup;\n      // adapt shape\n      mouseOnShape();\n    });\n    // mouse out event hanlding\n    shapeGroup.on('mouseout', () => {\n      // reset shape\n      this.#resetActiveShapeGroup();\n      // reset local vars\n      this.#activeShapeGroup = undefined;\n    });\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(\n      shapeGroup.getChildren(isNodeNameShape)[0]);\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      colour = shapeGroup.getChildren(isNodeNameShape)[0].stroke();\n      // display trash\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const stage = drawLayer.getKonvaStage();\n      const scale = stage.scale();\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n      this.#trash.scale(invscale);\n      konvaLayer.add(this.#trash);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      let factory;\n      const keys = Object.keys(this.#shapeFactoryList);\n      for (let i = 0; i < keys.length; ++i) {\n        factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(shapeGroup)) {\n          // stop at first find\n          break;\n        }\n      }\n      if (typeof factory === 'undefined') {\n        throw new Error('Cannot find factory to update quantification.');\n      }\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('orange');\n        });\n        // change the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke('red');\n          });\n      } else {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('red');\n        });\n        // reset the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (typeof ashape.stroke !== 'undefined') {\n              ashape.stroke(colour);\n            }\n          });\n      }\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(null);\n        this.#shapeEditor.setViewController(null);\n        // reset colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke(colour);\n          });\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n        // delete command\n        const delcmd = new DeleteGroupCommand(group,\n          shapeDisplayName, konvaLayer);\n        delcmd.onExecute = this.#fireEvent;\n        delcmd.onUndo = this.#fireEvent;\n        delcmd.execute();\n        this.#app.addToUndoStack(delcmd);\n      } else {\n        // save drag move\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          const mvcmd = new MoveGroupCommand(group,\n            shapeDisplayName, translation, konvaLayer);\n          mvcmd.onExecute = this.#fireEvent;\n          mvcmd.onUndo = this.#fireEvent;\n          this.#app.addToUndoStack(mvcmd);\n\n          // the move is handled by Konva, trigger an event manually\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.currentTarget;\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = (meta) => {\n        // store meta\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          ktext.meta.textExpr, ktext.meta.quantification));\n        label.setVisible(ktext.meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call roi dialog\n      customUI.openRoiDialog(ktext.meta, onSaveCallback);\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {object} group The group that contains anchors.\n * @returns {object|undefined} The minimum position as {x,y}.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return {x: minX, y: minY};\n}\n\n/**\n * Bound a node position.\n *\n * @param {object} node The node to bound the position.\n * @param {object} min The minimum position as {x,y}.\n * @param {object} max The maximum position as {x,y}.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.x) {\n    node.x(min.x);\n    changed = true;\n  } else if (node.x() > max.x) {\n    node.x(max.x);\n    changed = true;\n  }\n  if (node.y() < min.y) {\n    node.y(min.y);\n    changed = true;\n  } else if (node.y() > max.y) {\n    node.y(max.y);\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = {\n    x: -anchorMin.x,\n    y: -anchorMin.y\n  };\n  const max = {\n    x: stageSize.x -\n      (anchorMin.x + Math.abs(shape.width())),\n    y: stageSize.y -\n      (anchorMin.y + Math.abs(shape.height()))\n  };\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = {\n    x: -group.x(),\n    y: -group.y()\n  };\n  const max = {\n    x: stageSize.x - group.x(),\n    y: stageSize.y - group.y()\n  };\n\n  return boundNodePosition(anchor, min, max);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Array} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","// Overridable default object.\nexport const defaults = {\n  /**\n   * List of default window level presets.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelText: {\n    arrow: {\n      '*': ''\n    },\n    circle: {\n      '*': '{surface}'\n    },\n    ellipse: {\n      '*': '{surface}'\n    },\n    freeHand: {\n      '*': ''\n    },\n    protractor: {\n      '*': '{angle}'\n    },\n    rectangle: {\n      '*': '{surface}'\n    },\n    roi: {\n      '*': ''\n    },\n    ruler: {\n      '*': '{length}'\n    }\n  }\n};\n","import {ROI} from '../math/roi';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.roi[modality] !== 'undefined') {\n      textExpr = defaults.labelText.roi[modality];\n    } else {\n      textExpr = defaults.labelText.roi['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    points[anchor.id()] = anchor.x() - kroi.x();\n    points[anchor.id() + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Array} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {Array} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Array}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {Array}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Array} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * @param {object} greyscale The input greyscale-\n * @returns {object} A gradient object\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\n *\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\n   * Circle formula: x*x + y*y = r*r\n   * => y = (+-) sqrt(r*r - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {Array} radius The 2 ellipse radiuses.\n * @param {Array} dir The 2 ellipse directions.\n * @returns {Array} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits.\n   */\n  getRound() {\n    return {\n      min: this.getBegin().getRound(),\n      max: this.getEnd().getRound()\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: ''};\n      quant.max = {value: quantif.max, unit: ''};\n      quant.mean = {value: quantif.mean, unit: ''};\n      quant.stdDev = {value: quantif.stdDev, unit: ''};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: ''};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: ''};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: ''};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      this.#filter.setOriginalImage(this.#app.getLastImage());\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, app) {\n    this.#filter = filter;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setLastImage(this.#filter.update());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName()\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setLastImage(this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName()\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\nexport const toolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {validateWindowWidth} from '../image/windowCenterAndWidth';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {WindowLevel: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // set start flag\n    this.#started = true;\n    // store initial position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = event._x - this.x0;\n    const diffY = this.y0 - event._y;\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = parseInt(viewController.getWindowLevel().center, 10);\n    const width = parseInt(viewController.getWindowLevel().width, 10);\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    viewController.setWindowLevel(windowCenter, windowWidth);\n\n    // store position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    // set start flag\n    if (this.#started) {\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataIndex());\n\n    // update view controller\n    viewController.setWindowLevel(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      parseInt(viewController.getWindowLevel().width, 10));\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {precisionRound} from '../utils/string';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    viewController.setCurrentPosition(position);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(event);\n      }\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // difference to last Y position\n    const diffY = event._y - this.y0;\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && viewController.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        viewController.decrementScrollIndex();\n      } else {\n        viewController.incrementScrollIndex();\n      }\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    const imageSize = viewController.getImageSize();\n    if (xMove && imageSize.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove) {\n      this.x0 = event._x;\n    }\n    if (yMove) {\n      this.y0 = event._y;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Displays a tooltip in a temparary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {object} event The mouse move event.\n   */\n  #showTooltip(event) {\n    // remove previous div\n    this.#removeTooltipDiv();\n\n    // get image value at position\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // place span in layer group to avoid upper layer opacity\n      const layerDiv = document.getElementById(viewLayer.getId());\n      layerDiv.parentElement.appendChild(span);\n      // position tooltip\n      span.style.left = (event._x + 10) + 'px';\n      span.style.top = (event._y + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  #removeTooltipDiv() {\n    const div = document.getElementById('scroll-tooltip');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {ZoomAndPan: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch down event.\n   *\n   * @param {object} event The touch down event.\n   */\n  twotouchdown = (event) => {\n    this.#started = true;\n    // store first point\n    this.x0 = event._x;\n    this.y0 = event._y;\n    // first line\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    this.line0 = new Line(point0, point1);\n    this.midPoint = this.line0.getMidpoint();\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    // calculate translation\n    const tx = event._x - this.x0;\n    const ty = event._y - this.y0;\n    // apply translation\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  twotouchmove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    const newLine = new Line(point0, point1);\n    const lineRatio = newLine.getLength() / this.line0.getLength();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = event._y - this.y0;\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (viewController.canScroll()) {\n        if (diffY > 0) {\n          viewController.incrementScrollIndex();\n        } else {\n          viewController.decrementScrollIndex();\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\n        const planePos = viewLayer.displayToMainPlanePos(\n          this.midPoint.getX(), this.midPoint.getY());\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousedown(event);\n    } else if (touches.length === 2) {\n      this.twotouchdown(event);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousemove(event);\n    } else if (touches.length === 2) {\n      this.twotouchmove(event);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Opacity: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.x0 = event._x;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Opacity class\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * @external MagicWand\n * @see https://github.com/Tamersoul/magic-wand-js\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * threshold default tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * threshold tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas\n   *\n   * @param {object} event The original event.\n   * @returns {object} The coordinates as a {x,y}.\n   */\n  #getCoord = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {object} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(this.#shapeGroup, 'floodfill',\n        drawLayer.getKonvaLayer());\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change\n   *\n   * @param {number} _value Current threshold\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getCoord(event);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const movedpoint = this.#getCoord(event);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#started = false;\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.x0 = index.get(0);\n      this.y0 = index.get(1);\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      // final point: at 'tolerance' of the initial point\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(this.#shapeGroup, 'livewire',\n      drawLayer.getKonvaLayer());\n    // draw\n    this.#command.execute();\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva object.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, points[0], style.scale(10));\n    const linePerp1 = getPerpendicularLine(\n      line, points[1], style.scale(10));\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = 5 * style.getScaledStrokeWidth();\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.arrow[modality] !== 'undefined') {\n      textExpr = defaults.labelText.arrow[modality];\n    } else {\n      textExpr = defaults.labelText.arrow['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the circle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    const circle = new Circle(points[0], radius);\n    // draw shape\n    const kshape = new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.circle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.circle[modality];\n    } else {\n      textExpr = defaults.labelText.circle['*'];\n    }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(circle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // force y\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // force y\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'bottom':\n      radius = center.y - anchor.y();\n      // force x\n      bottom.x(top.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y + radius);\n      break;\n    case 'top':\n      radius = anchor.y() - center.y;\n      // force x\n      top.x(bottom.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the ellipse.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ellipse[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ellipse[modality];\n    } else {\n      textExpr = defaults.labelText.ellipse['*'];\n    }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\n    const center = {\n      x: topLeft.x() + radiusX,\n      y: topRight.y() + radiusY\n    };\n    kellipse.position(center);\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.freeHand[modality] !== 'undefined') {\n      textExpr = defaults.labelText.freeHand[modality];\n    } else {\n      textExpr = defaults.labelText.freeHand['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    points[anchor.id()] = anchor.x() - kline.x();\n    points[anchor.id() + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the protractor.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.protractor[modality] !== 'undefined') {\n        textExpr = defaults.labelText.protractor[modality];\n      } else {\n        textExpr = defaults.labelText.protractor['*'];\n      }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n.t('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // augment text with meta\n      // @ts-ignore\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = {\n      angle: {value: angle, unit: i18n.t('unit.degree')}\n    };\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the rectangle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.rectangle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.rectangle[modality];\n    } else {\n      textExpr = defaults.labelText.rectangle['*'];\n    }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {object} rectangle The rectangle to shadow.\n   * @returns {object} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.scale(10);\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ruler[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ruler[modality];\n    } else {\n      textExpr = defaults.labelText.ruler['*'];\n    }\n    const quant = line.quantify(viewController);\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n      // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = line.quantify(viewController);\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {lut} from '../image/luts';\nimport {getMatrixFromName} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getViewOrientation} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {toolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]}\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  // app options\n  #options = null;\n\n  // data controller\n  #dataController = null;\n\n  // toolbox controller\n  #toolboxController = null;\n\n  // load controller\n  #loadController = null;\n\n  // stage\n  #stage = null;\n\n  // UndoStack\n  #undoStack = null;\n\n  // Generic style\n  #style = new Style();\n\n  // overlay datas\n  #overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {number} index The data index.\n   * @returns {Image} The associated image.\n   */\n  getImage(index) {\n    return this.#dataController.get(index).image;\n  }\n\n  /**\n   * Get the last loaded image.\n   *\n   * @returns {Image} The image.\n   */\n  getLastImage() {\n    return this.#dataController.get(this.#dataController.length() - 1).image;\n  }\n\n  /**\n   * Set the image at the given index.\n   *\n   * @param {number} index The data index.\n   * @param {Image} img The associated image.\n   */\n  setImage(index, img) {\n    this.#dataController.setImage(index, img);\n  }\n\n  /**\n   * Set the last image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setLastImage(img) {\n    this.#dataController.setImage(this.#dataController.length() - 1, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @returns {number} The new image id.\n   */\n  addNewImage(image, meta) {\n    const id = this.#dataController.length();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(id, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: 'internal',\n      loadid: id,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(id);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    return id;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {number} index The data index.\n   * @returns {object} The list of meta data.\n   */\n  getMetaData(index) {\n    return this.#dataController.get(index).meta;\n  }\n\n  /**\n   * Get the number of loaded data.\n   *\n   * @returns {number} The number.\n   */\n  getNumberOfLoadedData() {\n    return this.#dataController.length();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the layer scale on top of the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {object} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    return this.#stage.getViewLayersByDataIndex(index);\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    return this.#stage.getDrawLayersByDataIndex(index);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {object} opt The application option with:\n   * - `dataViewConfigs`: data indexed object containing the data view\n   *   configurations in the form of a list of objects containing:\n   *   - divId: the HTML div id\n   *   - orientation: optional 'axial', 'coronal' or 'sagittal' orientation\n   *     string (default undefined keeps the original slice order)\n   * - `binders`: array of layerGroup binders\n   * - `tools`: tool name indexed object containing individual tool\n   *   configurations in the form of a list of objects containing:\n   *   - options: array of tool options\n   * - `viewOnFirstLoadItem`: boolean flag to trigger the first data render\n   *   after the first loaded data or not\n   * - `defaultCharacterSet`: the default chraracter set string used for DICOM\n   *   parsing\n   * - `overlayConfig`: list of tags / properties used as overlay information.\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * app.init({\n   *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n   *   viewOnFirstLoadItem: false\n   * });\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (this.#options.tools && this.#options.tools.length !== 0) {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the Tools list\n        if (typeof toolList[toolName] !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolList[toolName](this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined') {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions = toolParams.options;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    this.#overlayDatas = {};\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\n   *  - batchSize: the size of the request url batch\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadImageObject = (data) => {\n    this.#loadController.loadImageObject(data);\n  };\n\n  /**\n   * Abort the current load.\n   */\n  abortLoad() {\n    this.#loadController.abort();\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.syncLayerGroupScale();\n  }\n\n  /**\n   * Init the Window/Level display\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Get the layer group configuration from a data index.\n   * Defaults to div id 'layerGroup' if no association object has been set.\n   *\n   * @param {number} dataIndex The data index.\n   * @returns {Array} The list of associated configs.\n   */\n  #getViewConfigs(dataIndex) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    } else if (\n      typeof this.#options.dataViewConfigs[dataIndex] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataIndex];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {object} The configuration list.\n   */\n  getDataViewConfig() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration (see the init options for details).\n   *\n   * @param {object} configs The configuration list.\n   */\n  setDataViewConfig(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {number} dataId The data id.\n   * @param {object} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this.#options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view sconfig for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // data is loaded, create view\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      const lg = this.#stage.getLayerGroupByDivId(config.divId);\n      if (typeof lg === 'undefined') {\n        // create layer group\n        this.#createLayerGroup(config);\n      } else {\n        // add view\n        this.#addViewLayer(dataId, config);\n      }\n    }\n  }\n\n  /**\n   * Remove a data view config.\n   *\n   * @param {number} dataId The data id.\n   * @param {object} config The view configuration.\n   */\n  removeDataViewConfig(dataId, config) {\n    // remove from list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n    configs[dataId].splice(itemIndex, 1);\n\n    // data is loaded, remove view\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      const lg = this.#stage.getLayerGroupByDivId(config.divId);\n      if (typeof lg !== 'undefined') {\n        const vls = lg.getViewLayersByDataIndex(dataId);\n        if (vls.length === 1) {\n          lg.removeLayer(vls[0]);\n        } else {\n          throw new Error('Expected one view layer, got ' + vls.length);\n        }\n        const dls = lg.getDrawLayersByDataIndex(dataId);\n        if (dls.length === 1) {\n          lg.removeLayer(dls[0]);\n        } else {\n          throw new Error('Expected one draw layer, got ' + dls.length);\n        }\n        if (lg.getNumberOfLayers() === 0) {\n          this.#stage.removeLayerGroup(lg);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {object} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const dataConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < dataConfigs.length; ++j) {\n        const viewConfig = dataConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this.#createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {object} viewConfig The view config.\n   */\n  #createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = document.getElementById(viewConfig.divId);\n    const layerGroup = this.#stage.addLayerGroup(element);\n    // bind events\n    this.#bindLayerGroupToApp(layerGroup);\n    // optional orientation\n    if (typeof viewConfig.orientation !== 'undefined') {\n      layerGroup.setTargetOrientation(\n        getMatrixFromName(viewConfig.orientation));\n    }\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {number} dataIndex The data index to render.\n   */\n  render(dataIndex) {\n    if (typeof dataIndex === 'undefined' || dataIndex === null) {\n      throw new Error('Cannot render without data index');\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // loop on all configs\n    const viewConfigs = this.#getViewConfigs(dataIndex);\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataIndex +\n        ' (no data view config)');\n      return;\n    }\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // add view\n      // warn: needs a loaded DOM\n      if (layerGroup.getViewLayersByDataIndex(dataIndex).length === 0) {\n        this.#addViewLayer(dataIndex, config);\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom to the layers.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the image layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {string} The state of the app as a JSON string.\n   */\n  getJsonState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @param {string} jsonState The state of the app as a JSON string.\n   */\n  applyJsonState(jsonState) {\n    const state = new State();\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo\n   * - CRTL-Y: redo\n   * - CRTL-ARROW_LEFT: next element on fourth dim\n   * - CRTL-ARROW_UP: next element on third dim\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\n   * - CRTL-ARROW_DOWN: previous element on third dim\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const viewController =\n          this.#stage.getActiveLayerGroup()\n            .getActiveViewLayer().getViewController();\n        const size = viewController.getImageSize();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (size.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (viewController.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (size.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (viewController.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.s\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} colourMap The colour map name.\n   */\n  setColourMap(colourMap) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMapFromName(colourMap);\n  }\n\n  /**\n   * Set the window/level preset.\n   *\n   * @param {object} preset The window/level preset.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayer(layer, layerGroup.getDivId());\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data index.\n   *\n   * @param {number} dataIndex The data index.\n   * @returns {OverlayData} The overlay data.\n   */\n  getOverlayData(dataIndex) {\n    let data;\n    if (typeof this.#overlayDatas !== 'undefined') {\n      data = this.#overlayDatas[dataIndex];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {number} dataIndex The data index.\n   */\n  toggleOverlayListeners(dataIndex) {\n    const data = this.getOverlayData(dataIndex);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    // create overlay data\n    if (typeof this.#options.overlayConfig !== 'undefined') {\n      this.#overlayDatas[event.loadid] = new OverlayData(\n        this, event.loadid, this.#options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.loadid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.loadid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data);\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      loadid: event.loadid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // update overlay data if present\n    if (typeof this.#overlayDatas !== 'undefined' &&\n      typeof this.#overlayDatas[event.loadid] !== 'undefined') {\n      this.#overlayDatas[event.loadid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n    this.#getViewConfigs(event.loadid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.loadid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#loaderror\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    event.type = 'loaderror';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#loadabort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadabort';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #addViewLayer(dataIndex, dataViewConfig) {\n    const data = this.#dataController.get(dataIndex);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataIndex);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(dataViewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        dataViewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      layerGroup.getTargetOrientation()\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // colour map\n    if (typeof dataViewConfig.colourMap !== 'undefined') {\n      view.setColourMap(dataViewConfig.colourMap);\n    }\n\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    if (!isBaseLayer) {\n      opacity = 0.5;\n      // set color map if non was provided\n      if (typeof dataViewConfig.colourMap === 'undefined') {\n        view.setColourMap(lut.rainbow);\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataIndex);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n    const viewController = viewLayer.getViewController();\n\n    // listen to controller events\n    if (data.image.getMeta().Modality === 'SEG') {\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\n    }\n\n    // listen to image changes\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n    this.#dataController.addEventListener('imagechange', (event) => {\n      viewLayer.onimagechange(event);\n      this.render(event.dataid);\n    });\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayer(viewLayer, layerGroup.getDivId());\n    }\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataIndex);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.syncLayerGroupScale();\n\n    // major orientation axis\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n    // extra flip offset for oriented views...\n    if (typeof dataViewConfig.orientation !== 'undefined') {\n      if (major === 2) {\n        // flip offset Y for axial aquired data\n        if (dataViewConfig.orientation !== 'axial') {\n          viewLayer.addFlipOffsetY();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetY();\n          }\n        }\n      } else if (major === 0) {\n        // flip offset X for sagittal aquired data\n        if (dataViewConfig.orientation !== 'sagittal') {\n          viewLayer.addFlipOffsetX();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetX();\n          }\n        }\n      }\n    }\n\n    // view layer scale\n    // only flip scale for base layers\n    if (isBaseLayer) {\n      if (typeof dataViewConfig.orientation !== 'undefined') {\n        if (major === 0 || major === 2) {\n          // scale flip Z for oriented views...\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      } else {\n        if (major === 0) {\n          // scale flip Z for sagittal and undefined target orientation\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      }\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.setScale(layerGroup.getScale());\n      }\n    }\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this.#toolboxController) {\n        this.#toolboxController.init();\n      }\n    }\n\n  }\n\n} // class App\n","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataWriter} from './dataWriter';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Get a UID for a DICOM tag.\n * Note: Use https://github.com/uuidjs/uuid?\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array\n *\n * @param {Array} initialArray array of typed arrays\n * @returns {object} a typed array containing all values\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * DICOM writer.\n *\n * Example usage:\n *   const parser = new DicomParser();\n *   parser.parse(this.response);\n *\n *   const writer = new DicomWriter(parser.getDicomElements());\n *   const blob = new Blob([writer.getBuffer()], {type: 'application/dicom'});\n *\n *   const element = document.getElementById(\"download\");\n *   element.href = URL.createObjectURL(blob);\n *   element.download = \"anonym.dcm\";\n */\nexport class DicomWriter {\n\n  // flag to use VR=UN for private sequences, default to false\n  // (mainly used in tests)\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  // possible tag actions\n  #actions = {\n    copy: function (item) {\n      return item;\n    },\n    remove: function () {\n      return null;\n    },\n    clear: function (item) {\n      item.value = [];\n      return item;\n    },\n    replace: function (item, value) {\n      item.value = [value];\n      return item;\n    }\n  };\n\n  // default rules: just copy\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   * Set of objects as:\n   *   name : { action: 'actionName', value: 'optionalValue }\n   * The names are either 'default', tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * Set the writing rules.\n   *\n   * @param {object} rules The input rules.\n   */\n  setRules(rules) {\n    this.#rules = rules;\n  }\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * @external TextEncoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Use default anonymisation rules.\n   */\n  useDefaultAnonymisationRules() {\n    this.setRules({\n      default: {action: 'remove', value: null},\n      PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n      'Meta Element': {action: 'copy', value: null}, // group '0002'\n      Acquisition: {action: 'copy', value: null}, // group '0018'\n      'Image Presentation': {action: 'copy', value: null}, // group '0028'\n      Procedure: {action: 'copy', value: null}, // group '0040'\n      'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n    });\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {object} element The element to check\n   * @returns {object} The element to write, can be null.\n   */\n  #getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return this.#actions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\n        undefinedLength = item['FFFEE000'].undefinedLength;\n      }\n      const itemElement = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n        value: []\n      };\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\n          byteOffset = this.#writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = {\n          tag: getItemDelimitationItemTag(),\n          vr: 'NONE',\n          vl: 0,\n          value: []\n        };\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        logger.warn('Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Array} dicomElements The wrapped elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dicomElements) {\n    // Transfer Syntax\n    const syntax = dicomElements['00020010'].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dicomElements['00080005'] !== 'undefined') {\n      const oldscs = dicomElements['00080005'].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dicomElements['00080005'].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dicomElements['00280100'] !== 'undefined') {\n      bitsAllocated = dicomElements['00280100'].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dicomElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dicomElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.#getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        checkUnknownVR(element);\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDicomElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDicomElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this.#setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDicomElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDicomElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {object} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, bitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\n * element exists in dictionary\n *\n * @param {object} element The DICOM element.\n */\nfunction checkUnknownVR(element) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {object} The DICOM element.\n */\nfunction getDicomElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  return {\n    tag: tag,\n    vr: tag.getVrFromDictionary()\n  };\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a DICOM json tags object.\n * The json is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags.\n *\n * @param {object} jsonTags The DICOM json tags object.\n * @returns {object} The DICOM elements.\n */\nexport function getElementsFromJSONTags(jsonTags) {\n  const keys = Object.keys(jsonTags);\n  const dicomElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (!tag) {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const jsonTag = jsonTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\n        undefinedLength = jsonTag.undefinedLength;\n      }\n      if (typeof jsonTag.value !== 'undefined' &&\n        jsonTag.value !== null) {\n        for (let i = 0; i < jsonTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null jsonTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(jsonTag)) {\n        value = jsonTag;\n      } else {\n        value = [jsonTag];\n      }\n    }\n    // create element\n    const dicomElement = {\n      tag: tag,\n      vr: vr,\n      value: value\n    };\n    if (undefinedLength) {\n      dicomElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dicomElements[tag.getKey()] = dicomElement;\n  }\n  // return\n  return dicomElements;\n}\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__436__","__WEBPACK_EXTERNAL_MODULE__626__","__WEBPACK_EXTERNAL_MODULE__812__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","pointLength","parseInt","substring","Array","fill","RescaleLut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","WindowCenterAndWidth","c","getCenter","getWidth","setSignedOffset","WindowLut","rescaleLut","isSigned","isDiscrete","size","getWindowLevel","getRescaleLut","setWindowLevel","wl","getSlope","Uint8ClampedArray","floor","lut_range_max","buildLut","func","lut","id","invId","plain","red","green","blue","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","x","y","z","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","BIG_EPSILON","Number","EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","getCoronalMat33","Point2D","getDistance","point2D","getRound","round","minus","Point","get3D","values0","values1","mergeWith3D","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","Tag","element","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getInfoFromDictionary","getVrFromDictionary","getTagFromKey","getItemTag","isItemTag","tag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","buffer","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","data","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","charCodeAt","precisionRound","number","precision","factor","delta","arraySortEquals","arr0","arr1","arrayEquals","sort","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer","set","getDwvVersion","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientation","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","endOffset","implicit","itemData","item","isSeqDelim","vl","undefinedLength","isItemDelim","offsetTableVl","readTagRes","is32bitVL","startOffset","pixItemData","sqEndOffset","items","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","subElement","elements","parse","dataElement","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Spacing","Geometry","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","concat","geoSliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","appendOrigin","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","reduce","toFixed","getImage2DSize","rows","columns","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","checkTag","warning","TagValueExtractor","_elements","ImageFactory","checkElements","dicomElements","create","pixelBuffer","numberOfFiles","size2D","frames","rowSpacing","columnSpacing","parseFloat","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","meta","modality","Modality","intensityFactor","radioInfoSq","totalDoseStr","halfLifeStr","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","Date","seriesDateEl","seriesTimeEl","seriesDateObj","seriesTimeObj","canGetSuvFactor","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","date","getDateTime","radioStart","totalDoseEl","halfLifeEl","patWeightEl","decaySeconds","decay","decayedDose","getSuvFactor","setRescaleSlopeAndIntercept","sopClassUID","SOPClassUID","studyUID","StudyInstanceUID","seriesUID","SeriesInstanceUID","bits","BitsStored","pixelRep","PixelRepresentation","IsSigned","pixelUnit","getPixelUnit","frameOfReferenceUID","FrameOfReferenceUID","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","paletteLut","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","equalPosPat","pos1","pos2","JSON","stringify","rootElement","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","longValue","urnValue","schemeDesignator","getSegment","segment","algorithmType","algorithmName","displayValue","cielabElement","rgb","triplet","gammaFunc","min","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","propertyCategoryCode","propertyTypeCode","trackingId","trackingUid","getSpacingFromMeasure","measure","pixelSpacing","getSegmentFrameInfo","groupItem","derivationImages","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","dimIndex","refSegmentNumber","imagePosPat","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","MaskFactory","_dicomElements","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","segments","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","find","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","lossyImageCompression","LossyImageCompression","createImage","createMaskImage","imageUids","getImageUid","uid","getSecondaryOffset","getBuffer","canQuantify","canWindowLevel","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","config","getMeta","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","copy","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setDefaultColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","mat33","setInitialIndex","getPlaybackMilliseconds","_value","_index","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","setWindowLevelPresetById","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getCurrentWindowPresetName","getColourMap","setColourMap","getCurrentPosition","canSetPosition","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","newWl","isNewWidth","isNewCenter","manual","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","MaskSegmentHelper","mask","hasSegment","segmentNumber","maskHasSegments","numbers","unknowns","getSegments","setSegments","list","setHiddenSegments","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","getName","segmentnumber","undo","_event","ViewController","getPlaneHelper","isMask","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","initialise","getPositionFromPlanePoint","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","setInterval","canDoMore","stop","clearInterval","setColourMapFromName","dataid","InteractionEventNames","customUI","openRoiDialog","textExpr","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","containerDiv","className","getDataIndex","enableImageSmoothing","setView","getViewController","onimageset","onimagechange","getId","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","displayToMainPlanePos","display","style","isVisible","draw","layerid","globalAlpha","clear","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousFitScale","previousScale","newFitScale","newViewOffset","newFlipOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollIndex","filter","save","restore","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","DrawGroupCommand","layer","getParent","MoveGroupCommand","translation","move","minusTrans","ChangeGroupCommand","startAnchor","endAnchor","viewController","update","DeleteGroupCommand","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","DrawController","konvaLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","color","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","quantification","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","DrawLayer","getKonvaStage","getKonvaLayer","getLayers","getDrawController","setPlaneHelper","opacity","container","listening","getContent","setAttribute","isGroupVisible","toogleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","LayerGroup","setTargetOrientation","getShowCrosshair","setShowCrosshair","getDivId","getScale","getAddedScale","getOffset","getNumberOfLayers","getActiveViewLayer","getViewLayersByDataIndex","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataIndex","setActiveViewLayer","setActiveViewLayerByDataIndex","setActiveDrawLayer","setActiveDrawLayerByDataIndex","addViewLayer","viewLayerIndex","div","append","addDrawLayer","viewLayer","updateLayersToPositionChange","drawLayer","empty","previous","getElementsByClassName","removeLayer","getElementById","layer0","p2D","displayPos","lineH","offsetWidth","left","top","lineV","offsetHeight","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","scrollDiff","planeDiff","hasSetPos","calculateFitScale","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","flipScaleZ","addScale","scaleStep","addTranslation","binderList","WindowLevelBinder","getEventType","getCallback","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","removeLayerGroup","syncLayerGroupScale","minScale","hasScale","binder","binderObj","elem","State","toJSON","app","drawController","version","toObject","fromJSON","json","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenk","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","forEach","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","window","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","command","redo","ToolboxController","toolList","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayer","layerGroupDivId","applySelectedTool","_x","_y","_x1","_y1","augmentEventOffsets","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","request","loader","onload","onloadend","load","options","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","join","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","random","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","dataIndex","WorkerTask","message","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","DicomBufferToView","opt","decodedData","fullSize","convert","dicomParser","algo","getSyntaxDecompressionName","needDecompression","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","canLoadFile","file","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","ArrayBuffer","_opt","isJson","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","bytes","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","content","unzipPercent","async","then","JSZip","zip","isZip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","fileIO","urlIO","loadType","eventInfo","loadtype","loadId","loadid","isFirstItem","eventInfoItem","isfirstitem","DataController","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","mergeObjects","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","dataId","configs","addAppListeners","addItemMeta","dataUid","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","sliceOverlayData","mapFunc","isListening","removeAppListeners","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","up","layerDetails","i18n","t","props","mm","cm2","degree","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","getStats","includesFullStatsFlags","stats","getSimpleStats","median","getPercentile","p25","p75","getFullStats","sumSqr","variance","stdDev","ratio","i0","v0","guid","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","ShapeEditor","setFactoryList","setShape","inshape","isFactoryGroup","setViewController","getShape","isActive","setDrawEventCallback","enable","getLayer","disable","resetAnchors","anchor","setAnchorsActive","getAnchors","getStyle","parent","on","cancelBubble","evt","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","changed","ROI","getPoint","addPoint","addPoints","defaults","labelText","arrow","circle","ellipse","freeHand","protractor","rectangle","roi","ruler","RoiFactory","getNPoints","getTimeout","fontSize","fontFamily","px","py","_viewController","kroi","textPos","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","len","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","Ellipse","getA","getB","radiusRatio","rySquare","Rectangle","getRealWidth","getRealHeight","getHeight","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","setLastImage","WindowLevel","mousedown","x0","y0","mousemove","diffX","diffY","pixelToIntensity","mouseup","mouseout","touchstart","touchmove","touchend","dblclick","keydown","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","clearTimeout","span","parentElement","createTextNode","features","displayTooltip","ZoomAndPan","twotouchdown","point0","point1","midPoint","tx","ty","twotouchmove","lineRatio","zoom","step","Opacity","op","Draw","trashLine1","trashLine2","stage","getIntersection","selectedShape","timer","shapeGroup","destroy","tmpPoints","finalPoints","finalShapeGroup","setShapeOn","body","cursor","lineColour","shapeGroups","ashape","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","currentTarget","groupId","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","threshold","simple","MagicWand","cs","icsl","extend","ini","jl","modifyThreshold","bl","setPoints","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2d0","p2d1","p2b","p2e","CircleFactory","_style","kcircle","right","bottom","centerPoint","kshadow","maxX","pixelLine","EllipseFactory","ellipseX","ellipseY","kellipse","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectX","rectY","rectWidth","rectHeight","krect","rect","rWidth","rHeight","RulerFactory","tickLen","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","App","addNewImage","viewOnFirstLoadItem","getMetaData","getNumberOfLoadedData","getToolboxController","divId","tools","appToolList","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","binders","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortLoad","initWLDisplay","dataViewConfigs","getDataViewConfig","setDataViewConfig","addDataViewConfig","removeDataViewConfig","itemIndex","lg","vls","dls","dataKeys","divIds","dataConfigs","viewConfig","matrix","getMatrixFromName","setLayerGroupsBinders","instances","viewConfigs","cx","cy","translate","getJsonState","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","overlayConfig","isFirstLoadItem","eventMetaData","dataViewConfig","imageGeometry","getViewOrientation","isBaseLayer","spacing2D","major","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","getUID","prefix","getDwvUIDPrefix","datePart","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","setUseUnVrForPrivateSq","default","action","setRules","rules","useSpecialTextEncoder","TextEncoder","useDefaultAnonymisationRules","Acquisition","Procedure","groupName","rule","writer","itemKeys","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","originalElement","checkUnknownVR","fmiv","getDicomElement","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","metaOffset","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","dictVr","getElementsFromJSONTags","jsonTags","jsonTag","dicomElement"],"sourceRoot":""}