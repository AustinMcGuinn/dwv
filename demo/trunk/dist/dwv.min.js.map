{"version":3,"file":"dwv.min.js","mappings":"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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCO,eAAgB,CACdixmCQ,WAAY,CACVV,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__626__, __WEBPACK_EXTERNAL_MODULE__812__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","module.exports = __WEBPACK_EXTERNAL_MODULE__436__;","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\n/* eslint max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE'\n * - (vr) 'OB or OW' -> 'ox'\n * - (vr) 'US or SS' -> 'xs'\n * - (vr) 'US or OW' -> 'xx'\n * - (vr) 'US or SS or OW' -> 'xs'\n * - added 'GenericGroupLength' element to each group\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionnary\n\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n// -> removed duplicates (commented)\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n// Value Representation (VR) with 32bit Value Length (VL)\n// Added locally used 'ox'\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\nexport const vr32bitVL = [\n  'OB', 'OD', 'OF', 'OL', 'OV', 'OW', 'SQ', 'SV', 'UC', 'UN', 'UR', 'UT', 'UV', 'ox'\n];\n\n// String VR with extended or replaced default character repertoire defined in\n// Specific Character Set (0008,0005)\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\nexport const charSetString = [\n  'SH', 'LO', 'UC', 'ST', 'LT', 'UT', 'PN'\n];\n\n// VR types\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group.');\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element.');\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getGroup() === rhs.getGroup() &&\n      this.getElement() === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.getGroup() + this.getElement();\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.getGroup()];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically the Item, ItemDelimitationItem and SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    const element = this.getElement();\n    return !(this.getGroup() === 'FFFE' &&\n      (element === 'E000' || element === 'E00D' || element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    const groupNumber = parseInt(this.getGroup(), 16);\n    return groupNumber % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {Array|undefined} The info as [vr, multiplicity, name].\n   */\n  getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.getGroup()] !== 'undefined' &&\n      typeof dictionary[this.getGroup()][this.getElement()] !==\n        'undefined') {\n      info = dictionary[this.getGroup()][this.getElement()];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {object} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {object} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {object} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  return tag.equals(getItemTag());\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  return tag.equals(getItemDelimitationItemTag());\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  return tag.equals(getSequenceDelimitationItemTag());\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  return tag.equals(getPixelDataTag());\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {object|null} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag = null;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(byteOffset + bpe * i);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string:\n *  key0=val00&key0=val01&key1=val10 returns\n *  { key0 : [val00, val01], key1 : val1 }\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {Array} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @example\n *    const values = {\"length\": { \"value\": 33, \"unit\": \"cm\" } };\n *    const str = \"The length is: {length}.\";\n *    const res = replaceFlags(str, values); // \"The length is: 33 cm.\"\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\n * Can be a solution to not have trailing zero as when\n * using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: arr.slice(start, end).find(callbackFn)\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *  {'Content-Type', ..., data} (depending on header tags)\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","import {\n  Tag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  vr32bitVL,\n  vrTypes,\n  charSetString\n} from './dictionary';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.32.0-beta.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n * after the 128 bytes preamble.\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n/**\n * Clean string: trim and remove ending.\n * (exported for tests only)\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  if (inputStr) {\n    // trim spaces\n    res = inputStr.trim();\n    // get rid of ending zero-width space (u200B)\n    if (res[res.length - 1] === String.fromCharCode('u200B')) {\n      res = res.substring(0, res.length - 1);\n    }\n  }\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {Array} orientation The image orientation patient.\n * @returns {string} The orientation name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\n  let name;\n  if (arrayEquals(orientation, axialOrientation)) {\n    name = 'axial';\n  } else if (arrayEquals(orientation, coronalOrientation)) {\n    name = 'coronal';\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\n    name = 'sagittal';\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2';\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.2';\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.50' ||\n    syntax === '1.2.840.10008.1.2.4.51';\n}\n\n/**\n * Tell if a given syntax is a retired JPEG one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a retired jpeg syntax.\n */\nfunction isJpegRetiredTransferSyntax(syntax) {\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\n    !isJpegBaselineTransferSyntax(syntax) &&\n    !isJpegLosslessTransferSyntax(syntax)) ||\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.57' ||\n    syntax === '1.2.840.10008.1.2.4.70';\n}\n\n/**\n * Tell if a given syntax is a JPEG-LS one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg-ls syntax.\n */\nfunction isJpeglsTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo = null;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n\n  // Unsupported:\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\n\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\n    isRleTransferSyntax(syntax)); // RLE\n}\n\n/**\n * Get the transfer syntax name.\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\n *\n * @param {string} syntax The transfer syntax.\n * @returns {string} The name of the transfer syntax.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (syntax === '1.2.840.10008.1.2') {\n    // Implicit VR - Little Endian\n    name = 'Little Endian Implicit';\n  } else if (syntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR - Little Endian\n    name = 'Little Endian Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\n    // Deflated Explicit VR - Little Endian\n    name = 'Little Endian Deflated Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR - Big Endian\n    name = 'Big Endian Explicit';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    // JPEG baseline\n    if (syntax === '1.2.840.10008.1.2.4.50') {\n      name = 'JPEG Baseline';\n    } else { // *.51\n      name = 'JPEG Extended, Process 2+4';\n    }\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    // JPEG Lossless\n    if (syntax === '1.2.840.10008.1.2.4.57') {\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\n    } else { // *.70\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\n    }\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\n    // Retired JPEG\n    name = 'Retired JPEG';\n  } else if (isJpeglsTransferSyntax(syntax)) {\n    // JPEG-LS\n    name = 'JPEG-LS';\n  } else if (isJpeg2000TransferSyntax(syntax)) {\n    // JPEG 2000\n    if (syntax === '1.2.840.10008.1.2.4.91') {\n      name = 'JPEG 2000 (Lossless or Lossy)';\n    } else { // *.90\n      name = 'JPEG 2000 (Lossless only)';\n    }\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\n    // MPEG2 Image Compression\n    name = 'MPEG2';\n  } else if (isRleTransferSyntax(syntax)) {\n    // RLE (lossless)\n    name = 'RLE';\n  }\n  // return\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n * See https://github.com/ivmartel/dwv/issues/188\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {object} firstDataElement The first data element of the DICOM header.\n * @returns {object} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      // ImplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2';\n    } else {\n      // ExplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2.1';\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      // ExplicitVRBigEndian\n      syntax = '1.2.840.10008.1.2.2';\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = {\n    tag: new Tag('0002', '0010'),\n    vr: 'UI'\n  };\n  dataElement.value = [syntax + ' ']; // even length\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Does this Value Representation (VR) have a 32bit Value Length (VL).\n * Ref: [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1}.\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return vr32bitVL.includes(vr);\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   i.e. without its value.\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\n *\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {object}\n   */\n  dicomElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * @external TextDecoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  /**\n   * Get the raw DICOM data elements.\n   *\n   * @returns {object} The raw DICOM elements.\n   */\n  getDicomElements() {\n    return this.dicomElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(\n    reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} An object containing the element\n   *   'tag', 'vl', 'vr', 'data' and 'endOffset'.\n   */\n  #readDataElement(\n    reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data = null;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = {\n      tag: tag,\n      vr: vr,\n      vl: vl,\n      startOffset: startOffset,\n      endOffset: endOffset\n    };\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {object} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\n          );\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (charSetString.includes(vr)) {\n          data = this.decodeSpecialString(stream);\n        } else {\n          data = this.decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        data = Array.from(reader.readUint8Array(offset, vl));\n      } else {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        for (let l = 0; l < keys.length; ++l) {\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            pixelRepresentation, bitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {Array} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dicomElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.dicomElements['00020010'];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.dicomElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      if (typeof this.dicomElements[dataElement.tag.getKey()] === 'undefined') {\n        this.dicomElements[dataElement.tag.getKey()] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' +\n          dataElement.tag.getKey());\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.dicomElements['7FE00010'] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.dicomElements['00280103'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.dicomElements['00280100'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.getDefaultCharacterSet() !== 'undefined') {\n      this.setDecoderCharacterSet(this.getDefaultCharacterSet());\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.dicomElements['00080005'];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.dicomElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.dicomElements['7FE00010'];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.dicomElements['00280008'] !== 'undefined') {\n          numberOfFrames = Number(this.dicomElements['00280008'].value[0]);\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  vrTypes,\n  charSetString\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  is32bitVLVR,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataWriter} from './dataWriter';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Get a UID for a DICOM tag.\n * Note: Use https://github.com/uuidjs/uuid?\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array\n *\n * @param {Array} initialArray array of typed arrays\n * @returns {object} a typed array containing all values\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * DICOM writer.\n *\n * Example usage:\n *   const parser = new DicomParser();\n *   parser.parse(this.response);\n *\n *   const writer = new DicomWriter(parser.getDicomElements());\n *   const blob = new Blob([writer.getBuffer()], {type: 'application/dicom'});\n *\n *   const element = document.getElementById(\"download\");\n *   element.href = URL.createObjectURL(blob);\n *   element.download = \"anonym.dcm\";\n */\nexport class DicomWriter {\n\n  // flag to use VR=UN for private sequences, default to false\n  // (mainly used in tests)\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  // possible tag actions\n  #actions = {\n    copy: function (item) {\n      return item;\n    },\n    remove: function () {\n      return null;\n    },\n    clear: function (item) {\n      item.value = [];\n      return item;\n    },\n    replace: function (item, value) {\n      item.value = [value];\n      return item;\n    }\n  };\n\n  // default rules: just copy\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   * Set of objects as:\n   *   name : { action: 'actionName', value: 'optionalValue }\n   * The names are either 'default', tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * Set the writing rules.\n   *\n   * @param {object} rules The input rules.\n   */\n  setRules(rules) {\n    this.#rules = rules;\n  }\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * @external TextEncoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Example anonymisation rules.\n   */\n  anonymisationRules = {\n    default: {action: 'remove', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group '0002'\n    Acquisition: {action: 'copy', value: null}, // group '0018'\n    'Image Presentation': {action: 'copy', value: null}, // group '0028'\n    Procedure: {action: 'copy', value: null}, // group '0040'\n    'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n  };\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {object} element The element to check\n   * @returns {object} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return this.#actions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\n        undefinedLength = item['FFFEE000'].undefinedLength;\n      }\n      const itemElement = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n        value: []\n      };\n      byteOffset = this.writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\n          byteOffset = this.writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = {\n          tag: getItemDelimitationItemTag(),\n          vr: 'NONE',\n          vl: 0,\n          value: []\n        };\n        byteOffset = this.writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        logger.warn('Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {object} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = {\n        tag: getSequenceDelimitationItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      byteOffset = this.writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Array} dicomElements The wrapped elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dicomElements) {\n    // Transfer Syntax\n    const syntax = dicomElements['00020010'].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dicomElements['00080005'] !== 'undefined') {\n      const oldscs = dicomElements['00080005'].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dicomElements['00080005'].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dicomElements['00280100'] !== 'undefined') {\n      bitsAllocated = dicomElements['00280100'].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dicomElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dicomElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        checkUnknownVR(element);\n\n        // update value and vl\n        this.setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDicomElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDicomElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this.setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDicomElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this.setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDicomElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {object} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.setElementValue(\n              subElement, subElement.value, isImplicit, bitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (charSetString.includes(element.vr)) {\n            value = this.encodeSpecialString(value.join('\\\\'));\n            pad = this.encodeSpecialString(padStr);\n          } else {\n            value = this.encodeString(value.join('\\\\'));\n            pad = this.encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\n * element exists in dictionary\n *\n * @param {object} element The DICOM element.\n */\nfunction checkUnknownVR(element) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {object} The DICOM element.\n */\nfunction getDicomElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  return {\n    tag: tag,\n    vr: tag.getVrFromDictionary()\n  };\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a DICOM json tags object.\n * The json is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags.\n *\n * @param {object} jsonTags The DICOM json tags object.\n * @returns {object} The DICOM elements.\n */\nexport function getElementsFromJSONTags(jsonTags) {\n  const keys = Object.keys(jsonTags);\n  const dicomElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (!tag) {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const jsonTag = jsonTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\n        undefinedLength = jsonTag.undefinedLength;\n      }\n      if (typeof jsonTag.value !== 'undefined' &&\n        jsonTag.value !== null) {\n        for (let i = 0; i < jsonTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null jsonTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(jsonTag)) {\n        value = jsonTag;\n      } else {\n        value = [jsonTag];\n      }\n    }\n    // create element\n    const dicomElement = {\n      tag: tag,\n      vr: vr,\n      value: value\n    };\n    if (undefinedLength) {\n      dicomElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dicomElements[tag.getKey()] = dicomElement;\n  }\n  // return\n  return dicomElements;\n}\n","/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromDictionary,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n/**\n * DicomElements wrapper.\n *\n * Warning: limited support for merged meta data.\n */\nexport class DicomElementsWrapper {\n\n  /**\n   * Wrapped elements.\n   *\n   * @type {Array}\n   */\n  #dicomElements;\n\n  /**\n   * @param {Array} dicomElements The elements to wrap.\n   */\n  constructor(dicomElements) {\n    this.#dicomElements = dicomElements;\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @param {boolean} [asArray] Get the value as an Array.\n   * @returns {object} The DICOM element value.\n   */\n  getFromKey(groupElementKey, asArray) {\n    // default\n    if (typeof asArray === 'undefined') {\n      asArray = false;\n    }\n    let value = null;\n    const dElement = this.#dicomElements[groupElementKey];\n    if (typeof dElement !== 'undefined') {\n      // raw value if only one\n      if (dElement.value.length === 1 && asArray === false) {\n        value = dElement.value[0];\n      } else {\n        value = dElement.value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Dump the DICOM tags to an object.\n   *\n   * @returns {object} The DICOM tags as an object.\n   */\n  dumpToObject() {\n    const keys = Object.keys(this.#dicomElements);\n    const obj = {};\n    let dicomElement = null;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      const tag = getTagFromKey(keys[i]);\n      obj[this.#getTagName(tag)] =\n        this.#getElementAsObject(tag, dicomElement);\n    }\n    return obj;\n  }\n\n  /**\n   * Get a tag string name from the dictionary.\n   *\n   * @param {object} tag The DICOM tag object.\n   * @returns {string} The tag name.\n   */\n  #getTagName(tag) {\n    let name = tag.getNameFromDictionary();\n    if (name === null) {\n      name = tag.getKey();\n    }\n    return name;\n  }\n\n  /**\n   * Get a DICOM element as a simple object.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @returns {object} The element as a simple object.\n   */\n  #getElementAsObject(tag, dicomElement) {\n    // element value\n    let value = null;\n\n    const isPixel = isPixelDataTag(tag);\n\n    const vr = dicomElement.vr;\n    if (vr === 'SQ' &&\n      typeof dicomElement.value !== 'undefined' &&\n      !isPixel) {\n      value = [];\n      const items = dicomElement.value;\n      let itemValues = null;\n      for (let i = 0; i < items.length; ++i) {\n        itemValues = {};\n        const keys = Object.keys(items[i]);\n        for (let k = 0; k < keys.length; ++k) {\n          const itemElement = items[i][keys[k]];\n          const tag = getTagFromKey(keys[k]);\n          const key = this.#getTagName(tag);\n          // do not inclure Item elements\n          if (key !== 'Item') {\n            itemValues[key] = this.#getElementAsObject(tag, itemElement);\n          }\n        }\n        value.push(itemValues);\n      }\n    } else {\n      value = this.#getElementValueAsString(tag, dicomElement);\n    }\n\n    // return\n    return {\n      value: value,\n      vr: vr\n    };\n  }\n\n  /**\n   * Dump the DICOM tags to a string.\n   *\n   * @returns {string} The dumped file.\n   */\n  dump() {\n    const keys = Object.keys(this.#dicomElements);\n    let result = '\\n';\n    result += '# Dicom-File-Format\\n';\n    result += '\\n';\n    result += '# Dicom-Meta-Information-Header\\n';\n    result += '# Used TransferSyntax: ';\n    if (isNativeLittleEndian()) {\n      result += 'Little Endian Explicit\\n';\n    } else {\n      result += 'NOT Little Endian Explicit\\n';\n    }\n    let dicomElement = null;\n    let tag = null;\n    let checkHeader = true;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      tag = getTagFromKey(keys[i]);\n      if (checkHeader && tag.getGroup() !== '0002') {\n        result += '\\n';\n        result += '# Dicom-Data-Set\\n';\n        result += '# Used TransferSyntax: ';\n        const syntax = this.#dicomElements['00020010'].value[0];\n        result += getTransferSyntaxName(syntax);\n        result += '\\n';\n        checkHeader = false;\n      }\n      result += this.#getElementAsString(tag, dicomElement) + '\\n';\n    }\n    return result;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n   * @returns {string} A string representation of the DICOM element.\n   */\n  #getElementValueAsString(tag, dicomElement, pretty) {\n    let str = '';\n    const strLenLimit = 65;\n\n    // dafault to pretty output\n    if (typeof pretty === 'undefined') {\n      pretty = true;\n    }\n    // check dicom element input\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\n      return str;\n    }\n\n    // Polyfill for Number.isInteger.\n    const isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n    };\n\n    // TODO Support sequences.\n\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n      str += '(no value available)';\n    } else if (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength) {\n      str = '(PixelSequence)';\n    } else if (dicomElement.vr === 'DA' && pretty) {\n      const daValue = dicomElement.value[0];\n      // Two possible date formats:\n      // - standard 'YYYYMMDD'\n      // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n      let monthBeginIndex = 4;\n      let dayBeginIndex = 6;\n      if (daValue.length !== 8) {\n        monthBeginIndex = 5;\n        dayBeginIndex = 8;\n      }\n      const da = new Date(\n        parseInt(daValue.substring(0, 4), 10),\n        parseInt(daValue.substring(\n          monthBeginIndex, monthBeginIndex + 2), 10) - 1, // 0-11 range\n        parseInt(daValue.substring(\n          dayBeginIndex, dayBeginIndex + 2), 10));\n      str = da.toLocaleDateString();\n    } else if (dicomElement.vr === 'TM' && pretty) {\n      const tmValue = dicomElement.value[0];\n      const tmHour = tmValue.substring(0, 2);\n      const tmMinute = tmValue.length >= 4 ? tmValue.substring(2, 4) : '00';\n      const tmSeconds = tmValue.length >= 6 ? tmValue.substring(4, 6) : '00';\n      str = tmHour + ':' + tmMinute + ':' + tmSeconds;\n    } else {\n      let isOtherVR = false;\n      if (dicomElement.vr.length !== 0) {\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n      }\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'DS');\n      let valueStr = '';\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n        valueStr = '';\n        if (k !== 0) {\n          valueStr += '\\\\';\n        }\n        if (isFloatNumberVR) {\n          const num = Number(dicomElement.value[k]);\n          if (!isInteger(num) && pretty) {\n            valueStr += num.toPrecision(4);\n          } else {\n            valueStr += num.toString();\n          }\n        } else if (isOtherVR) {\n          let tmp = dicomElement.value[k].toString(16);\n          if (dicomElement.vr === 'OB') {\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n          } else {\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n          }\n          valueStr += tmp;\n        } else {\n          valueStr += dicomElement.value[k];\n        }\n        // check length\n        if (str.length + valueStr.length <= strLenLimit) {\n          str += valueStr;\n        } else {\n          str += '...';\n          break;\n        }\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Get a data element as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {string} [prefix] A string to prepend this one.\n   * @returns {string} The element as a string.\n   */\n  #getElementAsString(tag, dicomElement, prefix) {\n    // default prefix\n    prefix = prefix || '';\n\n    // get tag anme from dictionary\n    const tagName = tag.getNameFromDictionary();\n\n    let deSize = dicomElement.value.length;\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n\n    // no size for delimitations\n    if (isItemDelimitationItemTag(tag) ||\n      isSequenceDelimitationItemTag(tag)) {\n      deSize = 0;\n    } else if (isOtherVR) {\n      deSize = 1;\n    }\n\n    const isPixSequence = (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength);\n\n    let line = null;\n\n    // (group,element)\n    line = '(';\n    line += tag.getGroup().toLowerCase();\n    line += ',';\n    line += tag.getElement().toLowerCase();\n    line += ') ';\n    // value representation\n    line += dicomElement.vr;\n    // value\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 &&\n      dicomElement.value[0] === '') {\n      line += ' (no value available)';\n      deSize = 0;\n    } else {\n      // simple number display\n      if (dicomElement.vr === 'na') {\n        line += ' ';\n        line += dicomElement.value[0];\n      } else if (isPixSequence) {\n        // pixel sequence\n        line += ' (PixelSequence #=' + deSize + ')';\n      } else if (dicomElement.vr === 'SQ') {\n        line += ' (Sequence with';\n        if (dicomElement.undefinedLength) {\n          line += ' undefined';\n        } else {\n          line += ' explicit';\n        }\n        line += ' length #=';\n        line += dicomElement.value.length;\n        line += ')';\n      } else if (isOtherVR ||\n          dicomElement.vr === 'pi' ||\n          dicomElement.vr === 'UL' ||\n          dicomElement.vr === 'US' ||\n          dicomElement.vr === 'SL' ||\n          dicomElement.vr === 'SS' ||\n          dicomElement.vr === 'FL' ||\n          dicomElement.vr === 'FD' ||\n          dicomElement.vr === 'AT') {\n        // 'O'ther array, limited display length\n        line += ' ';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n      } else {\n        // default\n        line += ' [';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n        line += ']';\n      }\n    }\n\n    // align #\n    const nSpaces = 55 - line.length;\n    if (nSpaces > 0) {\n      for (let s = 0; s < nSpaces; ++s) {\n        line += ' ';\n      }\n    }\n    line += ' # ';\n    if (dicomElement.vl < 100) {\n      line += ' ';\n    }\n    if (dicomElement.vl < 10) {\n      line += ' ';\n    }\n    line += dicomElement.vl;\n    line += ', ';\n    line += deSize; //dictElement[1];\n    line += ' ';\n    if (tagName !== null) {\n      line += tagName;\n    } else {\n      line += 'Unknown Tag & Data';\n    }\n\n    let message = null;\n\n    // continue for sequence\n    if (dicomElement.vr === 'SQ') {\n      let item = null;\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n        item = dicomElement.value[l];\n        const itemKeys = Object.keys(item);\n        if (itemKeys.length === 0) {\n          continue;\n        }\n\n        // get the item element\n        const itemTag = getItemTag();\n        const itemElement = item['FFFEE000'];\n        message = '(Item with';\n        if (itemElement.undefinedLength) {\n          message += ' undefined';\n        } else {\n          message += ' explicit';\n        }\n        message += ' length #=' + (itemKeys.length - 1) + ')';\n        itemElement.value = [message];\n        itemElement.vr = 'na';\n\n        line += '\\n';\n        line += this.#getElementAsString(itemTag, itemElement, prefix + '  ');\n\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n          const itemTag = getTagFromKey(itemKeys[m]);\n          if (itemKeys[m] !== 'xFFFEE000') {\n            line += '\\n';\n            line += this.#getElementAsString(itemTag, item[itemKeys[m]],\n              prefix + '    ');\n          }\n        }\n\n        message = '(ItemDelimitationItem';\n        if (!itemElement.undefinedLength) {\n          message += ' for re-encoding';\n        }\n        message += ')';\n        const itemDelimTag = getItemDelimitationItemTag();\n        const itemDelimElement = {\n          vr: 'na',\n          vl: '0',\n          value: [message]\n        };\n        line += '\\n';\n        line += this.#getElementAsString(\n          itemDelimTag, itemDelimElement, prefix + '  ');\n\n      }\n\n      message = '(SequenceDelimitationItem';\n      if (!dicomElement.undefinedLength) {\n        message += ' for re-encod.';\n      }\n      message += ')';\n      const sqDelimTag = getSequenceDelimitationItemTag();\n      const sqDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += this.#getElementAsString(sqDelimTag, sqDelimElement, prefix);\n    } else if (isPixSequence) {\n      // pixel sequence\n      let pixItem = null;\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n        pixItem = dicomElement.value[n];\n        line += '\\n';\n        pixItem.vr = 'pi';\n        line += this.#getElementAsString(\n          getPixelDataTag(), pixItem, prefix + '  ');\n      }\n\n      const pixDelimTag = getSequenceDelimitationItemTag();\n      const pixDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: ['(SequenceDelimitationItem)']\n      };\n      line += '\\n';\n      line += this.#getElementAsString(pixDelimTag, pixDelimElement, prefix);\n    }\n\n    return prefix + line;\n  }\n\n  /**\n   * Get a DICOM Element value from a tag name.\n   * Uses the DICOM dictionary.\n   *\n   * @param {string} name The tag name.\n   * @returns {object} The DICOM element value.\n   */\n  getFromName(name) {\n    let value = null;\n    const tag = getTagFromDictionary(name);\n    // check that we are not at the end of the dictionary\n    if (tag !== null) {\n      value = this.getFromKey(tag.getKey());\n    }\n    return value;\n  }\n\n} // class DicomElementsWrapper\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {object} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit !== 'undefined') {\n    const modality = elements['00080060'].value[0];\n    if (modality === 'CT') {\n      unit = 'HU';\n    }\n  }\n  return unit;\n}\n\n/**\n * Get the file list from a DICOMDIR\n *\n * @param {object} data The buffer data of the DICOMDIR\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {object} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {Array} dims Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an array sort callback.\n * f(a,b) > 0 -> b,a\n * f(a,b) < 0 -> a,b\n * f(a,b) = 0 -> original order\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {Function} A function that compares two Index.\n */\nexport function getIndexCompareFunction(direction) {\n  return function (a, b) {\n    return a.get(direction) - b.get(direction);\n  };\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index.\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index\n  let pointLength = 0;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    if (dim > pointLength) {\n      pointLength = dim;\n    }\n  }\n  if (pointLength === 0) {\n    throw new Error('No dimension found in point stringId');\n  }\n  // default values\n  const values = new Array(pointLength);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    dim = parseInt(strIds[j].substring(1, 3), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n  return new Index(values);\n}\n","/**\n * Rescale LUT class.\n * Typically converts from integer to float.\n */\nexport class RescaleLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * The internal array.\n   *\n   * @type {Float32Array}\n   */\n  #lut = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#length = Math.pow(2, bitsStored);\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {object} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'initialise'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Initialise the LUT.\n   */\n  initialise() {\n    // check if already initialised\n    if (this.#isReady) {\n      return;\n    }\n    // create lut and fill it\n    this.#lut = new Float32Array(this.#length);\n    for (let i = 0; i < this.#length; ++i) {\n      this.#lut[i] = this.#rsi.apply(i);\n    }\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset];\n  }\n\n} // class RescaleLut\n","/**\n * Window LUT class.\n * Typically converts from float to integer.\n */\nexport class WindowLut {\n\n  /**\n   * The rescale LUT.\n   *\n   * @type {RescaleLut}\n   */\n  #rescaleLut;\n\n  /**\n   * Signed data flag.\n   *\n   * @type {boolean}\n   */\n  #isSigned;\n\n  /**\n   * The internal array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut = null;\n\n  /**\n   * The window level.\n   *\n   * @type {object}\n   */\n  #windowLevel = null;\n\n  /**\n   * Flag to know if the lut is ready or not.\n   *\n   * @type {boolean}\n   */\n  #isReady = false;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   */\n  constructor(rescaleLut, isSigned) {\n    this.#rescaleLut = rescaleLut;\n    this.#isSigned = isSigned;\n  }\n\n  /**\n   * Get the window / level.\n   *\n   * @returns {WindowLevel} The window / level.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Get the signed flag.\n   *\n   * @returns {boolean} The signed flag.\n   */\n  isSigned() {\n    return this.#isSigned;\n  }\n\n  /**\n   * Get the rescale lut.\n   *\n   * @returns {object} The rescale lut.\n   */\n  getRescaleLut() {\n    return this.#rescaleLut;\n  }\n\n  /**\n   * Is the lut ready to use or not? If not, the user must\n   * call 'update'.\n   *\n   * @returns {boolean} True if the lut is ready to use.\n   */\n  isReady() {\n    return this.#isReady;\n  }\n\n  /**\n   * Set the window center and width.\n   *\n   * @param {WindowLevel} wl The window level.\n   */\n  setWindowLevel(wl) {\n    // store the window values\n    this.#windowLevel = wl;\n    // possible signed shift\n    this.#signedShift = 0;\n    this.#windowLevel.setSignedOffset(0);\n    if (this.#isSigned) {\n      const size = this.#rescaleLut.getLength();\n      this.#signedShift = size / 2;\n      this.#windowLevel.setSignedOffset(\n        this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\n    }\n    // update ready flag\n    this.#isReady = false;\n  }\n\n  /**\n   * Update the lut if needed..\n   */\n  update() {\n    // check if we need to update\n    if (this.#isReady) {\n      return;\n    }\n\n    // check rescale lut\n    if (!this.#rescaleLut.isReady()) {\n      this.#rescaleLut.initialise();\n    }\n    // create window lut\n    const size = this.#rescaleLut.getLength();\n    if (!this.#lut) {\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n    }\n    // by default WindowLevel returns a value in the [0,255] range\n    // this is ok with regular Arrays and ClampedArray.\n    for (let i = 0; i < size; ++i) {\n      this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\n    }\n\n    // update ready flag\n    this.#isReady = true;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#lut.length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    return this.#lut[offset + this.#signedShift];\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {Array} THe LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values.\n *  otherwise return 0 for the first third and\n *  lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values.\n *  otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\nexport const lut = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable max-len */\n\n  // pet\n  /* eslint-disable max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot metal blue\n  /* eslint-disable max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet 20 step\n  /* eslint-disable max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable max-len */\n};\n","/**\n * Minimum window width value.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\n */\nconst MinWindowWidth = 1;\n\nexport const defaultPresets = {\n  CT: {\n    mediastinum: {center: 40, width: 400},\n    lung: {center: -500, width: 1500},\n    bone: {center: 500, width: 2000},\n    brain: {center: 40, width: 80},\n    head: {center: 90, width: 350}\n  }\n};\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < MinWindowWidth ? MinWindowWidth : value;\n}\n\n/**\n * WindowLevel class.\n * <br>Pseudo-code:\n * <pre>\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * </pre>\n *\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\n */\nexport class WindowLevel {\n\n  /**\n   * The center.\n   *\n   * @type {number}\n   */\n  #center;\n\n  /**\n   * The width.\n   *\n   * @type {number}\n   */\n  #width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < MinWindowWidth) {\n      throw new Error('Window width shall always be greater than or equal to ' +\n        MinWindowWidth);\n    }\n    this.#center = center;\n    this.#width = width;\n\n    this.#init();\n  }\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const c = this.#center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Get the window center.\n   *\n   * @returns {number} The window center.\n   */\n  getCenter() {\n    return this.#center;\n  }\n\n  /**\n   * Get the window width.\n   *\n   * @returns {number} The window width.\n   */\n  getWidth() {\n    return this.#width;\n  }\n\n  /**\n   * Set the output value range.\n   *\n   * @param {string} min The output value minimum.\n   * @param {string} max The output value maximum.\n   */\n  setRange(min, max) {\n    this.#ymin = parseInt(min, 10);\n    this.#ymax = parseInt(max, 10);\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return parseInt(((value * this.#slope) + this.#inter), 10);\n    }\n  }\n\n  /**\n   * Check for window level equality.\n   *\n   * @param {object} rhs The other window level to compare to.\n   * @returns {boolean} True if both window level are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter() === rhs.getCenter() &&\n      this.getWidth() === rhs.getWidth();\n  }\n\n  /**\n   * Get a string representation of the window level.\n   *\n   * @returns {string} The window level as a string.\n   */\n  toString() {\n    return (this.getCenter() + ', ' + this.getWidth());\n  }\n\n} // class WindowLevel\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {object} c1 The first colour.\n * @param {object} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {object} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {object} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {object} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\n * @param {object} rgbTriplet RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgbTriplet) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgbTriplet.r * 0.001172549 +\n    rgbTriplet.g * 0.002301961 +\n    rgbTriplet.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {object} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.getX() * this.getX()) +\n      (this.getY() * this.getY()) +\n      (this.getZ() * this.getZ())\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * @see https://en.wikipedia.org/wiki/Cross_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * @see https://en.wikipedia.org/wiki/Dot_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.getX() * vector3D.getX()) +\n      (this.getY() * vector3D.getY()) +\n      (this.getZ() * vector3D.getZ());\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// difference between 1 and the smallest floating point number greater than 1\n// -> ~2e-16\nif (typeof Number.EPSILON === 'undefined') {\n  Number.EPSILON = Math.pow(2, -52);\n}\n// -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {Array} values row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {Array} array3D The input 3D array.\n   * @returns {Array} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ',\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum,\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\n * @see https://github.com/willnode/N-Matrix-Programmer\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix = null;\n  if (name === 'axial') {\n    matrix = getIdentityMat33();\n  } else if (name === 'coronal') {\n    matrix = getCoronalMat33();\n  } else if (name === 'sagittal') {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() + ', ' + this.getY() + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} The distance to the input point.\n   */\n  getDistance(point2D) {\n    return Math.sqrt(\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\n  }\n\n  /**\n   * Round a Point2D.\n   *\n   * @returns {Point2D} The rounded point.\n   */\n  getRound() {\n    return new Point2D(\n      Math.round(this.getX()),\n      Math.round(this.getY())\n    );\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.getX(), rhs.getX(), tol) &&\n      isSimilar(this.getY(), rhs.getY(), tol) &&\n      isSimilar(this.getZ(), rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.getX() - point3D.getX()),\n      (this.getY() - point3D.getY()),\n      (this.getZ() - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Get an array find callback for a similar input point.\n *\n * @param {Point3D} point The point to compare to.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {Function} A function that compares, using `isSimilar`,\n *   its input point to the one given as input to this function.\n */\nexport function getSimilarPoint3DFunction(point, tol) {\n  return function (element) {\n    return element.isSimilar(point, tol);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {Array} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {Array} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Point} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, position, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(position.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(position.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Point} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Array} regions An array of regions.\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, position, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let index = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      index = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (index !== null) {\n    max = regions[index][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(position.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(position.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\n */\nexport class ListenerHandler {\n  /**\n   * listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLut} from './windowLut';\nimport {lut} from './luts';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n/**\n * List of view event names.\n *\n * @type {Array}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {object}\n   */\n  #windowLuts = {};\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {object}\n   */\n  #currentWl = null;\n\n  /**\n   * colour map.\n   *\n   * @type {object}\n   */\n  #colourMap = lut.plain;\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {object}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to 0.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {*} _value The pixel value. Can be a number for monochrome\n   *  data or an array for RGB data.\n   * @param {number} _index The data index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {(value, index) => number} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {(value, index) => number} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @param {object} [rsi] Optional image rsi, will take the one of the\n   *   current slice otherwise.\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  getCurrentWindowLut(rsi) {\n    // check position\n    if (!this.getCurrentIndex()) {\n      this.setInitialIndex();\n    }\n    const currentIndex = this.getCurrentIndex();\n    // use current rsi if not provided\n    if (typeof rsi === 'undefined') {\n      rsi = this.#image.getRescaleSlopeAndIntercept(currentIndex);\n    }\n\n    // get the current window level\n    let wl = null;\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // get the preset for this slice\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\n    }\n    // regular case\n    if (!wl) {\n      // if no current, use first id\n      if (!this.#currentWl) {\n        this.setWindowLevelPresetById(0, true);\n      }\n      wl = this.#currentWl;\n    }\n\n    // get the window lut\n    let wlut = this.#windowLuts[rsi.toString()];\n    if (typeof wlut === 'undefined') {\n      // create the rescale lookup table\n      const rescaleLut = new RescaleLut(\n        this.#image.getRescaleSlopeAndIntercept(0),\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      const windowLut = new WindowLut(\n        rescaleLut, this.#image.getMeta().IsSigned);\n      // store\n      this.addWindowLut(windowLut);\n      wlut = windowLut;\n    }\n\n    // update lut window level if not present or different from previous\n    const lutWl = wlut.getWindowLevel();\n    if (!wl.equals(lutWl)) {\n      // set lut window level\n      wlut.setWindowLevel(wl);\n      wlut.update();\n      // fire change event\n      if (!lutWl ||\n        lutWl.getWidth() !== wl.getWidth() ||\n        lutWl.getCenter() !== wl.getCenter()) {\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [wl.getCenter(), wl.getWidth()],\n          wc: wl.getCenter(),\n          ww: wl.getWidth(),\n          skipGenerate: true\n        });\n      }\n    }\n\n    // return\n    return wlut;\n  }\n\n  /**\n   * Add the window LUT to the list.\n   *\n   * @param {WindowLut} wlut The window LUT of the image.\n   */\n  addWindowLut(wlut) {\n    const rsi = wlut.getRescaleLut().getRSI();\n    this.#windowLuts[rsi.toString()] = wlut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {object} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Set the default colour map.\n   *\n   * @param {object} map The colour map.\n   */\n  setDefaultColourMap(map) {\n    this.#colourMap = map;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n        this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {object} The colour map of the image.\n   */\n  getColourMap() {\n    return this.#colourMap;\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {object} map The colour map of the image.\n   * @fires View#colourchange\n   */\n  setColourMap(map) {\n    this.#colourMap = map;\n    /**\n     * Color change event.\n     *\n     * @event View#colourchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     * @property {number} wc The new window center value.\n     * @property {number} ww The new window wdth value.\n     */\n    this.#fireEvent({\n      type: 'colourchange',\n      wc: this.getCurrentWindowLut().getWindowLevel().getCenter(),\n      ww: this.getCurrentWindowLut().getWindowLevel().getWidth()\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the origin at a given position.\n   *\n   * @param {Point} position The position.\n   * @returns {Point} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {Array} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(center, width, name, silent) {\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\n    if (width < 1) {\n      return;\n    }\n\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // new window level\n    const newWl = new WindowLevel(center, width);\n\n    // check if new\n    const isNew = !newWl.equals(this.#currentWl);\n\n    // compare to previous if present\n    if (isNew) {\n      const isNewWidth = this.#currentWl\n        ? this.#currentWl.getWidth() !== width : true;\n      const isNewCenter = this.#currentWl\n        ? this.#currentWl.getCenter() !== center : true;\n      // assign\n      this.#currentWl = newWl;\n      this.#currentPresetName = name;\n\n      if (isNewWidth || isNewCenter) {\n        /**\n         * Window/level change event.\n         *\n         * @event View#wlchange\n         * @type {object}\n         * @property {Array} value The changed value.\n         * @property {number} wc The new window center value.\n         * @property {number} ww The new window wdth value.\n         * @property {boolean} skipGenerate Flag to skip view generation.\n         */\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [center, width],\n          wc: center,\n          ww: width,\n          skipGenerate: silent\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(\n      wl.getCenter(), wl.getWidth(), name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Clone the image using all meta data and the original data buffer.\n   *\n   * @returns {View} A full copy of this {View}.\n   */\n  clone() {\n    const copy = new View(this.getImage());\n    for (const key in this.#windowLuts) {\n      copy.addWindowLut(this.#windowLuts[key]);\n    }\n    copy.setListeners(this.getListeners());\n    return copy;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {object} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const iterator = getSliceIterator(\n      image, index, false, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut(),\n        this.getColourMap()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getColourMap(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.decrementIndex(this.getScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.incrementIndex(this.getScrollIndex(), silent);\n  }\n\n} // class View\n","/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} windowLut The window/level LUT.\n * @param {object} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {object} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {View} from './view';\nimport {lut} from './luts';\nimport {WindowLevel, defaultPresets} from './windowLevel';\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dicomElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setDefaultColourMap(lut.invPlain);\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      const paletteLut = image.getMeta().paletteLut;\n      if (typeof (paletteLut) !== 'undefined') {\n        view.setDefaultColourMap(paletteLut);\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowLevel(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Rescale Slope and Intercept\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {object} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n          this.getSlope() === rhs.getSlope() &&\n          this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Get a string representation of the RSI.\n   *\n   * @returns {string} The RSI as a string.\n   */\n  toString() {\n    return (this.getSlope() + ', ' + this.getIntercept());\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // create the image\n *   const imageFactory = new ImageFactory();\n *   // inputs are dicom tags and buffer\n *   const image = imageFactory.create(\n *     dicomParser.getDicomElements(),\n *     dicomParser.getDicomElements()['7FE00010'].value[0]\n *   );\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * Data buffer.\n   *\n   * @type {Array}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {Array}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {object}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {Array}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\n   *   1:RRR...GGG...BBB...).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {object}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {object}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {Array} buffer The image data as a one dimensional buffer.\n   * @param {Array} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo dangerous...\n   * @returns {Array} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {object} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {object} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {object} inRsi The input rescale slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(i);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {object} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {object} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|object} value The value to check.\n   * @returns {Array} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    if (this.#numberOfComponents === 1) {\n      value = [value];\n    } else if (this.#numberOfComponents === 3 &&\n      typeof value.r !== 'undefined') {\n      value = [value.r, value.g, value.b];\n    }\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== value[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {Array} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key);\n      }\n    }\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(rhs.getGeometry().getOrigin(), timeId);\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame();\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {object} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {object} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsets List of offsets where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsets(offsets, value) {\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      this.#buffer[offset] = value.r;\n      this.#buffer[offset + 1] = value.g;\n      this.#buffer[offset + 2] = value.b;\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object|Array} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (typeof value !== 'undefined' &&\n        typeof value.r !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      } else {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagechange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {Array} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {\n  BIG_EPSILON,\n  isSimilar,\n  getIdentityMat33\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Array}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {object}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Array} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      this.#origins,\n      this.#orientation\n    );\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Updating slice spacing.');\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest index\n    let closestSliceIndex = 0;\n    let minDist = point.getDistance(localOrigins[0]);\n    let dist = 0;\n    for (let i = 0; i < localOrigins.length; ++i) {\n      dist = point.getDistance(localOrigins[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestSliceIndex = i;\n      }\n    }\n    const closestOrigin = localOrigins[closestSliceIndex];\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n    // use third orientation matrix column as base plane vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    const dotProd = normal.dotProduct(pointDir);\n    // oposite vectors get higher index\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    if (typeof time !== 'undefined') {\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Array} origins An array of Point3D.\n * @param {Matrix33} orientation The oritentation matrix.\n * @param {boolean} [withCheck] Flag to activate spacing variation check,\n *   default to true.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\n  if (typeof withCheck === 'undefined') {\n    withCheck = true;\n  }\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n  // (x, y, z) = orientationMatrix * (i, j, k)\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\n  // applied on the patient position, reorders indices\n  // so that Z is the slice direction\n  const invOrientation = orientation.getInverse();\n  let origin1 = invOrientation.multiplyVector3D(origins[0]);\n  let origin2 = invOrientation.multiplyVector3D(origins[1]);\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\n  const deltas = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    origin1 = invOrientation.multiplyVector3D(origins[i]);\n    origin2 = invOrientation.multiplyVector3D(origins[i + 1]);\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\n    if (diff === 0) {\n      throw new Error('Zero slice spacing.' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    // keep smallest\n    if (diff < sliceSpacing) {\n      sliceSpacing = diff;\n    }\n    if (withCheck) {\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\n        deltas.push(Math.abs(sliceSpacing - diff));\n      }\n    }\n  }\n  // warn if non constant\n  if (withCheck && deltas.length !== 0) {\n    const sumReducer = function (sum, value) {\n      return sum + value;\n    };\n    const mean = deltas.reduce(sumReducer) / deltas.length;\n    if (mean > 1e-4) {\n      logger.warn('Varying slice spacing, mean delta: ' +\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\n    }\n  }\n\n  return sliceSpacing;\n}\n","import {Vector3D} from '../math/vector';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {object} offset3D The 3D offset as {x,y,z}.\n   * @returns {object} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   * WARN: returns absolute values...\n   * TODO: check why abs is needed...\n   *\n   * @param {object} values Values as {x,y,z}.\n   * @returns {object} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {object} offset The previous offset as {x,y}.\n * @param {object} scale The previous scale as {x,y}.\n * @param {object} newScale The new scale as {x,y}.\n * @param {object} center The scale center as {x,y}.\n * @returns {object} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * Display position: {x,y}\n * Plane position: Index (access: get(i))\n * (world) Position: Point3D (access: getX, getY, getZ)\n *\n * Display -> World:\n * planePos = viewLayer.displayToPlanePos(displayPos)\n * -> compensate for layer scale and offset\n * pos = viewController.getPositionFromPlanePoint(planePos)\n *\n * World -> display\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\n * no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * List of layers.\n   *\n   * @type {Array}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y}.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y}.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = null;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * The target orientation matrix.\n   *\n   * @type {object}\n   */\n  #targetOrientation;\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Set the target orientation.\n   *\n   * @param {Matrix33} orientation The orientation matrix.\n   */\n  setTargetOrientation(orientation) {\n    this.#targetOrientation = orientation;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    return this.#layers.length;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {object} The layer.\n   */\n  getActiveViewLayer() {\n    return this.#layers[this.#activeViewLayerIndex];\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {Array} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        if (this.#layers[i].getViewController().equalImageMeta(meta)) {\n          res.push(this.#layers[i]);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {Array} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer) {\n        res.push(this.#layers[i].getDataIndex());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {object} The layer.\n   */\n  getActiveDrawLayer() {\n    return this.#layers[this.#activeDrawLayerIndex];\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    const res = [];\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        res.push(this.#layers[i]);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    this.#activeViewLayerIndex = index;\n  }\n\n  /**\n   * Set the active view layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveViewLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveViewLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    this.#activeDrawLayerIndex = index;\n  }\n\n  /**\n   * Set the active draw layer with a data index.\n   *\n   * @param {number} index The data index.\n   */\n  setActiveDrawLayerByDataIndex(index) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataIndex() === index) {\n        this.setActiveDrawLayer(i);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @returns {object} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @returns {object} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {object} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      viewLayer.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {object} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = null;\n    this.#activeDrawLayerIndex = null;\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    const layer0 = this.#layers[0];\n    const vc = layer0.getViewController();\n    const p2D = vc.getPlanePositionFromPosition(position);\n    const displayPos = layer0.planePosToDisplay(p2D.x, p2D.y);\n\n    const lineH = document.createElement('hr');\n    lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n    lineH.className = 'horizontal';\n    lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n    lineH.style.left = '0px';\n    lineH.style.top = displayPos.y + 'px';\n\n    const lineV = document.createElement('hr');\n    lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n    lineV.className = 'vertical';\n    lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n    lineV.style.left = (displayPos.x) + 'px';\n    lineV.style.top = '0px';\n\n    this.#containerDiv.appendChild(lineH);\n    this.#containerDiv.appendChild(lineV);\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    let div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-horizontal');\n    if (div) {\n      div.remove();\n    }\n    div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-vertical');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        this.#layers[j].removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[j].removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0 = null;\n    let baseViewLayerOrigin = null;\n    // update position for all layers except the source one\n    for (let i = 0; i < this.#layers.length; ++i) {\n\n      // update base offset (does not trigger redraw)\n      // TODO check draw layers update\n      let hasSetOffset = false;\n      if (this.#layers[i] instanceof ViewLayer) {\n        const vc = this.#layers[i].getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (!baseViewLayerOrigin) {\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n        } else {\n          if (vc.canSetPosition(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            const scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            const planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n\n            hasSetOffset =\n              this.#layers[i].setBaseOffset(scrollOffset, planeOffset);\n          }\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (this.#layers[i].getId() !== event.srclayerid) {\n        hasSetPos = this.#layers[i].setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        this.#layers[i].draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (let k = 0; k < this.#layers.length; ++k) {\n      if (this.#layers[k] instanceof ViewLayer) {\n        this.#layers[k].addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        this.#layers[k].addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the fit scale: the scale that fits the largest data.\n   *\n   * @returns {number|undefined} The fit scale.\n   */\n  calculateFitScale() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max size\n    const maxSize = this.getMaxSize();\n    if (typeof maxSize === 'undefined') {\n      return undefined;\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxSize.x,\n      this.#containerDiv.offsetHeight / maxSize.y\n    );\n  }\n\n  /**\n   * Set the layer group fit scale.\n   *\n   * @param {number} scaleIn The fit scale.\n   */\n  setFitScale(scaleIn) {\n    // get maximum size\n    const maxSize = this.getMaxSize();\n    // exit if none\n    if (typeof maxSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\n    };\n\n    // apply to layers\n    for (let j = 0; j < this.#layers.length; ++j) {\n      this.#layers[j].fitToContainer(scaleIn, containerSize, fitOffset);\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data size.\n   *\n   * @returns {object|undefined} The largest size as {x,y}.\n   */\n  getMaxSize() {\n    let maxSize = {x: 0, y: 0};\n    for (let j = 0; j < this.#layers.length; ++j) {\n      if (this.#layers[j] instanceof ViewLayer) {\n        const size = this.#layers[j].getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {object} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setScale(this.#scale, center);\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {object} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {object} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].setOffset(this.#offset);\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].draw();\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (let i = 0; i < this.#layers.length; ++i) {\n      this.#layers[i].display(flag);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {logger} from '../utils/logger';\n\n/**\n * Mask segment helper.\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {Array}\n   */\n  #segments;\n\n  /**\n   * List of ids of hidden segments.\n   *\n   * @type {Array}\n   */\n  #hiddenSegments = [];\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    this.#segments = mask.getMeta().custom.segments;\n  }\n\n  /**\n   * Check if a segment is part of the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {Array} numbers Array of segment numbers.\n   * @returns {Array} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        values.push(segment.displayValue);\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {object} The segment.\n   */\n  getSegment(segmentNumber) {\n    return this.#segments.find(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Get the inner segment list.\n   *\n   * @returns {Array} The list of segments.\n   */\n  getSegments() {\n    return this.#segments;\n  }\n\n  /**\n   * Set the inner segment list.\n   *\n   * @param {Array} list The segment list.\n   */\n  setSegments(list) {\n    this.#segments = list;\n  }\n\n  /**\n   * Set the hidden segment list.\n   * TODO: not sure if needed...\n   *\n   * @param {Array} list The list of hidden segment numbers.\n   */\n  setHiddenSegments(list) {\n    this.#hiddenSegments = list;\n  }\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number|undefined} The index in the array.\n   */\n  #getHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#getHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenSegments.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Segment is allready in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#getHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {(value, index) => number} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\n      const segment = this.getSegment(this.#hiddenSegments[i]);\n      if (typeof segment !== 'undefined') {\n        hiddenColours.push(segment.displayValue);\n      }\n    }\n\n    // create alpha function\n    return function (value/*, index*/) {\n      for (let i = 0; i < hiddenColours.length; ++i) {\n        if (value[0] === hiddenColours[i].r &&\n          value[1] === hiddenColours[i].g &&\n          value[2] === hiddenColours[i].b) {\n          return 0;\n        }\n      }\n      // default\n      return 255;\n    };\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {(event) => void} cmdCallback The command event callback.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\n    const delcmd = new DeleteSegmentCommand(\n      this.#mask, this.getSegment(segmentNumber));\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    if (delcmd.isValid()) {\n      delcmd.execute();\n      // callback\n      exeCallback(delcmd);\n      // possibly hidden\n      if (this.isHidden(segmentNumber)) {\n        this.removeFromHidden(segmentNumber);\n      }\n    }\n  }\n\n} // class MaskSegmentHelper\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {object}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {Array}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {object} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    this.#offsets = mask.getOffsets(segment.displayValue);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {lut} from '../image/luts';\nimport {ListenerHandler} from '../utils/listen';\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Associated data index.\n   *\n   * @type {number}\n   */\n  #index;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Mask segment helper.\n   *\n   * @type {MaskSegmentHelper}\n   */\n  #maskSegmentHelper;\n\n  // third dimension player ID (created by setInterval)\n  #playerID = null;\n  // associated data index\n  #dataIndex;\n\n  /**\n   * @param {View} view The associated view.\n   * @param {number} index The associated data index.\n   */\n  constructor(view, index) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n    this.#index = index;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#maskSegmentHelper =\n        new MaskSegmentHelper(view.getImage());\n    }\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {object} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return typeof this.#maskSegmentHelper !== 'undefined';\n  }\n\n  /**\n   * Get the mask segment helper.\n   *\n   * @returns {object} The helper.\n   */\n  getMaskSegmentHelper() {\n    return this.#maskSegmentHelper;\n  }\n\n  /**\n   * Apply the hidden segments list by setting\n   * the corresponding alpha function.\n   */\n  applyHiddenSegments() {\n    if (this.isMask) {\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\n    }\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, exeCallback) {\n    if (this.isMask) {\n      this.#maskSegmentHelper.deleteSegment(\n        segmentNumber, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {Array} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (this.#playerID !== null);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   * @param {number} index The data index of the image.\n   */\n  setImage(img, index) {\n    this.#view.setImage(img);\n    this.#dataIndex = index;\n  }\n\n  /**\n   * Get the current spacing.\n   *\n   * @returns {Array} The 2D spacing.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing();\n    return [spacing.get(0), spacing.get(1)];\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position the input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let position = this.getCurrentIndex();\n    let rescaled = true;\n\n    // created oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      // generate slice values\n      const sliceIter = getSliceIterator(\n        image,\n        position,\n        rescaled,\n        orientation\n      );\n      const sliceValues = getIteratorValues(sliceIter);\n      // oriented geometry\n      const orientedSize = image.getGeometry().getSize(orientation);\n      const sizeValues = orientedSize.getValues();\n      sizeValues[2] = 1;\n      const sliceSize = new Size(sizeValues);\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\n      const spacingValues = orientedSpacing.getValues();\n      spacingValues[2] = 1;\n      const sliceSpacing = new Spacing(spacingValues);\n      const sliceOrigin = new Point3D(0, 0, 0);\n      const sliceGeometry =\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n      // slice image\n      image = new Image(sliceGeometry, sliceValues);\n      // update position\n      position = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, position, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {Array} regions A list of regions.\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    const iter = getVariableRegionSliceIterator(\n      this.#view.getImage(),\n      this.getCurrentIndex(),\n      true, regions\n    );\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canWindowLevel() {\n    return this.#view.getImage().canWindowLevel();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    return this.#view.canSetPosition(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a position from a 2D (x,y) position.\n   *\n   * @param {number} x The column position.\n   * @param {number} y The row position.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(x, y) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(x, y, k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedVector3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D (x,y) position from a position.\n   *\n   * @param {Point3D} point3D The 3D position.\n   * @returns {object} The 2D position.\n   */\n  getPlanePositionFromPosition(point3D) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point = geometry.worldToPoint(point3D);\n    const planePoint = this.#planeHelper.getImageDeOrientedVector3D(point);\n    // return\n    return {\n      x: planePoint.getX(),\n      y: planePoint.getY(),\n    };\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} silent If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {object} point2D The 2D position as {x,y}.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedVector3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.#view.incrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.#view.decrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.#view.decrementScrollIndex(silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.#view.incrementScrollIndex(silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (this.#playerID === null) {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (this.#playerID !== null) {\n      clearInterval(this.#playerID);\n      this.#playerID = null;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {object} The window center and width.\n   */\n  getWindowLevel() {\n    return {\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\n    };\n  }\n\n  /**\n   * Set the window/level.\n   *\n   * @param {number} wc The window center.\n   * @param {number} ww The window width.\n   */\n  setWindowLevel(wc, ww) {\n    this.#view.setWindowLevel(wc, ww);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {object} The colour map.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {object} colourMap The colour map.\n   */\n  setColourMap(colourMap) {\n    this.#view.setColourMap(colourMap);\n  }\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {(value, index) => number} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Set the colour map from a name.\n   *\n   * @param {string} name The name of the colour map to set.\n   */\n  setColourMapFromName(name) {\n    // check if we have it\n    if (!lut[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n    // enable it\n    this.setColourMap(lut[name]);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class ViewController\n","import {logger} from '../utils/logger';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get a HTML element associated to a container div.\n *\n * @param {string} containerDivId The id of the container div.\n * @param {string} name The name or id to find.\n * @returns {object} The found element or null.\n * @deprecated\n */\nexport function getElement(containerDivId, name) {\n  // get by class in the container div\n  const parent = document.getElementById(containerDivId);\n  if (!parent) {\n    return null;\n  }\n  const elements = parent.getElementsByClassName(name);\n  // getting the last element since some libraries (ie jquery-mobile) create\n  // span in front of regular tags (such as select)...\n  let element = elements[elements.length - 1];\n  // if not found get by id with 'containerDivId-className'\n  if (typeof element === 'undefined') {\n    element = document.getElementById(containerDivId + '-' + name);\n  }\n  return element;\n}\n\n/**\n * Prompt the user for some text. Uses window.prompt.\n *\n * @param {string} message The message in front of the input field.\n * @param {string} value The input default value.\n * @returns {string} The new value.\n */\nexport function prompt(message, value) {\n  return prompt(message, value);\n}\n\n/**\n * Custom UI object for client defined UI.\n */\nexport const customUI = {};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Array} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push({\n      x: touches[i].pageX - offsetLeft,\n      y: touches[i].pageY - offsetTop\n    });\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Array} The array of offsets.\n */\nexport function getEventOffset(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  } else {\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\n    // between that event and the padding edge of the target node\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\n    positions.push({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n  }\n  return positions;\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * @see https://github.com/ivmartel/dwv/issues/902\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\n   *\n   * @type {boolean}\n   */\n  #imageSmoothingEnabled = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Set the imageSmoothingEnabled flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  enableImageSmoothing(flag) {\n    this.#imageSmoothingEnabled = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {number} index The associated data index.\n   */\n  setView(view, index) {\n    this.#dataIndex = index;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourchange', this.#onColourChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view, index);\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {object} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataIndex === event.dataid) {\n      this.#viewController.setImage(event.value[0], this.#dataIndex);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   */\n  onimagechange = (event) => {\n    // event.value = [index]\n    if (this.#dataIndex === event.dataid) {\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n    this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to an index.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {Index} The equivalent index.\n   */\n  displayToPlaneIndex(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return new Index([\n      Math.floor(planePos.x),\n      Math.floor(planePos.y)\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The de-scaled position as {x,y}.\n   */\n  displayToPlaneScale(x, y) {\n    return {\n      x: x / this.#scale.x,\n      y: y / this.#scale.y\n    };\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The plane position as {x,y}.\n   */\n  displayToPlanePos(x, y) {\n    const deScaled = this.displayToPlaneScale(x, y);\n    return {\n      x: deScaled.x + this.#offset.x,\n      y: deScaled.y + this.#offset.y\n    };\n  }\n\n  planePosToDisplay(x, y) {\n    return {\n      x: (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x,\n      y: (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y\n    };\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The main plane position as {x,y}.\n   */\n  displayToMainPlanePos(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return {\n      x: planePos.x - this.#baseOffset.x,\n      y: planePos.y - this.#baseOffset.y\n    };\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothingEnabled;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataIndex()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {object} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    let needsDraw = false;\n\n    // update canvas size if needed (triggers canvas reset)\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\n      }\n      // canvas size  change triggers canvas reset\n      this.#canvas.width = fitSize.x;\n      this.#canvas.height = fitSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n    // previous fit scale\n    const previousFitScale = this.#fitScale;\n    // previous scale without fit\n    const previousScale = {\n      x: this.#scale.x / this.#fitScale.x,\n      y: this.#scale.y / this.#fitScale.y\n    };\n    // fit scale\n    const newFitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // scale\n    const newScale = {\n      x: previousScale.x * newFitScale.x,\n      y: previousScale.y * newFitScale.y\n    };\n    // check if different\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x * previousFitScale.x / newFitScale.x,\n      y: this.#flipOffset.y * previousFitScale.y / newFitScale.y\n    };\n    // check if different\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update global offset\n      this.#offset = {\n        x: this.#viewOffset.x +\n          this.#baseOffset.x +\n          this.#zoomOffset.x +\n          this.#flipOffset.x,\n        y: this.#viewOffset.y +\n          this.#baseOffset.y +\n          this.#zoomOffset.y +\n          this.#flipOffset.y\n      };\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(\n        names[i], this.#fireEvent, {passive: true});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n  /**\n   * Align on another layer.\n   *\n   * @param {ViewLayer} rhs The layer to align on.\n   */\n  align(rhs) {\n    this.#canvas.style.top = rhs.getCanvas().offsetTop;\n    this.#canvas.style.left = rhs.getCanvas().offsetLeft;\n  }\n\n} // ViewLayer class\n","// external\nimport Konva from 'konva';\n\n/**\n * Get the display name of the input shape.\n *\n * @param {object} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {Konva.Layer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {number} id The id of the create draw.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {object}\n   */\n  #translation;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {Konva.Layer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {Konva.Layer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {object} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {number} id The id of the create draw.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n/**\n * Konva.\n *\n * @external Konva\n * @see https://konvajs.org/\n */\nimport Konva from 'konva';\n\n/**\n * Get the draw group id for a given position.\n *\n * @param {Point} currentPosition The current position.\n * @returns {string} The group id.\n * @deprecated Use the index.toStringId instead.\n */\nexport function getDrawPositionGroupId(currentPosition) {\n  const sliceNumber = currentPosition.get(2);\n  const frameNumber = currentPosition.length() === 4\n    ? currentPosition.get(3) : 0;\n  return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n}\n\n/**\n * Get the slice and frame position from a group id.\n *\n * @param {string} groupId The group id.\n * @returns {object} The slice and frame number.\n * @deprecated Use the getVectorFromStringId instead.\n */\nexport function getPositionFromGroupId(groupId) {\n  const sepIndex = groupId.indexOf('_');\n  if (sepIndex === -1) {\n    logger.warn('Badly formed PositionGroupId: ' + groupId);\n  }\n  return {\n    sliceNumber: groupId.substring(6, sepIndex),\n    frameNumber: groupId.substring(sepIndex + 7)\n  };\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {(node) => boolean} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {object} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {Konva.Layer} konvaLayer The draw layer.\n   */\n  constructor(konvaLayer) {\n    this.#konvaLayer = konvaLayer;\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {object} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup = null;\n    if (posGroups.length === 1) {\n      posGroup = posGroups[0];\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {Array} A list of draw details as\n   *   {id, position, type, color, meta}\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup, shape.className, this.#konvaLayer);\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {object} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {object} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group, shapeDisplayName, this.#konvaLayer);\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    exeCallback(delcmd);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const groups = this.#konvaLayer.getChildren();\n    while (groups.length) {\n      this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\n    }\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  #drawController = null;\n\n  /**\n   * The plane helper.\n   *\n   * @type {object}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data index.\n   *\n   * @type {number}\n   */\n  #dataIndex = null;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data index.\n   *\n   * @returns {number} The index.\n   */\n  getDataIndex() {\n    return this.#dataIndex;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {object} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {object} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {object} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip scale is handled by layer group\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} center The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ(newScale);\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} index The associated data index.\n   */\n  initialise(size, spacing, index) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataIndex = index;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(konvaLayer);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    // update konva\n    this.#konvaStage.setWidth(fitSize.x);\n    this.#konvaStage.setHeight(fitSize.y);\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y / this.#fitScale.y\n    };\n    // update fit scale\n    this.#fitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // update scale\n    this.#konvaStage.scale({\n      x: previousScale.x * this.#fitScale.x,\n      y: previousScale.y * this.#fitScale.y\n    });\n\n    // update offsets\n    this.#viewOffset = {\n      x: fitOffset.x / this.#fitScale.x,\n      y: fitOffset.y / this.#fitScale.y\n    };\n    this.#konvaStage.offset({\n      x: this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toogleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataIndex;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {object} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {LayerGroup} from './layerGroup';\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setWindowLevel(event.value[0], event.value[1]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data index\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  // associated layer groups\n  #layerGroups = [];\n  // active layer group index\n  #activeLayerGroupIndex = null;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataIndex(index));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = null;\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Synchronise the fit scale of the group layers.\n   */\n  syncLayerGroupScale() {\n    let minScale;\n    const hasScale = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const scale = this.#layerGroups[i].calculateFitScale();\n      if (typeof scale !== 'undefined') {\n        hasScale.push(i);\n        if (typeof minScale === 'undefined' || scale < minScale) {\n          minScale = scale;\n        }\n      }\n    }\n    // exit if no scale\n    if (typeof minScale === 'undefined') {\n      return;\n    }\n    // apply min scale to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasScale.includes(j)) {\n        this.#layerGroups[j].setFitScale(minScale);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {getShadowColour} from '../utils/colour';\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {object}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {object}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {number} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {object} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {number} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {object} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {object} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {getDrawPositionGroupId} from '../app/drawController';\n\n// external\nimport Konva from 'konva';\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021)\n *   - store position as array\n *   - new draw position group key\n * - v0.4 (dwv 0.29.0, 06/2021)\n *   - move drawing details into meta property\n *   - remove scale center and translation, add offset\n * - v0.3 (dwv v0.23.0, 03/2018)\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation\n *   - new details structure: simple array of objects referenced by draw ids\n * - v0.2 (dwv v0.17.0, 12/2016)\n *   - adds draw details: array [nslices][nframes] of detail objects\n * - v0.1 (dwv v0.15.0, 07/2016)\n *   - adds version\n *   - drawings: array [nslices][nframes] with all groups\n * - initial release (dwv v0.10.0, 05/2015), no version number...\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings\n *   - drawings: array [nslices] with all groups\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {object} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': viewController.getWindowLevel().center,\n      'window-width': viewController.getWindowLevel().width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The JSON representation of the state.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {object} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    viewController.setWindowLevel(\n      data['window-center'], data['window-width']);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(0); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3.\n * v0.2: one layer per slice/frame\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2.\n * v0.1: text on its own\n * v0.2: text as part of label\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3.\n * - v0.2: array [nslices][nframes] with all\n * - v0.3: simple array of objects referenced by draw ids\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4.\n * - v0.3: properties at group root\n * - v0.4: properties in group meta object\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: position as object\n * - v0.5: position as array\n *\n * @param {Array} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: draw id as 'slice-0_frame-1'\n * - v0.5: draw id as '#2-0_#3-1''\n *\n * @param {Array} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // keydown listener\n    window.addEventListener('keydown',\n      this.#getOnMouch('window', 'keydown'), true);\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {object} layer The layer to listen to.\n   * @param {string} layerGroupDivId The associated layer group div id.\n   */\n  bindLayer(layer, layerGroupDivId) {\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n    // update class var\n    this.#boundLayers[layerGroupDivId] = layer;\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners.\n   *\n   * @param {object} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getOnMouch(layerId, eventType) {\n    // augment event with converted offsets\n    const augmentEventOffsets = function (event) {\n      // event offset(s)\n      const offsets = getEventOffset(event);\n      // should have at least one offset\n      event._x = offsets[0].x;\n      event._y = offsets[0].y;\n      // possible second\n      if (offsets.length === 2) {\n        event._x1 = offsets[1].x;\n        event._y1 = offsets[1].y;\n      }\n    };\n\n    const applySelectedTool = (event) => {\n      // make sure we have a tool\n      if (this.#selectedTool) {\n        const func = this.#selectedTool[event.type];\n        if (func) {\n          func(event);\n        }\n      }\n    };\n\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      let callback = null;\n      if (eventType === 'keydown') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else if (eventType === 'touchend') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else {\n        // mouse or touch events\n        callback = function (event) {\n          augmentEventOffsets(event);\n          applySelectedTool(event);\n        };\n      }\n      // store callback\n      this.#callbackStore[layerId][eventType] = callback;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {(event) => void} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {(event) => void} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: 'base?query#fragment'\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\n * or encoded URI with base and key value/pairs:\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nfunction decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n * be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace more.\n *   replaceMode can be:\n *   - key (default): keep the key\n *   - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {Array} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   */\n  function onError(/*event*/) {\n    logger.warn('RequestError while receiving manifest: ' + this.status);\n  }\n\n  /**\n   * Handle load.\n   */\n  function onLoad(/*event*/) {\n    callback(decodeManifest(this.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {Array} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n\n/**\n * Load from an input uri\n *\n * @param {string} uri The input uri, for example: 'window.location.href'.\n * @param {App} app The associated app that handles the load.\n * @param {object} options Optional url request options.\n */\nexport function loadFromUri(uri, app, options) {\n  const query = getUriQuery(uri);\n  // check query\n  if (query && typeof query.input !== 'undefined') {\n    loadFromQuery(query, app, options);\n  }\n  // no else to allow for empty uris\n}\n\n/**\n * Load from an input query\n *\n * @param {object} query A query derived from an uri.\n * @param {object} app The associated app that handles the load.\n * @param {object} options Optional url request options.\n */\nfunction loadFromQuery(query, app, options) {\n  /**\n   * Load end callback.\n   */\n  function onLoadEnd(/*event*/) {\n    app.removeEventListener('loadend', onLoadEnd);\n    app.loadURLs([query.state]);\n  }\n  // load base\n  decodeQuery(query, app.loadURLs, options);\n  // optional display state\n  if (typeof query.state !== 'undefined') {\n    // queue after main data load\n    app.addEventListener('loadend', onLoadEnd);\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {Array}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {object} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   */\n  #addLoadItem = (event) => {\n    this.onloaditem(event);\n    this.#addLoad();\n  };\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for request + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {(event) => void} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} options Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} options The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\n   *    to the request\n   *  - batchSize: the size of the request url batch\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    const getLoadHandler = function (loader, dataElement, i) {\n      return (event) => {\n        // check response status\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n        // status 200: \"OK\"; status 0: \"debug\"\n        const status = event.target.status;\n        if (status !== 200 && status !== 0) {\n          this.onerror({\n            source: dataElement,\n            error: 'GET ' + event.target.responseURL +\n              ' ' + event.target.status +\n              ' (' + event.target.statusText + ')',\n            target: event.target\n          });\n          this.#addLoadend();\n        } else {\n          loader.load(event.target.response, dataElement, i);\n        }\n      };\n    };\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      this.#addLoadend();\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * @external XMLHttpRequest\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} options Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n                        ' ' + event.target.status +\n                        ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n        return;\n      }\n      // get the file list\n      const list = getFileListFromDicomDir(event.target.response);\n      // use the first list\n      const urls = list[0][0];\n      // append root url\n      const rootUrl = getRootPath(dicomDirUrl);\n      const fullUrls = [];\n      for (let i = 0; i < urls.length; ++i) {\n        fullUrls.push(rootUrl + '/' + urls[i]);\n      }\n      // load urls\n      this.#loadUrls(fullUrls, options);\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor\n} from '../dicom/dicomElementsWrapper';\nimport {Vector3D} from '../math/vector';\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   */\n  checkElements(dicomElements) {\n    // will throw if columns or rows is not defined\n    getImage2DSize(dicomElements);\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dicomElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // frames\n    const frames = dicomElements['00280008'];\n    if (frames) {\n      sizeValues.push(frames.value[0]);\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dicomElements);\n\n    // TransferSyntaxUID\n    const syntax = dicomElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dicomElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // slice orientation (cosines are matrices' columns)\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n    const imageOrientationPatient = dicomElements['00200037'];\n    let orientationMatrix;\n    if (typeof imageOrientationPatient !== 'undefined') {\n      const rowCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[0]),\n        parseFloat(imageOrientationPatient.value[1]),\n        parseFloat(imageOrientationPatient.value[2]));\n      const colCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[3]),\n        parseFloat(imageOrientationPatient.value[4]),\n        parseFloat(imageOrientationPatient.value[5]));\n      const normal = rowCosines.crossProduct(colCosines);\n      /* eslint-disable array-element-newline */\n      orientationMatrix = new Matrix33([\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n      ]);\n      /* eslint-enable array-element-newline */\n    }\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dicomElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dicomElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dicomElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dicomElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dicomElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dicomElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dicomElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n    const modality = dicomElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n    const sopClassUID = dicomElements['00080016'];\n    if (typeof sopClassUID !== 'undefined') {\n      meta.SOPClassUID = sopClassUID.value[0];\n    }\n    const studyUID = dicomElements['0020000D'];\n    if (typeof studyUID !== 'undefined') {\n      meta.StudyInstanceUID = studyUID.value[0];\n    }\n    const seriesUID = dicomElements['0020000E'];\n    if (typeof seriesUID !== 'undefined') {\n      meta.SeriesInstanceUID = seriesUID.value[0];\n    }\n    const bits = dicomElements['00280101'];\n    if (typeof bits !== 'undefined') {\n      meta.BitsStored = bits.value[0];\n    }\n    const pixelRep = dicomElements['00280103'];\n    if (typeof pixelRep !== 'undefined') {\n      meta.PixelRepresentation = pixelRep.value[0];\n    }\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    const pixelUnit = getPixelUnit(dicomElements);\n    if (typeof pixelUnit !== 'undefined') {\n      meta.pixelUnit = pixelUnit;\n    }\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (typeof frameOfReferenceUID !== 'undefined') {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dicomElements['00281050'];\n    const windowWidth = dicomElements['00281051'];\n    const windowCWExplanation = dicomElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j], 10);\n        const width = parseFloat(windowWidth.value[j], 10);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(center, width)],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      let redLut = dicomElements['00281201'];\n      let greenLut = dicomElements['00281202'];\n      let blueLut = dicomElements['00281203'];\n      // check red palette descriptor (should all be equal)\n      const descriptor = dicomElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n              descriptor.length === 3) {\n        if (descriptor[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          const vlSize = redLut.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dicomElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLut.map(scaleTo8);\n            greenLut = greenLut.map(scaleTo8);\n            blueLut = blueLut.map(scaleTo8);\n          }\n        } else if (descriptor[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLut.slice(0);\n          redLut = new Uint8Array(clone.buffer);\n          clone = greenLut.slice(0);\n          greenLut = new Uint8Array(clone.buffer);\n          clone = blueLut.slice(0);\n          blueLut = new Uint8Array(clone.buffer);\n        }\n      }\n      // set the palette\n      meta.paletteLut = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dicomElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","import {getImage2DSize} from '../dicom/dicomElementsWrapper';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\nimport {Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab\n} from '../utils/colour';\nimport {Size} from './size';\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {(a, b) => number} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {object} rootElement The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(rootElement, tagDefinition) {\n  const element = rootElement[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: 'x00020010',\n    type: '1',\n    enum: ['1.2.840.10008.1.2.1']\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: 'x00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: 'x00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: 'x00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: 'x00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: 'x00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: 'x00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: 'x00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: 'x00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: 'x00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: 'x00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nfunction getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {object} rootElement The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nfunction getDimensionOrganization(rootElement) {\n  // Dimension Organization Sequence (required)\n  const orgSq = rootElement['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = rootElement['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A code object.\n */\nfunction getCode(element) {\n  // meaning -> CodeMeaning (type1)\n  const code = {\n    meaning: element['00080104'].value[0]\n  };\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (element['00080100']) {\n    code.value = element['00080100'].value[0];\n  } else if (element['00080119']) {\n    code.longValue = element['00080119'].value[0];\n  } else if (element['00080120']) {\n    code.urnValue = element['00080120'].value[0];\n  } else {\n    throw Error('Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (element['00080102']) {\n      code.schemeDesignator = element['00080102'].value[0];\n    } else {\n      throw Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {object} element The dicom element.\n * @returns {object} A segment object.\n */\nfunction getSegment(element) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = {\n    number: element['00620004'].value[0],\n    label: element['00620005'].value[0],\n    algorithmType: element['00620008'].value[0]\n  };\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (element['00620009']) {\n    segment.algorithmName = element['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof element['0062000C'] !== 'undefined') {\n    segment.displayValue = element['006200C'].value;\n  } else if (typeof element['0062000D'] !== 'undefined') {\n    const cielabElement = element['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof element['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(element['00620003'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof element['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(element['0062000F'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof element['00620020'] !== 'undefined') {\n    segment.trackingId = element['00620020'].value[0];\n    segment.trackingUid = element['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isSimilar = false;\n    } else {\n      isSimilar = isSimilar ||\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {object} measure The dicom element.\n * @returns {Spacing} A spacing object.\n */\nfunction getSpacingFromMeasure(measure) {\n  // Pixel Spacing\n  if (typeof measure['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = measure['00280030'];\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[0]),\n    parseFloat(pixelSpacing.value[1])\n  ];\n  // Slice Thickness\n  if (typeof measure['00180050'] !== 'undefined') {\n    spacingValues.push(parseFloat(measure['00180050'].value[0]));\n  } else if (typeof measure['00180088'] !== 'undefined') {\n    // Spacing Between Slices\n    spacingValues.push(parseFloat(measure['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {object} groupItem The dicom element.\n * @returns {object} A frame information object.\n */\nfunction getSegmentFrameInfo(groupItem) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof groupItem['00089124'] !== 'undefined') {\n    const derivationImageSq = groupItem['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push(sourceImages);\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = groupItem['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = groupItem['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = segmentIdSq[0]['0062000B'].value[0];\n  // Plane Position Sequence (required, only one)\n  const planePosSq = groupItem['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p], 10);\n  }\n  const frameInfo = {\n    dimIndex: dimIndex,\n    imagePosPat: imagePosPat,\n    derivationImages: derivationImages,\n    refSegmentNumber: refSegmentNumber\n  };\n  // Plane Orientation Sequence\n  if (typeof groupItem['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = groupItem['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof groupItem['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = groupItem['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {object} dicomElements The DICOM tags.\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dicomElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dicomElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dicomElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dicomElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dicomElements);\n\n    // Segment Sequence\n    const segSequence = dicomElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayValue.r !== 'undefined' &&\n        typeof segment.displayValue.g !== 'undefined' &&\n        typeof segment.displayValue.b !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dicomElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dicomElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // use calculated spacing\n    let newSpacing = spacing;\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      frameOrigins, orientationMatrix, false);\n    const spacingValues = spacing.getValues();\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      geoSliceSpacing !== spacingValues[2]) {\n      spacingValues[2] = geoSliceSpacing;\n      newSpacing = new Spacing(spacingValues);\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isNotSmall = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isNotSmall(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n    const uids = [0];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m);\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      const pixelValue = frameSegment.displayValue;\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = pixelValue.r;\n            buffer[offset + 1] = pixelValue.g;\n            buffer[offset + 2] = pixelValue.b;\n          } else {\n            buffer[offset] = pixelValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    // Study\n    meta.StudyDate = dicomElements['00080020'].value[0];\n    meta.StudyTime = dicomElements['00080030'].value[0];\n    meta.StudyInstanceUID = dicomElements['0020000D'].value[0];\n    meta.StudyID = dicomElements['00200010'].value[0];\n    // Series\n    meta.SeriesInstanceUID = dicomElements['0020000E'].value[0];\n    meta.SeriesNumber = dicomElements['00200011'].value[0];\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = dicomElements['00080090'].value[0];\n    // patient info\n    meta.PatientName = dicomElements['00100010'].value[0];\n    meta.PatientID = dicomElements['00100020'].value[0];\n    meta.PatientBirthDate = dicomElements['00100030'].value[0];\n    meta.PatientSex = dicomElements['00100040'].value[0];\n    // Enhanced General Equipment Module\n    meta.Manufacturer = dicomElements['00080070'].value[0];\n    meta.ManufacturerModelName = dicomElements['00081090'].value[0];\n    meta.DeviceSerialNumber = dicomElements['00181000'].value[0];\n    meta.SoftwareVersions = dicomElements['00181020'].value[0];\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dicomElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dicomElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dicomElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n} // class MaskFactory\n","/**\n * Thread Pool.\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * @external Worker\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    this.worker.terminate();\n    // force create at next run\n    this.worker = undefined;\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.dataIndex = this.runningTask.info.dataIndex;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * @external JpegImage\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\n */\n/* global JpegImage */\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * @external jpeg\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder = (typeof jpeg !== 'undefined') &&\n    (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * @external JpxImage\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\n */\n/* global JpxImage */\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\nexport const decoderScripts = {};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // eslint-disable-next-line no-undef\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      dataIndex: info.dataIndex,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dicomElements = this.#dicomParserStore[index].getDicomElements();\n\n    // default factory\n    let factory = new ImageFactory();\n\n    // mask factory for DICOM SEG\n    const element = dicomElements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n\n    // create the image\n    try {\n      const image = factory.create(\n        dicomElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: this.#dicomParserStore[index].getDicomElements()\n        },\n        source: origin\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.dataIndex,\n      source: origin\n    });\n\n    const dataIndex = event.dataIndex;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n\n    this.onloadstart({\n      source: origin,\n      dataIndex: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n    const imageFactory = new ImageFactory();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    try {\n      dicomParser.parse(buffer);\n      // check elements are good for image\n      imageFactory.checkElements(dicomParser.getDicomElements());\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = (algoName !== null);\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\n\n    if (needDecompression) {\n      // gather pixel buffer meta data\n      const bitsAllocated =\n        dicomParser.getDicomElements()['00280100'].value[0];\n      const pixelRepresentation =\n        dicomParser.getDicomElements()['00280103'].value[0];\n      const pixelMeta = {\n        bitsAllocated: bitsAllocated,\n        isSigned: (pixelRepresentation === 1)\n      };\n      const columnsElement = dicomParser.getDicomElements()['00280011'];\n      const rowsElement = dicomParser.getDicomElements()['00280010'];\n      if (typeof columnsElement !== 'undefined' &&\n        typeof rowsElement !== 'undefined') {\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n      }\n      const samplesPerPixelElement =\n        dicomParser.getDicomElements()['00280002'];\n      if (typeof samplesPerPixelElement !== 'undefined') {\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n      }\n      const planarConfigurationElement =\n        dicomParser.getDicomElements()['00280006'];\n      if (typeof planarConfigurationElement !== 'undefined') {\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n      }\n\n      // number of items\n      const numberOfItems = pixelBuffer.length;\n\n      // setup the decoder (one decoder per all converts)\n      if (this.#pixelDecoder === null) {\n        this.#pixelDecoder = new PixelBufferDecoder(\n          algoName, numberOfItems);\n        // callbacks\n        // pixelDecoder.ondecodestart: nothing to do\n        this.#pixelDecoder.ondecodeditem = (event) => {\n          this.#onDecodedItem(event);\n          // send onload and onloadend when all items have been decoded\n          if (event.itemNumber + 1 === event.numberOfItems) {\n            this.onload(event);\n            this.onloadend(event);\n          }\n        };\n        // pixelDecoder.ondecoded: nothing to do\n        // pixelDecoder.ondecodeend: nothing to do\n        this.#pixelDecoder.onerror = this.onerror;\n        this.#pixelDecoder.onabort = this.onabort;\n      }\n\n      // launch decode\n      for (let i = 0; i < numberOfItems; ++i) {\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n          {\n            itemNumber: i,\n            numberOfItems: numberOfItems,\n            dataIndex: dataIndex\n          }\n        );\n      }\n    } else {\n      // no decompression\n      // send progress\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: dataIndex,\n        source: origin\n      });\n      // generate image\n      this.#generateImage(dataIndex, origin);\n      // send load events\n      this.onload({\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous)\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if:\n   *  - the url has a 'contentType' and it is 'application/dicom'\n   *    (as in wado urls)\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/dicom'\n      const isDicom = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/dicom') &&\n          element.value[18] !== '+';\n      };\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined' &&\n      mem['Content-Type'] === 'application/dicom') {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      this.onload({\n        data: text,\n        source: origin\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeader, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/json' or 'application/dicom+json\n      const isJson = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/json') &&\n          startsWith(element.value, 'application/dicom+json');\n      };\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('json')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   */\n  #addLoadItem(event) {\n    this.onloaditem(event);\n    this.#addLoad();\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options The url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      const isMultipart = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'multipart/related');\n      };\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} domImage The DOM Image, an HTMLImageElement with extra info.\n * @param {object} origin The data origin.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof domImage.origin === 'string') {\n    info['origin'] = {value: domImage.origin};\n  } else {\n    info['fileName'] = {value: domImage.origin.name};\n    info['fileType'] = {value: domImage.origin.type};\n    info['fileLastModifiedDate'] = {value: domImage.origin.lastModifiedDate};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = domImage.index ? domImage.index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex);\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string} dataIndex The data index.\n * @param {object} origin The data origin.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  dataIndex, origin) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (video.file) {\n    info['fileName'] = {value: video.file.name};\n    info['fileType'] = {value: video.file.type};\n    info['fileLastModifiedDate'] = {value: video.file.lastModifiedDate};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex);\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event\n   */\n  function onseeked(/*event*/) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= this.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * if abort is triggered, all image.onload callbacks have to be cancelled\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (event) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          this.onload(getViewFromDOMImage(event.target, origin));\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    image.origin = origin;\n    image.index = index;\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    } else {\n      image.src = buffer;\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'image/'\n      const isImage = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'image/');\n      };\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n * url example (cors enabled):\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // storing values to pass them on\n    video.file = origin;\n    video.index = index;\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          index, origin);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'video/'\n      const isVideo = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'video/');\n      };\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * @external JSZip\n * @see https://github.com/Stuk/jszip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback\n   *\n   * @param {ArrayBuffer} content unzipped file image\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} options Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/zip'\n      const isZip = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/zip');\n      };\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem['Content-Type'] !== 'undefined') {\n      if (mem['Content-Type'].includes('zip')) {\n        return true;\n      }\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {Array}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {object} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Launch a load item event and call addLoad.\n   *\n   * @param {object} event The load data event.\n   */\n  #addLoadItem = (event) => {\n    this.onloaditem(event);\n    this.#addLoad();\n  };\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for reader + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {(event) => void} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of files.\n   *\n   * @param {Array} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        if (typeof loader.onloaditem === 'undefined') {\n          // handle loaditem locally\n          loader.onload = this.#addLoadItem;\n        } else {\n          loader.onloaditem = this.onloaditem;\n          loader.onload = this.#addLoad;\n        }\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    const getLoadHandler = function (loader, dataElement, i) {\n      return (event) => {\n        loader.load(event.target.result, dataElement, i);\n      };\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * @external FileReader\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = getLoadHandler(loader, dataElement, i);\n      reader.onloadend = this.#addLoadend;\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * load counter.\n   *\n   * @type {number}\n   */\n  #counter = -1;\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Get the next load id.\n   *\n   * @returns {number} The next id.\n   */\n  #getNextLoadId() {\n    ++this.#counter;\n    return this.#counter;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   */\n  loadFiles(files) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0]);\n    } else {\n      this.#loadImageFiles(files);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  loadURLs(urls, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], options);\n    } else {\n      this.#loadImageUrls(urls, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   */\n  loadImageObject(data) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image');\n  }\n\n  /**\n   * Abort the current loaders.\n   */\n  abort() {\n    const keys = Object.keys(this.#currentLoaders);\n    for (let i = 0; i < keys.length; ++i) {\n      this.#currentLoaders[i].loader.abort();\n      delete this.#currentLoaders[i];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {FileList} files The list of image files to load.\n   */\n  #loadImageFiles(files) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image');\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   */\n  #loadStateFile(file) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state');\n  }\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {object} options The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {Array|FileList} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {object} options Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, options) {\n    const eventInfo = {\n      loadtype: loadType,\n    };\n\n    // load id\n    const loadId = this.#getNextLoadId();\n    eventInfo.loadid = loadId;\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[loadId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        loadid: loadId\n      };\n      if (typeof this.#currentLoaders[loadId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[loadId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[loadId] !== 'undefined' &&\n        this.#currentLoaders[loadId].isFirstItem) {\n        this.#currentLoaders[loadId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[loadId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        loadid: loadId\n      });\n      this.onloadend({\n        loadid: loadId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of {image, meta}.\n   *\n   * @type {object}\n   */\n  #data = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the length of the data storage.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return Object.keys(this.#data).length;\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#data = [];\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @returns {object} The data.\n   */\n  get(index) {\n    return this.#data[index];\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image to set.\n   */\n  setImage(index, image) {\n    this.#data[index].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: index\n    });\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(index, image, meta) {\n    if (typeof this.#data[index] !== 'undefined') {\n      throw new Error('Index already used in storage: ' + index);\n    }\n    // store the new image\n    this.#data[index] = {\n      image: image,\n      meta: meta\n    };\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(index));\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {number} index The index of the data.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(index, image, meta) {\n    const dataToUpdate = this.#data[index];\n\n    // add slice to current image\n    dataToUpdate.image.appendSlice(image);\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input index\n   * to the event value.\n   *\n   * @param {number} index The data index.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(index) {\n    return (event) => {\n      event.dataid = index;\n      this.#fireEvent(event);\n    };\n  }\n\n} // ImageController class\n","import {arrayEquals} from './array';\n\n/**\n * Check if the input is a generic object, including arrays.\n *\n * @param {*} unknown The input to check.\n * @returns {boolean} True if the input is an object.\n * ref: https://github.com/jashkenas/underscore/blob/1.9.1/underscore.js#L1319-L1323\n */\nexport function isObject(unknown) {\n  const type = typeof unknown;\n  return type === 'function' || type === 'object' && !!unknown;\n}\n\n/**\n * Check if the input is an array.\n *\n * @param {*} unknown The input to check.\n * @returns {boolean} True if the input is an array.\n * ref: https://github.com/jashkenas/underscore/blob/1.9.1/underscore.js#L1313-L1317\n */\nexport function isArray(unknown) {\n  return Array.isArray(unknown);\n}\n\n/**\n * Dump an object to an array.\n *\n * @param {object} obj The input object as: {key0: {}, key1: {}}\n * @returns {Array} The corresponding array:\n *   [{name: key0, {}}, {name: key1, {}}]\n */\nexport function objectToArray(obj) {\n  const array = [];\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (obj[key] === null) {\n      continue;\n    }\n    const row = {name: key};\n    const innerKeys = Object.keys(obj[key]);\n    for (let j = 0; j < innerKeys.length; ++j) {\n      const innerKey = innerKeys[j];\n      let value = obj[key][innerKey];\n      if (isArray(value)) {\n        const arrayValues = [];\n        for (let k = 0; k < value.length; ++k) {\n          if (isObject(value[k])) {\n            arrayValues.push(objectToArray(value[k]));\n          } else {\n            arrayValues.push(value[k]);\n          }\n        }\n        value = arrayValues;\n      } else if (isObject(value)) {\n        value = objectToArray(value);\n      }\n      row[innerKey] = value;\n    }\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Merge two similar objects.\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n                idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n                idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n            idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n            idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n                    id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n                id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0, leni = keys.length; i < leni; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; j++) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated wheel event deltaY.\n   *\n   * @type {number}\n   */\n  #wheelDeltaY = 0;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel(event) {\n    // deltaMode (deltaY values on my machine...):\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\n    // - 2 (DOM_DELTA_PAGE): ??\n    // TODO: check scroll event\n    let scrollMin = 52;\n    if (event.deltaMode === 1) {\n      scrollMin = 5.99;\n    }\n    this.#wheelDeltaY += event.deltaY;\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\n      return;\n    } else {\n      this.#wheelDeltaY = 0;\n    }\n\n    const up = event.deltaY < 0 ? true : false;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const imageSize = viewController.getImageSize();\n    if (imageSize.canScroll3D()) {\n      if (up) {\n        viewController.incrementScrollIndex();\n      } else {\n        viewController.decrementScrollIndex();\n      }\n    } else if (imageSize.moreThanOne(3)) {\n      if (up) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","import {ScrollWheel} from './scrollWheel';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {WindowLevel as WL, validateWindowWidth} from '../image/windowLevel';\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {WindowLevel: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // set start flag\n    this.#started = true;\n    // store initial position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = event._x - this.x0;\n    const diffY = this.y0 - event._y;\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = parseInt(viewController.getWindowLevel().center, 10);\n    const width = parseInt(viewController.getWindowLevel().width, 10);\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n\n    // add the manual preset to the view\n    viewController.addWindowLevelPresets({\n      manual: {\n        wl: [new WL(windowCenter, windowWidth)],\n        name: 'manual'\n      }\n    });\n    viewController.setWindowLevelPreset('manual');\n\n    // store position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    // set start flag\n    if (this.#started) {\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataIndex());\n\n    // update view controller\n    viewController.setWindowLevel(\n      parseInt(image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ), 10),\n      parseInt(viewController.getWindowLevel().width, 10));\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {precisionRound} from '../utils/string';\nimport {ScrollWheel} from './scrollWheel';\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Scroll: {}}\n * });\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new math.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID = null;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    viewController.setCurrentPosition(position);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(event);\n      }\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // difference to last Y position\n    const diffY = event._y - this.y0;\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && viewController.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        viewController.decrementScrollIndex();\n      } else {\n        viewController.incrementScrollIndex();\n      }\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    const imageSize = viewController.getImageSize();\n    if (xMove && imageSize.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove) {\n      this.x0 = event._x;\n    }\n    if (yMove) {\n      this.y0 = event._y;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Displays a tooltip in a temparary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {object} event The mouse move event.\n   */\n  #showTooltip(event) {\n    // remove previous div\n    this.#removeTooltipDiv();\n\n    // get image value at position\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // place span in layer group to avoid upper layer opacity\n      const layerDiv = document.getElementById(viewLayer.getId());\n      layerDiv.parentElement.appendChild(span);\n      // position tooltip\n      span.style.left = (event._x + 10) + 'px';\n      span.style.top = (event._y + 10) + 'px';\n      let text = precisionRound(value, 3);\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  #removeTooltipDiv() {\n    const div = document.getElementById('scroll-tooltip');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","/**\n * Get the translated text.\n *\n * @param {string} key The key to the text entry.\n * @param {object} _options The translation options such as plural, context...\n * @returns {string|undefined} The translated text.\n */\nexport function i18n(key, _options) {\n  // defaut expects something like 'unit.cm2'\n  const unit = {\n    mm: 'mm',\n    cm2: 'cm²',\n    degree: '°'\n  };\n  const props = key.split('.');\n  if (props.length !== 2) {\n    throw new Error('Unexpected translation key length.');\n  }\n  if (props[0] !== 'unit') {\n    throw new Error('Unexpected translation key prefix.');\n  }\n  return unit[props[1]];\n}\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacingX, spacingY) {\n    let wlen = null;\n    if (spacingX !== null && spacingY !== null) {\n      const dxs = this.getDeltaX() * spacingX;\n      const dys = this.getDeltaY() * spacingY;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      parseInt((this.getBegin().getX() + this.getEnd().getX()) / 2, 10),\n      parseInt((this.getBegin().getY() + this.getEnd().getY()) / 2, 10)\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing[0], spacing[1]);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {ZoomAndPan: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch down event.\n   *\n   * @param {object} event The touch down event.\n   */\n  twotouchdown = (event) => {\n    this.#started = true;\n    // store first point\n    this.x0 = event._x;\n    this.y0 = event._y;\n    // first line\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    this.line0 = new Line(point0, point1);\n    this.midPoint = this.line0.getMidpoint();\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    // calculate translation\n    const tx = event._x - this.x0;\n    const ty = event._y - this.y0;\n    // apply translation\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  twotouchmove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    const newLine = new Line(point0, point1);\n    const lineRatio = newLine.getLength() / this.line0.getLength();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = event._y - this.y0;\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      const imageSize = viewController.getImageSize();\n      // update view controller\n      if (imageSize.canScroll(2)) {\n        if (diffY > 0) {\n          viewController.incrementIndex(2);\n        } else {\n          viewController.decrementIndex(2);\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\n        const planePos = viewLayer.displayToMainPlanePos(\n          this.midPoint.getX(), this.midPoint.getY());\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousedown(event);\n    } else if (touches.length === 2) {\n      this.twotouchdown(event);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousemove(event);\n    } else if (touches.length === 2) {\n      this.twotouchmove(event);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n *   tools: {Opacity: {}}\n * });\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.x0 = event._x;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Opacity class\n","/**\n * Get the minimum, maximum, mean and standard deviation\n * of an array of values.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {Array} array The array of values to extract stats from.\n * @param {Array} flags A list of stat values to calculate.\n * @returns {object} A stats object.\n */\nexport function getStats(array, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(array);\n  } else {\n    return getSimpleStats(array);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {Array} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    flags.includes('median', 'p25', 'p75');\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A simple stats object.\n */\nfunction getSimpleStats(array) {\n  let min = array[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = array.length;\n  for (let i = 0; i < length; ++i) {\n    val = array[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  const variance = sumSqr / length - mean * mean;\n  const stdDev = Math.sqrt(variance);\n\n  return {\n    min: min,\n    max: max,\n    mean: mean,\n    stdDev: stdDev\n  };\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {Array} array The array of values to extract stats from.\n * @returns {object} A full stats object.\n */\nfunction getFullStats(array) {\n  // get simple stats\n  const stats = getSimpleStats(array);\n\n  // sort array... can get slow...\n  array.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(array, 0.5);\n  stats.p25 = getPercentile(array, 0.25);\n  stats.p75 = getPercentile(array, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n * that lie between data points.\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\n *\n * @param {Array} array The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile,\n */\nfunction getPercentile(array, ratio) {\n  // check input\n  if (array.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return array[0];\n  } else if (ratio === 1) {\n    return array[array.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (array.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = array[i0];\n  const v1 = array[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {object} style The application style.\n * @returns {object} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: {\n      x: Math.abs(radius.x),\n      y: Math.abs(radius.y)\n    },\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {object}\n   */\n  #shape = null;\n\n  /**\n   * Edited view controller. Used for quantification update.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * Draw event callback.\n   *\n   * @type {Function}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {object} inshape The shape to edit.\n   */\n  setShape(inshape) {\n    this.#shape = inshape;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {object} vc The associated view controller.\n   */\n  setViewController(vc) {\n    this.#viewController = vc;\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {object} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {object} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {object} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {object} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      const layerDetails = getLayerDetailsFromEvent(event.evt);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the anchor position\n      validateAnchorPosition(drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        anchor.getLayer(),\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {object} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getEventOffset,\n  prompt,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  canNodeChangeColour,\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw layer group structure. The layout is:\n *\n * drawLayer\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\n *       |_ shape: name=\"shape\"\n *       |_ label: name=\"label\"\n *       |_ extra: line tick, protractor arc...\n *\n * Discussion:\n * - posGroup > shapeGroup\n *    pro: slice/frame display: 1 loop\n *    cons: multi-slice shape splitted in positionGroups\n * - shapeGroup > posGroup\n *    pros: more logical\n *    cons: slice/frame display: 2 loops\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {object}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {object}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n\n    // trash cross\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName = 0;\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {object}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {object}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if a draw was started (handle at mouse move or up)\n    if (this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    // determine if the click happened in an existing shape\n    const stage = drawLayer.getKonvaStage();\n    const kshape = stage.getIntersection({\n      x: event._x,\n      y: event._y\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (kshape) {\n      const group = kshape.getParent();\n      const selectedShape = group.find('.shape')[0];\n      // reset editor if click on other shape\n      // (and avoid anchors mouse down)\n      if (selectedShape && selectedShape !== this.#shapeEditor.getShape()) {\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(selectedShape);\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        this.#shapeEditor.setViewController(viewController);\n        this.#shapeEditor.enable();\n      }\n    } else {\n      // disable edition\n      this.#shapeEditor.disable();\n      this.#shapeEditor.setShape(null);\n      this.#shapeEditor.setViewController(null);\n      // start storing points\n      this.#started = true;\n      // set factory\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n      // clear array\n      this.#points = [];\n      // store point\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      this.#points.push(this.#lastPoint);\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    // draw line to current pos\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      // if it was marked as temporary\n      if (this.#points.length !== 1 &&\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // mark it as temporary\n      this.#lastPoint.tmp = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      // reset flag\n      this.#started = false;\n    } else {\n      // remove temporary flag\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        delete this.#points[this.#points.length - 1].tmp;\n      }\n    }\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    // reset flag\n    this.#started = false;\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(function () {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#started) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n    let konvaLayer;\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      konvaLayer = shapeGroup.getLayer();\n      const shapeDisplayName = getShapeDisplayName(\n        shapeGroup.getChildren(isNodeNameShape)[0]);\n      // delete command\n      const delcmd = new DeleteGroupCommand(shapeGroup,\n        shapeDisplayName, konvaLayer);\n      delcmd.onExecute = this.#fireEvent;\n      delcmd.onUndo = this.#fireEvent;\n      delcmd.execute();\n      this.#app.addToUndoStack(delcmd);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // reset flag and points\n      this.#started = false;\n      this.#points = [];\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Array} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    // create shape group\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Array} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // reset temporary shape group\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      finalShapeGroup, this.#shapeName, konvaLayer);\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // execute it\n    this.#command.execute();\n    // save it in undo stack\n    this.#app.addToUndoStack(this.#command);\n\n    // activate shape listeners\n    this.setShapeOn(finalShapeGroup, layerGroup);\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.setShape(null);\n    this.#shapeEditor.setViewController(null);\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n      // same for colour\n      this.setFeatures({lineColour: this.#style.getLineColour()});\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.setShapeOn(group, layerGroup);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#setShapeOff(group);\n      });\n    }\n    // draw\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Set shape group off properties.\n   *\n   * @param {object} shapeGroup The shape group to set off.\n   */\n  #setShapeOff(shapeGroup) {\n    // mouse styling\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {object} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {object} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n      const colour = this.#style.getLineColour();\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\n        function (ashape) {\n          ashape.stroke(colour);\n        }\n      );\n    }\n  }\n\n  /**\n   * Set shape group on properties.\n   *\n   * @param {object} shapeGroup The shape group to set on.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  setShapeOn(shapeGroup, layerGroup) {\n    // adapt shape and cursor when mouse over\n    const mouseOnShape = () => {\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    };\n    // mouse over event hanlding\n    shapeGroup.on('mouseover', () => {\n      // save local vars\n      this.#activeShapeGroup = shapeGroup;\n      // adapt shape\n      mouseOnShape();\n    });\n    // mouse out event hanlding\n    shapeGroup.on('mouseout', () => {\n      // reset shape\n      this.#resetActiveShapeGroup();\n      // reset local vars\n      this.#activeShapeGroup = undefined;\n    });\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(\n      shapeGroup.getChildren(isNodeNameShape)[0]);\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      colour = shapeGroup.getChildren(isNodeNameShape)[0].stroke();\n      // display trash\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const stage = drawLayer.getKonvaStage();\n      const scale = stage.scale();\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n      this.#trash.scale(invscale);\n      konvaLayer.add(this.#trash);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      let factory;\n      const keys = Object.keys(this.#shapeFactoryList);\n      for (let i = 0; i < keys.length; ++i) {\n        factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(shapeGroup)) {\n          // stop at first find\n          break;\n        }\n      }\n      if (typeof factory === 'undefined') {\n        throw new Error('Cannot find factory to update quantification.');\n      }\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('orange');\n        });\n        // change the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke('red');\n          });\n      } else {\n        this.#trash.getChildren().forEach(function (tshape) {\n          tshape.stroke('red');\n        });\n        // reset the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (typeof ashape.stroke !== 'undefined') {\n              ashape.stroke(colour);\n            }\n          });\n      }\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.setShape(null);\n        this.#shapeEditor.setViewController(null);\n        // reset colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            ashape.stroke(colour);\n          });\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n        // delete command\n        const delcmd = new DeleteGroupCommand(group,\n          shapeDisplayName, konvaLayer);\n        delcmd.onExecute = this.#fireEvent;\n        delcmd.onUndo = this.#fireEvent;\n        delcmd.execute();\n        this.#app.addToUndoStack(delcmd);\n      } else {\n        // save drag move\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          const mvcmd = new MoveGroupCommand(group,\n            shapeDisplayName, translation, konvaLayer);\n          mvcmd.onExecute = this.#fireEvent;\n          mvcmd.onUndo = this.#fireEvent;\n          this.#app.addToUndoStack(mvcmd);\n\n          // the move is handled by Konva, trigger an event manually\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.target;\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = function (meta) {\n        // store meta\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          ktext.meta.textExpr, ktext.meta.quantification));\n        label.setVisible(ktext.meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call client dialog if defined\n      if (typeof customUI.openRoiDialog !== 'undefined') {\n        /**\n         * Open a dialogue to edit roi data. Defaults to undefined.\n         *\n         * @param {object} data The roi data.\n         * @param {Function} callback The callback to launch on dialogue exit.\n         */\n        customUI.openRoiDialog(ktext.meta, onSaveCallback);\n      } else {\n        // simple prompt for the text expression\n        const textExpr = prompt('Label', ktext.meta.textExpr);\n        if (textExpr !== null) {\n          ktext.meta.textExpr = textExpr;\n          onSaveCallback(ktext.meta);\n        }\n      }\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {object} listener The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {object} group The group that contains anchors.\n * @returns {object|undefined} The minimum position as {x,y}.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return {x: minX, y: minY};\n}\n\n/**\n * Bound a node position.\n *\n * @param {object} node The node to bound the position.\n * @param {object} min The minimum position as {x,y}.\n * @param {object} max The maximum position as {x,y}.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.x) {\n    node.x(min.x);\n    changed = true;\n  } else if (node.x() > max.x) {\n    node.x(max.x);\n    changed = true;\n  }\n  if (node.y() < min.y) {\n    node.y(min.y);\n    changed = true;\n  } else if (node.y() > max.y) {\n    node.y(max.y);\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = {\n    x: -anchorMin.x,\n    y: -anchorMin.y\n  };\n  const max = {\n    x: stageSize.x -\n      (anchorMin.x + Math.abs(shape.width())),\n    y: stageSize.y -\n      (anchorMin.y + Math.abs(shape.height()))\n  };\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {object} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = {\n    x: -group.x(),\n    y: -group.y()\n  };\n  const max = {\n    x: stageSize.x - group.x(),\n    y: stageSize.y - group.y()\n  };\n\n  return boundNodePosition(anchor, min, max);\n}\n","/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Array} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","import {ROI} from '../math/roi';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRoiLabelText = '';\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // todo: allow overrride?\n    // if (typeof roiLabelText !== 'undefined') {\n    //   textExpr = roiLabelText;\n    // } else {\n    textExpr = defaultRoiLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i;\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    points[anchor.id()] = anchor.x() - kroi.x();\n    points[anchor.id() + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n/**\n * The magic wand namespace.\n *\n * @external MagicWand\n * @see https://github.com/Tamersoul/magic-wand-js\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * threshold default tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * threshold tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas\n   *\n   * @param {object} event The original event.\n   * @returns {object} The coordinates as a {x,y}.\n   */\n  #getCoord = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {object} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(this.#shapeGroup, 'floodfill',\n        drawLayer.getKonvaLayer());\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change\n   *\n   * @param {number} _value Current threshold\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getCoord(event);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const movedpoint = this.#getCoord(event);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    this.#started = false;\n    if (this.#extender) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.extend(layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Array} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {Array} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Array}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {Array}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Array} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = [];\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this[y][x + 1] - this[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this[y][x] - this[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this[y][x];\n    lap += this[y - 2][x];\n    lap += this[y - 1][x - 1] + 2 * this[y - 1][x] + this[y - 1][x + 1];\n    lap += this[y][x - 2] +\n      2 * this[y][x - 1] + 2 * this[y][x + 1] + this[y][x + 2];\n    lap += this[y + 1][x - 1] + 2 * this[y + 1][x] + this[y + 1][x + 1];\n    lap += this[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * @param {object} greyscale The input greyscale-\n * @returns {object} A gradient object\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale[y].length - 1] = gradient[y][greyscale.length - 2];\n  }\n\n  gradient[greyscale.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.length - 1][i] = gradient[greyscale.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale[y].length - 2] = 1;\n    laplace[y][greyscale[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.length - 2] = [];\n  laplace[greyscale.length - 1] = [];\n  for (let j = 1; j < greyscale.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.length - 2][j] = 1;\n    laplace[greyscale.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale[y].length - 1] = gradX[y][greyscale[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.length - 1] = [];\n  for (let i = 0; i < greyscale[0].length; i++) {\n    gradY[greyscale.length - 1][i] = gradY[greyscale.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale[iy][ix];\n      sides.outside[y][x] = greyscale[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\n *\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.earchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n\n    this.pq = new BucketQueue(this.searchGranBits, function (p) {\n      return Math.round(this.searchGran * this.costArr[p.y][p.x]);\n    });\n    this.pq.searchGran = this.searchGran;\n    this.pq.costArr = this.cost;\n\n    this.pq.push(sp);\n    this.cost[sp.y][sp.x] = 0;\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {Style} from '../gui/style';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.x0 = index.get(0);\n      this.y0 = index.get(1);\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      // final point: at 'tolerance' of the initial point\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = 0;\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(this.#shapeGroup, 'livewire',\n      drawLayer.getKonvaLayer());\n    // draw\n    this.#command.execute();\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\n   * Circle formula: x*x + y*y = r*r\n   * => y = (+-) sqrt(r*r - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultCircleLabelText = '{surface}';\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the circle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    const circle = new Circle(points[0], radius);\n    // draw shape\n    const kshape = new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof circleLabelText !== 'undefined') {\n    //   textExpr = circleLabelText;\n    // } else {\n    textExpr = defaultCircleLabelText;\n    // }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(circle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // force y\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // force y\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'bottom':\n      radius = center.y - anchor.y();\n      // force x\n      bottom.x(top.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y + radius);\n      break;\n    case 'top':\n      radius = anchor.y() - center.y;\n      // force x\n      top.x(bottom.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view\n   *   controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: ''};\n        quant.max = {value: quantif.max, unit: ''};\n        quant.mean = {value: quantif.mean, unit: ''};\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: ''};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: ''};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: ''};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {Array} radius The 2 ellipse radiuses.\n * @param {Array} dir The 2 ellipse directions.\n * @returns {Array} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\nimport {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getFlags, replaceFlags} from '../utils/string';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultEllipseLabelText = '{surface}';\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the ellipse.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: {x: ellipse.getA(), y: ellipse.getB()},\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof ellipseLabelText !== 'undefined') {\n    //   textExpr = ellipseLabelText;\n    // } else {\n    textExpr = defaultEllipseLabelText;\n    // }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} _style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\n    const center = {\n      x: topLeft.x() + radiusX,\n      y: topRight.y() + radiusY\n    };\n    kellipse.position(center);\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {object} group The associated group.\n   * @returns {object} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits.\n   */\n  getRound() {\n    return {\n      min: this.getBegin().getRound(),\n      max: this.getEnd().getRound()\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {object} viewController The associated view controller.\n   * @param {Array} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // surface\n    const spacing = viewController.get2DSpacing();\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n('unit.cm2')};\n    }\n\n    // pixel quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: ''};\n      quant.max = {value: quantif.max, unit: ''};\n      quant.mean = {value: quantif.mean, unit: ''};\n      quant.stdDev = {value: quantif.stdDev, unit: ''};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: ''};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: ''};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: ''};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {DRAW_DEBUG} from './draw';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRectangleLabelText = '{surface}';\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the rectangle.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rectangleLabelText !== 'undefined') {\n    //   textExpr = rectangleLabelText;\n    // } else {\n    textExpr = defaultRectangleLabelText;\n    // }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {object} group The group with the shape.\n   * @param {object} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {object} rectangle The rectangle to shadow.\n   * @returns {object} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      this.#filter.setOriginalImage(this.#app.getLastImage());\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, app) {\n    this.#filter = filter;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setLastImage(this.#filter.update());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName()\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setLastImage(this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(0); //todo: fix\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName()\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\nexport const toolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {getDefaultAnchor} from './editor';\n\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultArrowLabelText = '';\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva object.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, points[0], style.scale(10));\n    const linePerp1 = getPerpendicularLine(\n      line, points[1], style.scale(10));\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = 5 * style.getScaledStrokeWidth();\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof arrowLabelText !== 'undefined') {\n    //   textExpr = arrowLabelText;\n    // } else {\n    textExpr = defaultArrowLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultFreeHandLabelText = '';\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(\n    points, style, _viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof freeHandLabelText !== 'undefined') {\n    //   textExpr = freeHandLabelText;\n    // } else {\n    textExpr = defaultFreeHandLabelText;\n    // }\n    ktext.setText(textExpr);\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i;\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    points[anchor.id()] = anchor.x() - kline.x();\n    points[anchor.id() + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultProtractorLabelText = '{angle}';\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the protractor.\n   * @param {object} style The drawing style.\n   * @param {object} _viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, _viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(this);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      // TODO: allow override?\n      // if (typeof protractorLabelText !== 'undefined') {\n      //   textExpr = protractorLabelText;\n      // } else {\n      textExpr = defaultProtractorLabelText;\n      // }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // meta data\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = {\n      angle: {value: angle, unit: i18n('unit.degree')}\n    };\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n/**\n * Default draw label text.\n */\nconst defaultRulerLabelText = '{length}';\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {object} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Array} points The points from which to extract the line.\n   * @param {object} style The drawing style.\n   * @param {object} viewController The associated view controller.\n   * @returns {object} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.scale(10);\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    // TODO: allow override?\n    // if (typeof rulerLabelText !== 'undefined') {\n    //   textExpr = rulerLabelText;\n    // } else {\n    textExpr = defaultRulerLabelText;\n    // }\n    const quant = line.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // meta data\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {object} shape The associated shape.\n   * @param {object} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {object} anchor The active anchor.\n   * @param {object} style The app style.\n   * @param {object} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n      // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n      // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n      // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n      // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(this);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    const quantification = line.quantify(\n      viewController,\n      getFlags(ktext.meta.textExpr));\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\n    // update meta\n    ktext.meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {lut} from '../image/luts';\nimport {getMatrixFromName} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getViewOrientation} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {getTagFromKey} from '../dicom/dicomTag';\n\nimport {toolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\n\n/**An accessibility modifier cannot be used with a private identifier\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new App();\n * // initialise\n * app.init({\n *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]}\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  // app options\n  #options = null;\n\n  // data controller\n  #dataController = null;\n\n  // toolbox controller\n  #toolboxController = null;\n\n  // load controller\n  #loadController = null;\n\n  // stage\n  #stage = null;\n\n  // UndoStack\n  #undoStack = null;\n\n  // Generic style\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {object}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {number} index The data index.\n   * @returns {Image} The associated image.\n   */\n  getImage(index) {\n    return this.#dataController.get(index).image;\n  }\n\n  /**\n   * Get the last loaded image.\n   *\n   * @returns {Image} The image.\n   */\n  getLastImage() {\n    return this.#dataController.get(this.#dataController.length() - 1).image;\n  }\n\n  /**\n   * Set the image at the given index.\n   *\n   * @param {number} index The data index.\n   * @param {Image} img The associated image.\n   */\n  setImage(index, img) {\n    this.#dataController.setImage(index, img);\n  }\n\n  /**\n   * Set the last image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setLastImage(img) {\n    this.#dataController.setImage(this.#dataController.length() - 1, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @returns {number} The new image id.\n   */\n  addNewImage(image, meta) {\n    const id = this.#dataController.length();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(id, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: 'internal',\n      loadid: id,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(id);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: 'internal',\n      loadid: id\n    });\n\n    return id;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {number} index The data index.\n   * @returns {object} The list of meta data.\n   */\n  getMetaData(index) {\n    return this.#dataController.get(index).meta;\n  }\n\n  /**\n   * Get the meta data with names instead of tag keys.\n   *\n   * @param {number} index The data index.\n   * @returns {object} The list of meta data.\n   */\n  getMetaDataWithNames(index) {\n    const meta = this.getMetaData(index);\n    return Object.keys(meta).reduce((accumulator, currentValue) => {\n      const tag = getTagFromKey(currentValue);\n      let key = tag.getNameFromDictionary();\n      if (typeof key === 'undefined') {\n        // add 'x' to help sorting\n        key = 'x' + tag.getKey();\n      }\n      accumulator[key] = meta[currentValue];\n      return accumulator;\n    }, {});\n  }\n\n  /**\n   * Get the number of loaded data.\n   *\n   * @returns {number} The number.\n   */\n  getNumberOfLoadedData() {\n    return this.#dataController.length();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the layer scale on top of the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {object} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Get the view layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getViewLayersByDataIndex(index) {\n    return this.#stage.getViewLayersByDataIndex(index);\n  }\n\n  /**\n   * Get the draw layers associated to a data index.\n   * The layer are available after the first loaded item.\n   *\n   * @param {number} index The data index.\n   * @returns {Array} The layers.\n   */\n  getDrawLayersByDataIndex(index) {\n    return this.#stage.getDrawLayersByDataIndex(index);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {object} opt The application option with:\n   * - `dataViewConfigs`: data indexed object containing the data view\n   *   configurations in the form of a list of objects containing:\n   *   - divId: the HTML div id\n   *   - orientation: optional 'axial', 'coronal' or 'sagittal' orientation\n   *     string (default undefined keeps the original slice order)\n   * - `binders`: array of layerGroup binders\n   * - `tools`: tool name indexed object containing individual tool\n   *   configurations in the form of a list of objects containing:\n   *   - options: array of tool options\n   * - `viewOnFirstLoadItem`: boolean flag to trigger the first data render\n   *   after the first loaded data or not\n   * - `defaultCharacterSet`: the default chraracter set string used for DICOM\n   *   parsing\n   * @example\n   * // create the dwv app\n   * const app = new App();\n   * // initialise\n   * app.init({\n   *   dataViewConfigs: {'*': [{divId: 'layerGroup0'}]},\n   *   viewOnFirstLoadItem: false\n   * });\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (this.#options.tools && this.#options.tools.length !== 0) {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the Tools list\n        if (typeof toolList[toolName] !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolList[toolName](this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined') {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions = toolParams.options;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Get a HTML element associated to the application.\n   *\n   * @param {string} _name The name or id to find.\n   * @returns {object} The found element or null.\n   * @deprecated\n   */\n  getElement(_name) {\n    return null;\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {FileList} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {Array} urls The list of urls to load.\n   * @param {object} options The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\n   *  - batchSize: the size of the request url batch\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, options);\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   */\n  loadImageObject = (data) => {\n    this.#loadController.loadImageObject(data);\n  };\n\n  /**\n   * Abort the current load.\n   */\n  abortLoad() {\n    this.#loadController.abort();\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.syncLayerGroupScale();\n  }\n\n  /**\n   * Init the Window/Level display\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Get the layer group configuration from a data index.\n   * Defaults to div id 'layerGroup' if no association object has been set.\n   *\n   * @param {number} dataIndex The data index.\n   * @returns {Array} The list of associated configs.\n   */\n  #getViewConfigs(dataIndex) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    } else if (\n      typeof this.#options.dataViewConfigs[dataIndex] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataIndex];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {object} The configuration list.\n   */\n  getDataViewConfig() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration (see the init options for details).\n   *\n   * @param {object} configs The configuration list.\n   */\n  setDataViewConfig(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and bind them.\n   *\n   * @param {object} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const dataConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < dataConfigs.length; ++j) {\n        const viewConfig = dataConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          // create new layer group\n          const element = document.getElementById(viewConfig.divId);\n          const layerGroup = this.#stage.addLayerGroup(element);\n          // bind events\n          this.#bindLayerGroupToApp(layerGroup);\n          // optional orientation\n          if (typeof viewConfig.orientation !== 'undefined') {\n            layerGroup.setTargetOrientation(\n              getMatrixFromName(viewConfig.orientation));\n          }\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {number} dataIndex The data index to render.\n   */\n  render(dataIndex) {\n    if (typeof dataIndex === 'undefined' || dataIndex === null) {\n      throw new Error('Cannot render without data index');\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // loop on all configs\n    const viewConfigs = this.#getViewConfigs(dataIndex);\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataIndex +\n        ' (no data view config)');\n      return;\n    }\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n      this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // initialise or add view\n      // warn: needs a loaded DOM\n      if (layerGroup.getViewLayersByDataIndex(dataIndex).length === 0) {\n        if (layerGroup.getNumberOfLayers() === 0) {\n          this.#initialiseBaseLayers(dataIndex, config);\n        } else {\n          this.#addViewLayer(dataIndex, config);\n        }\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom to the layers.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the image layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {object} The state of the app as a JSON object.\n   */\n  getState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @param {object} _event The change event.\n   */\n  onResize = (_event) => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {object} event The key down event.\n   * @fires App#keydown\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo\n   * - CRTL-Y: redo\n   * - CRTL-ARROW_LEFT: next element on fourth dim\n   * - CRTL-ARROW_UP: next element on third dim\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\n   * - CRTL-ARROW_DOWN: previous element on third dim\n   *\n   * @param {object} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const viewController =\n          this.#stage.getActiveLayerGroup()\n            .getActiveViewLayer().getViewController();\n        const size = viewController.getImageSize();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (size.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (viewController.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (size.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (viewController.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.s\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} colourMap The colour map name.\n   */\n  setColourMap(colourMap) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMapFromName(colourMap);\n  }\n\n  /**\n   * Set the window/level preset.\n   *\n   * @param {object} preset The window/level preset.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayer(layer, layerGroup.getDivId());\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.loadid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.loadid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      const state = new State();\n      state.apply(this, state.fromJSON(event.data));\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      loadid: event.loadid,\n      isfirstitem: event.isfirstitem\n    });\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n    this.#getViewConfigs(event.loadid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.loadid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#loaderror\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    event.type = 'loaderror';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#loadabort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadabort';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Initialise the layers.\n   * To be called once the DICOM data has been loaded.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #initialiseBaseLayers(dataIndex, dataViewConfig) {\n    // add layers\n    this.#addViewLayer(dataIndex, dataViewConfig);\n\n    // initialise the toolbox\n    if (this.#toolboxController) {\n      this.#toolboxController.init();\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {number} dataIndex The data index.\n   * @param {object} dataViewConfig The data view config.\n   */\n  #addViewLayer(dataIndex, dataViewConfig) {\n    const data = this.#dataController.get(dataIndex);\n    if (!data) {\n      throw new Error('Cannot initialise layer with data id: ' + dataIndex);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(dataViewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with group id: ' +\n        dataViewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      layerGroup.getTargetOrientation()\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // colour map\n    if (typeof dataViewConfig.colourMap !== 'undefined') {\n      view.setColourMap(dataViewConfig.colourMap);\n    }\n\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    if (!isBaseLayer) {\n      opacity = 0.5;\n      // set color map if non was provided\n      if (typeof dataViewConfig.colourMap === 'undefined') {\n        view.setColourMap(lut.rainbow);\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataIndex);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n    const viewController = viewLayer.getViewController();\n\n    // listen to controller events\n    if (data.image.getMeta().Modality === 'SEG') {\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\n    }\n\n    // listen to image changes\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n    this.#dataController.addEventListener('imagechange', (event) => {\n      viewLayer.onimagechange(event);\n      this.render(event.dataid);\n    });\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayer(viewLayer, layerGroup.getDivId());\n    }\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataIndex);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.syncLayerGroupScale();\n\n    // major orientation axis\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n    // extra flip offset for oriented views...\n    if (typeof dataViewConfig.orientation !== 'undefined') {\n      if (major === 2) {\n        // flip offset Y for axial aquired data\n        if (dataViewConfig.orientation !== 'axial') {\n          viewLayer.addFlipOffsetY();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetY();\n          }\n        }\n      } else if (major === 0) {\n        // flip offset X for sagittal aquired data\n        if (dataViewConfig.orientation !== 'sagittal') {\n          viewLayer.addFlipOffsetX();\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.addFlipOffsetX();\n          }\n        }\n      }\n    }\n\n    // view layer scale\n    // only flip scale for base layers\n    if (isBaseLayer) {\n      if (typeof dataViewConfig.orientation !== 'undefined') {\n        if (major === 0 || major === 2) {\n          // scale flip Z for oriented views...\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      } else {\n        if (major === 0) {\n          // scale flip Z for sagittal and undefined target orientation\n          layerGroup.flipScaleZ();\n        } else {\n          viewLayer.setScale(layerGroup.getScale());\n          if (typeof drawLayer !== 'undefined') {\n            drawLayer.setScale(layerGroup.getScale());\n          }\n        }\n      }\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.setScale(layerGroup.getScale());\n      }\n    }\n\n  }\n\n} // class App\n","import {\n  getDwvVersion,\n  getTypedArray,\n  getOrientationName,\n  DicomParser\n} from './dicom/dicomParser';\nimport {\n  getUID,\n  getElementsFromJSONTags,\n  DicomWriter\n} from './dicom/dicomWriter';\nimport {TagValueExtractor} from './dicom/dicomElementsWrapper';\nimport {dictionary} from './dicom/dictionary';\nimport {getPixelDataTag} from './dicom/dicomTag';\nimport {App} from './app/application';\nimport {loadFromUri} from './utils/uri';\nimport {precisionRound} from './utils/string';\nimport {Point} from './math/point';\nimport {decoderScripts} from './image/decoder';\nimport {lut} from './image/luts';\nimport {buildMultipart} from './utils/array';\nimport {logger} from './utils/logger';\nimport {customUI} from './gui/generic';\nimport {defaultPresets} from './image/windowLevel';\n\nconst dicom = {\n  getUID,\n  getElementsFromJSONTags,\n  getTypedArray,\n  getPixelDataTag,\n  getOrientationName,\n  dictionary,\n  TagValueExtractor,\n  DicomParser,\n  DicomWriter\n};\nconst gui = {\n  customUI\n};\nconst image = {\n  decoderScripts,\n  lut\n};\nconst math = {\n  Point\n};\nconst tools = {\n  defaultPresets\n};\nconst utils = {\n  loadFromUri,\n  precisionRound,\n  buildMultipart\n};\n\nexport {\n  getDwvVersion,\n  logger,\n  App,\n  dicom,\n  gui,\n  image,\n  math,\n  tools,\n  utils\n};\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__436__","__WEBPACK_EXTERNAL_MODULE__626__","__WEBPACK_EXTERNAL_MODULE__812__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","dictionary","tagGroups","vr32bitVL","charSetString","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","LO","LT","OB","OD","OF","OL","OV","OW","PN","SH","SL","SQ","SS","ST","SV","TM","UC","UI","UL","UN","UR","US","UT","UV","_group","WeakMap","_element","Tag","constructor","group","element","_classPrivateFieldInitSpec","writable","Error","length","_classPrivateFieldSet","getGroup","_classPrivateFieldGet","getElement","toString","getKey","getNameFromDictionary","equals","rhs","getGroupName","isWithVR","isPrivate","parseInt","getInfoFromDictionary","info","getVrFromDictionary","vr","name","getTagFromKey","substring","getItemTag","isItemTag","tag","getItemDelimitationItemTag","getSequenceDelimitationItemTag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","dict","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","buffer","byteOffset","bpe","BYTES_PER_ELEMENT","tmp","i","j","k","_buffer","_isLittleEndian","_isNativeLittleEndian","_needFlip","_view","DataReader","isLittleEndian","Int8Array","Int16Array","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","size","bitArray","byteArrayLength","data","bitNumber","bitIndex","Math","floor","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","Float32Array","readFloat64Array","Float64Array","readHex","str","toUpperCase","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","warn","error","startsWith","search","rawPos","pos","endsWith","getFlags","inputStr","flags","regex","match","exec","push","replaceFlags","values","res","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","split","pop","test","includes","stringToUint8Array","arr","leni","charCodeAt","precisionRound","number","precision","factor","pow","delta","round","arraySortEquals","arr0","arr1","arrayEquals","slice","sort","every","index","uint8ArrayToString","String","fromCharCode","apply","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","getDwvVersion","DefaultTextDecoder","decode","result","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","is32bitVLVR","getDataElementPrefixByteSize","isImplicit","_defaultCharacterSet","_defaultTextDecoder","_textDecoder","_readTag","WeakSet","_readItemDataElement","_readPixelItemDataElement","_readDataElement","_interpretElement","_interpret","DicomParser","_classPrivateMethodInitSpec","decodeString","decodeSpecialString","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","dicomElements","parse","offset","dataElement","metaReader","dataReader","magicword","_classPrivateMethodGet","_readDataElement2","_interpretElement2","endOffset","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","implicit","vl","startOffset","guessTransferSyntax","isReadSupportedTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTransferSyntaxName","isNaN","charSetTerm","label","getUtfLabel","_interpret2","undefinedLength","numberOfFrames","Number","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","set","_readTag2","reader","_readItemDataElement2","itemData","item","isSeqDelim","isItemDelim","_readPixelItemDataElement2","offsetTableVl","readTagRes","is32bitVL","pixItemData","sqEndOffset","items","vrType","Array","from","stream","trim","cleanString","raw","stri","stri1","l","subElement","elements","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","val","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","getUID","prefix","getDwvUIDPrefix","uid","datePart","Date","toISOString","countPart","nonTagLength","min","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","_useUnVrForPrivateSq","_actions","_defaultRules","_rules","_defaultTextEncoder","_textEncoder","checkUnknownVR","dictVr","getDicomElement","Spacing","_values","getValues","get2D","x","y","getImage2DSize","rows","columns","TagValueExtractor","getTime","_elements","Index","canCompare","compare","diffDims","add","getWithNew2D","lenl","toStringId","dims","ii","getIndexFromStringId","strIds","dim","pointLength","fill","RescaleLut","rsi","bitsStored","_rsi","_lut","_isReady","_length","getRSI","isReady","initialise","getLength","getValue","WindowLut","rescaleLut","isSigned","_rescaleLut","_isSigned","_windowLevel","_signedShift","getWindowLevel","getRescaleLut","setWindowLevel","wl","setSignedOffset","getSlope","update","Uint8ClampedArray","lut_range_max","buildLut","func","lut","id","invId","plain","red","green","blue","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","_center","_width","_signedOffset","_ymin","_ymax","_xmin","_xmax","_slope","_inter","_init","WindowLevel","_init2","getCenter","getWidth","setRange","max","c","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","z","colourNameToHex","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","_x","_y","_z","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","EPSILON","BIG_EPSILON","isSimilar","tol","abs","_inverse","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","multiply","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","getCoronalMat33","getMatrixFromName","matrix","Point2D","getDistance","point2D","getRound","_x2","_y2","minus","Point","get3D","values0","values1","mergeWith3D","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","ListenerHandler","_listeners","_defineProperty","event","type","stack","callback","remove","splice","viewEventNames","_image","_windowLuts","_windowPresets","_currentPresetName","_currentWl","_colourMap","_currentPosition","_orientation","_listenerHandler","_alphaFunction","_fireEvent","View","minmax","_value","_index","fireEvent","addEventListener","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","getOrientation","setOrientation","mat33","init","setInitialIndex","getPlaybackMilliseconds","recommendedDisplayFrameRate","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","getRescaleSlopeAndIntercept","perslice","getSecondaryOffset","setWindowLevelPresetById","wlut","getMeta","BitsStored","windowLut","IsSigned","addWindowLut","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","setWindowPresets","presets","setDefaultColourMap","addWindowPresets","getColourMap","setColourMap","getCurrentPosition","worldToIndex","canSetPosition","geometry","dirs","getScrollIndex","isIndexInBounds","getOrigin","originIndex","getOrigins","setCurrentPosition","silent","valid","indexToWorld","minLen","maxLen","posEvent","imageUid","getImageUid","canQuantify","pixValue","getRescaledValueAtIndex","newWl","isNewWidth","isNewCenter","setWindowLevelPreset","preset","getWindowLevelMinMax","clone","copy","setListeners","getListeners","removeEventListener","getRescaledDataRange","setWindowLevelMinMax","generateImageData","photoInterpretation","getPhotometricInterpretation","alphaFunc","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","rgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","orientation","decrementScrollIndex","incrementScrollIndex","ViewFactory","create","view","paletteLut","windowPresets","modality","Modality","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","offsetToIndex","off","dimSize","RescaleSlopeAndIntercept","slope","intercept","_intercept","getIntercept","isID","_geometry","_imageUids","_rsis","_isIdentityRSI","_isConstantRSI","_photometricInterpretation","_planarConfiguration","_numberOfComponents","_meta","_dataRange","_rescaledDataRange","_histogram","_getSecondaryOffsetMax","_getRescaleSlopeAndInterceptAtOffset","_realloc","Image","imageUids","getBuffer","canWindowLevel","nFiles","numberOfFiles","isConstantRSI","setRescaleSlopeAndIntercept","inRsi","_getSecondaryOffsetMax2","isIdentityRSI","setPhotometricInterpretation","interp","setPlanarConfiguration","config","setMeta","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","findIndex","clonedBuffer","_getRescaleSlopeAndInterceptAtOffset2","appendSlice","rhsSize","timeId","getInitialTime","isNewFrame","hasSlicesAtTime","appendFrame","volumeGeometry","sliceGeometry","getSliceIndex","fullBufferSize","_realloc2","sliceIndex","fullSliceIndex","getCurrentNumberOfSlicesBeforeTime","indexOffset","maxOffset","getCurrentTotalNumberOfSlices","subarray","appendOrigin","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","appendFrameBuffer","frameBuffer","frameIndex","frameSize","time","origin","getDataRange","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","tmpBuffer","_origins","_size","_spacing","_timeOrigins","_initialTime","_newOrigins","_updateSliceSpacing","Geometry","spacing","count","includesOrigin","getOrientedArray3D","concat","getSpacing","_updateSliceSpacing2","orientedValues","getRealSpacing","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","sizeValues","spacingValues","orientedPoint3D","pointToWorld","worldToPoint","geoSliceSpacing","getSliceGeometrySpacing","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","reduce","toFixed","_imageOrientation","_viewOrientation","_targetOrientation","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getImageOrientedVector3D","getImageDeOrientedVector3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","_mask","_segments","_hiddenSegments","_getHiddenIndex","MaskSegmentHelper","mask","custom","segments","hasSegment","segmentNumber","getSegment","maskHasSegments","numbers","unknowns","segment","displayValue","find","getSegments","setSegments","list","setHiddenSegments","isHidden","_getHiddenIndex2","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","_mask2","_segment","_isSilent","_offsets","getName","segmentnumber","undo","_event","_planeHelper","_maskSegmentHelper","_playerID","_dataIndex","ViewController","dataid","getPlaneHelper","isMask","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","getPositionFromPlanePoint","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","getPixelUnit","pixelUnit","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","meta","imageMeta","metaKeys","metaKey","planePoint","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","RecommendedDisplayFrameRate","milliseconds","setInterval","canDoMore","stop","clearInterval","setColourMapFromName","InteractionEventNames","prompt","message","customUI","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","_containerDiv","_viewController","_canvas","_offscreenCanvas","_context","_isValidPosition","_imageData","_baseSize","_baseSpacing","_opacity","_scale","_fitScale","_offset","_baseOffset","_viewOffset","_zoomOffset","_flipOffset","_needsDataUpdate","_imageSmoothingEnabled","_setBaseSize","_updateImageData","_onWLChange","_onColourChange","_onPositionChange","_onAlphaFuncChange","ViewLayer","containerDiv","_setBaseSize2","srclayerid","getId","draw","dims3D","indexScrollIndex","filter","clear","className","getDataIndex","enableImageSmoothing","setView","getViewController","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","displayToMainPlanePos","display","style","isVisible","layerid","_updateImageData2","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousFitScale","previousScale","newFitScale","newViewOffset","newFlipOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","save","clearRect","restore","align","top","getCanvas","left","createImageData","putImageData","getShapeDisplayName","shape","displayName","Konva","points","_name","_layer","_parent","DrawGroupCommand","layer","getParent","_group2","_name2","_translation","_layer2","MoveGroupCommand","translation","move","minusTrans","_name3","_factory","_startAnchor","_endAnchor","_layer3","_style","ChangeGroupCommand","startAnchor","endAnchor","viewController","_group3","_name4","_layer4","_parent2","DeleteGroupCommand","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","_konvaLayer","_currentPosGroupId","DrawController","konvaLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","color","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","textExpr","quantification","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","_konvaStage","_drawController","_updateLabelScale","DrawLayer","getKonvaStage","getKonvaLayer","getLayers","getDrawController","setPlaneHelper","opacity","scale","_updateLabelScale2","container","listening","getContent","setAttribute","setWidth","setHeight","isGroupVisible","toogleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","_layers","_baseScale","_activeViewLayerIndex","_activeDrawLayerIndex","_showCrosshair","_updateCrosshairOnChange","_bindViewLayer","_bindDrawLayer","_getNextLayerDiv","_showCrosshairDiv","_removeCrosshairDiv","LayerGroup","_showCrosshairDiv2","updateLayersToPositionChange","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","scrollDiff","planeDiff","hasSetPos","setTargetOrientation","getShowCrosshair","setShowCrosshair","_removeCrosshairDiv2","getDivId","getScale","getBaseScale","getAddedScale","getOffset","getNumberOfLayers","getActiveViewLayer","getViewLayersByDataIndex","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataIndex","setActiveViewLayer","setActiveViewLayerByDataIndex","setActiveDrawLayer","setActiveDrawLayerByDataIndex","addViewLayer","viewLayerIndex","div","_getNextLayerDiv2","append","_bindViewLayer2","addDrawLayer","_bindDrawLayer2","empty","previous","getElementsByClassName","calculateFitScale","offsetWidth","offsetHeight","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","flipScaleZ","addScale","scaleStep","addTranslation","viewLayer","drawLayer","layer0","p2D","displayPos","lineH","lineV","getElementById","binderList","WindowLevelBinder","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","_layerGroups","_activeLayerGroupIndex","_binders","_callbackStore","_getBinderCallback","_addEventListeners","_removeEventListeners","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","syncLayerGroupScale","minScale","hasScale","_addEventListeners2","_removeEventListeners2","_getBinderCallback2","binder","binderObj","elem","getCallback","getEventType","_fontSize","_fontFamily","_textColour","_lineColour","_zoomScale","_strokeWidth","_shadowOffset","_tagOpacity","_textPadding","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","setZoomScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","_readV","_readV3","_readV5","_readV7","_readV9","State","toJSON","app","drawController","JSON","stringify","version","toObject","fromJSON","json","_readV2","_readV4","_readV6","_readV8","_readV10","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenk","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","parseFloat","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","forEach","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","_stack","_curCmdIndex","UndoStack","getStackSize","getCurrentStackIndex","_this$curCmdIndex","command","_this$curCmdIndex2","redo","_this$curCmdIndex3","_toolList","_selectedTool","_boundLayers","_unbindLayer","_getOnMouch","ToolboxController","toolList","window","_getOnMouch2","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayer","layerGroupDivId","_unbindLayer2","applySelectedTool","_x1","_y1","augmentEventOffsets","MultiProgressHandler","_getGlobalPercent","_getItemProgress","_progresses","_numberOfDimensions","_callback","lengthComputable","subindex","percent","loaded","total","_getItemProgress2","source","_getGlobalPercent2","setNumberOfDimensions","num","setNToLoad","getMonoProgressHandler","onprogress","getUndefinedMonoProgressHandler","lenprog","getUrlFromUri","uri","URL","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","urlContentTypes","Text","ArrayBuffer","_inputData","_requests","_runningLoader","_nLoad","_nLoadend","_aborting","_storeInputData","_storeRequest","_clearStoredRequests","_storeLoader","_clearStoredLoader","_addLoadItem","_addLoad","_addLoadend","_augmentCallbackEvent","_loadUrls","_loadDicomDir","UrlsLoader","onloaditem","_this$nLoad","onload","_this$nLoadend","onloadend","load","options","onloadstart","_loadDicomDir2","_loadUrls2","abort","readyState","isLoading","onerror","onabort","_storeInputData2","_clearStoredRequests2","_clearStoredLoader2","_storeRequest2","request","_storeLoader2","loader","_augmentCallbackEvent2","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","getLoadHandler","status","responseURL","statusText","response","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","join","getFileListFromDicomDir","rootUrl","fullUrls","ImageFactory","checkElements","pixelBuffer","size2D","frames","rowSpacing","columnSpacing","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","photometricInterpretation","photo","planarConfiguration","rescaleSlope","rescaleIntercept","sopClassUID","SOPClassUID","studyUID","StudyInstanceUID","seriesUID","SeriesInstanceUID","bits","pixelRep","PixelRepresentation","frameOfReferenceUID","FrameOfReferenceUID","windowCenter","windowWidth","windowCWExplanation","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","equalPosPat","pos1","pos2","checkTag","rootElement","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","longValue","urnValue","schemeDesignator","algorithmType","algorithmName","cielabElement","triplet","gammaFunc","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","propertyCategoryCode","propertyTypeCode","trackingId","trackingUid","getSpacingFromMeasure","measure","pixelSpacing","getSegmentFrameInfo","groupItem","derivationImages","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","dimIndex","refSegmentNumber","imagePosPat","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","MaskFactory","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","tags","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","SOPInstanceUID","lossyImageCompression","LossyImageCompression","ThreadPool","poolSize","_stop","_stop2","onworkend","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onTaskEnd","onwork","onworkitem","parentPool","itemNumber","runningTask","numberOfItems","dataIndex","handleWorkerError","random","worker","Worker","script","onmessage","postMessage","startMessage","terminate","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","_script","_pool","_areCallbacksSet","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","_algoName","_numberOfData2","_decodeCount","SynchPixelBufferDecoder","algoName","numberOfData","_this$decodeCount","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","_areCallbacksSet2","_pixelDecoder","PixelBufferDecoder","_options","_dicomParserStore","_finalBufferStore","_decompressedSizes","_generateImage","_onDecodedItem","DicomBufferToView","opt","convert","dicomParser","imageFactory","algo","getSyntaxDecompressionName","needDecompression","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","_onDecodedItem2","_generateImage2","decodedData","fullSize","_isLoading","_db2v","MemoryLoader","canLoadMemory","_addLoadItem2","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","_aborted","_createDataUri","_createDataUri2","dataType","imageType","file","Blob","createObjectURL","bytes","videoDataStr","btoa","_filename","_files","_zobjs","_zipAsyncCallback","_zipAsyncCallback2","content","unzipPercent","async","then","memoryIO","progress","canLoadFile","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","_opt","isJson","u8Array","parts","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","domImage","canvas","ctx","lastModifiedDate","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","JSZip","zip","isZip","_readers","_storeReader","_clearStoredReaders","FilesLoader","FileReader","_storeReader2","readAsText","readAsDataURL","readAsArrayBuffer","_clearStoredReaders2","_currentLoaders","_counter","_getNextLoadId","_loadImageFiles","_loadImageUrls","_loadStateFile","_loadStateUrl","_loadData","LoadController","loadFiles","files","_loadStateFile2","_loadImageFiles2","loadURLs","_loadStateUrl2","_loadImageUrls2","loadImageObject","_loadData2","_getNextLoadId2","_this$counter","fileIO","urlIO","loadType","eventInfo","loadtype","loadId","loadid","isFirstItem","eventInfoItem","isfirstitem","_data","_getFireEvent","DataController","_getFireEvent2","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","unknown","mergeObjects","_app","_wheelDeltaY","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","up","layerDetails","_started","_scrollWhell","_touchTimerID","_displayTooltip","_showTooltip","_removeTooltipDiv","_showTooltip2","_removeTooltipDiv2","span","parentElement","createTextNode","i18n","props","mm","cm2","degree","_begin","_end","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","getStats","includesFullStatsFlags","stats","getSimpleStats","median","getPercentile","p25","p75","getFullStats","sumSqr","variance","stdDev","ratio","i0","v0","guid","getDefaultAnchor","radius","strokeWidth","strokeScaleEnabled","dragOnTop","_shapeFactoryList","_currentFactory","_shape","_isActive","_drawEventCallback","_applyFuncToAnchors","_setAnchorsVisible","_removeAnchors","_addAnchors","_getClone","_setAnchorOn","_setAnchorOff","ShapeEditor","setFactoryList","setShape","inshape","_removeAnchors2","isFactoryGroup","_addAnchors2","setViewController","getShape","isActive","setDrawEventCallback","enable","_setAnchorsVisible2","getLayer","disable","resetAnchors","setAnchorsActive","anchor","_setAnchorOn2","_setAnchorOff2","_applyFuncToAnchors2","getAnchors","getStyle","_getClone2","parent","on","cancelBubble","evt","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","_shapeEditor","_trash","_command","_tmpShapeGroup","_shapeName","_points","_lastPoint","_activeShapeGroup","_originalCursor","_mouseOverCursor","_onNewPoints","_onFinalPoints","_updateDrawLayer","_activateCurrentPositionShapes","_setShapeOff","_getRealPosition","_resetActiveShapeGroup","_onNewPoints2","tmpPoints","destroy","_onFinalPoints2","finalPoints","finalShapeGroup","setShapeOn","_updateDrawLayer2","_activateCurrentPositionShapes2","shapeGroups","_setShapeOff2","shapeGroup","_getRealPosition2","stage","_resetActiveShapeGroup2","body","cursor","ashape","changed","ROI","getPoint","addPoint","addPoints","RoiFactory","getNPoints","getTimeout","roi","fontSize","fontFamily","px","py","kroi","textPos","_blurRadius","_simplifyTolerant","_simplifyCount","_imageInfo","_initialthreshold","_currentthreshold","_shapeGroup","_initialpoint","_border","_parentPoints","_extender","_painterTimeout","_getCoord","_calcBorder","_paintBorder","_calcBorder2","threshold","simple","MagicWand","cs","icsl","_paintBorder2","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","ox","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","earchGranBits","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","costArr","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","_path","_currentPath","_tolerance","_clearParentPoints","_clearPaths","_scissors","_finishShape","_clearParentPoints2","_clearPaths2","_finishShape2","_centre","_radius","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","_updateCircleQuantification","_getShadowCircle","_updateCircleQuantification2","kcircle","centerPoint","circle","_a","_b","Ellipse","getA","getB","radiusX","radiusY","radiusRatio","rySquare","_updateEllipseQuantification","_getShadowEllipse","_updateEllipseQuantification2","kellipse","ellipse","Rectangle","getRealWidth","getRealHeight","getHeight","_updateRectangleQuantification","_getShadowRectangle","_updateRectangleQuantification2","krect","p2d0","p2d1","rect","Threshold","_min","_max","_originalImage","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","_originalImage2","Sharpen","_originalImage3","Sobel","_filterList","_selectedFilter","_app2","_filter","_resetImage","_listenerHandler2","_fireEvent2","_app3","_listenerHandler3","_fireEvent3","_app4","_listenerHandler4","_fireEvent4","_filter2","_app5","RunFilterCommand","setLastImage","x0","y0","diffX","diffY","pixelToIntensity","manual","WL","mouseup","mousedown","mousemove","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","dblclick","clearTimeout","features","displayTooltip","ZoomAndPan","point0","point1","midPoint","tx","ty","lineRatio","zoom","twotouchdown","twotouchmove","step","Opacity","op","Draw","getIntersection","selectedShape","timer","trashLine1","trashLine2","lineColour","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","groupId","onSaveCallback","openRoiDialog","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","getAbsoluteScale","onThresholdChange","movedpoint","modifyThreshold","extend","setExtend","getExtend","ini","jl","bl","setPoints","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2b","p2e","CircleFactory","right","bottom","EllipseFactory","ellipseX","ellipseY","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectangle","rectX","rectY","rectWidth","rectHeight","kshadow","RulerFactory","tickLen","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","_dataController","_toolboxController","_loadController","_stage","_undoStack","_getViewConfigs","_createLayerGroups","_onloadstart","_onloadprogress","_onloaditem","_onload","_onloadend","_onloaderror","_onloadabort","_bindLayerGroupToApp","_initialiseBaseLayers","_addViewLayer","App","ctrlKey","shiftKey","isFirstLoadItem","eventMetaData","state","_getViewConfigs2","viewOnFirstLoadItem","addNewImage","getMetaData","getMetaDataWithNames","accumulator","currentValue","getNumberOfLoadedData","getToolboxController","divId","tools","appToolList","t","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","binders","resetLayout","abortLoad","initWLDisplay","getDataViewConfig","dataViewConfigs","setDataViewConfig","configs","_createLayerGroups2","setLayerGroupsBinders","instances","viewConfigs","_initialiseBaseLayers2","_addViewLayer2","cx","cy","translate","getState","resetDisplay","resetZoom","setTool","tool","dataKeys","divIds","dataConfigs","viewConfig","_bindLayerGroupToApp2","dataViewConfig","imageGeometry","getViewOrientation","isBaseLayer","spacing2D","onimageset","onimagechange","major","dicom","getElementsFromJSONTags","jsonTags","jsonTag","dicomElement","getOrientationName","DicomWriter","default","action","Acquisition","Procedure","setUseUnVrForPrivateSq","setRules","rules","encodeString","encodeSpecialString","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","rule","writeDataElementItems","writer","itemKeys","itemElement","writeDataElement","itemDelimElement","writeDataElementValue","hexString","hexString1","hexString2","atValue","writePixelDataElementValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","originalElement","setElementValue","fmiv","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","metaOffset","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","gui","math","utils","loadFromUri","getUriQuery","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","onLoadEnd","loadFromQuery","buildMultipart","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer"],"sourceRoot":""}