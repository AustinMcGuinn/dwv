{"version":3,"file":"dwv.min.js","mappings":"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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC35BD,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAClllCO,IAAK,CACHP,IAAKN,GAtIT,SAAyBrE,GACvB,MAAMF,EAAU,EAAJE,EACZ,OAAIF,EAAMsE,IACDA,IAEFtE,CACT,IAiII8E,MAAOP,GAvHX,SAA0BrE,GACxB,MAAMmF,EAAQf,EAAgB,EAC9B,IAAItE,EAAM,EACV,OAAIE,GAAKmF,IACPrF,EAAoB,GAAbE,EAAImF,GACPrF,EAAMsE,KACDA,IAGJtE,CACT,IA8GI+E,KAAMR,GArGV,SAAyBrE,GACvB,MAAMmF,EAAQf,EAAgB,EAC9B,IAAItE,EAAM,EACV,OAAIE,GAAK,EAAImF,IACXrF,EAAwB,GAAjBE,EAAI,EAAImF,GACXrF,EAAMsE,KACDA,IAGJtE,CACT,KAgGEsF,SAAU,CACRT,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdX,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7ixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowCenterAndWidth.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dataElement.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/gui/overlayData.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/app/defaults.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__626__, __WEBPACK_EXTERNAL_MODULE__812__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","module.exports = __WEBPACK_EXTERNAL_MODULE__436__;","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {number[]} [dims] Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an array sort callback.\n * f(a,b) > 0 -> b,a\n * f(a,b) < 0 -> a,b\n * f(a,b) = 0 -> original order\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {Function} A function that compares two Index.\n */\nexport function getIndexCompareFunction(direction) {\n  return function (a, b) {\n    return a.get(direction) - b.get(direction);\n  };\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index.\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index\n  let pointLength = 0;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    if (dim > pointLength) {\n      pointLength = dim;\n    }\n  }\n  if (pointLength === 0) {\n    throw new Error('No dimension found in point stringId');\n  }\n  // default values\n  const values = new Array(pointLength);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    dim = parseInt(strIds[j].substring(1, 3), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rescale LUT class.\n * Typically converts from integer to float.\n */\nexport class RescaleLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  #isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  #lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#isIdRsi = rsi.isID();\n\n    this.#length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this.#isIdRsi) {\n      this.#lut = new Float32Array(this.#length);\n      for (let i = 0; i < this.#length; ++i) {\n        this.#lut[i] = this.#rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#isIdRsi ? offset : this.#lut[offset];\n  }\n\n} // class RescaleLut\n","/**\n * Minimum window width value.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\n */\nconst minWindowWidth = 1;\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, {center: number, width: number}>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: {center: 40, width: 400},\n    lung: {center: -500, width: 1500},\n    bone: {center: 500, width: 2000},\n    brain: {center: 40, width: 80},\n    head: {center: 90, width: 350}\n  }\n};\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * WindowCenterAndWidth class.\n * <br>Pseudo-code:\n * <pre>\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * </pre>\n *\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\n */\nexport class WindowCenterAndWidth {\n\n  /**\n   * The center.\n   *\n   * @type {number}\n   */\n  #center;\n\n  /**\n   * The width.\n   *\n   * @type {number}\n   */\n  #width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      throw new Error('Window width shall always be greater than or equal to ' +\n        minWindowWidth);\n    }\n    this.#center = center;\n    this.#width = width;\n\n    this.#init();\n  }\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const c = this.#center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Get the window center.\n   *\n   * @returns {number} The window center.\n   */\n  getCenter() {\n    return this.#center;\n  }\n\n  /**\n   * Get the window width.\n   *\n   * @returns {number} The window width.\n   */\n  getWidth() {\n    return this.#width;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n  /**\n   * Check for window level equality.\n   *\n   * @param {WindowCenterAndWidth} rhs The other window level to compare to.\n   * @returns {boolean} True if both window level are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getCenter() === rhs.getCenter() &&\n      this.getWidth() === rhs.getWidth();\n  }\n\n} // class WindowLevel\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleLut} from './rescaleLut';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class.\n * Typically converts from float to integer.\n */\nexport class WindowLut {\n\n  /**\n   * The rescale LUT.\n   *\n   * @type {RescaleLut}\n   */\n  #rescaleLut;\n\n  /**\n   * The window level.\n   *\n   * @type {WindowCenterAndWidth}\n   */\n  #windowLevel;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  #isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, window level is set with\n   *   the 'setWindowLevel' method.\n   *\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(rescaleLut, isSigned, isDiscrete) {\n    this.#rescaleLut = rescaleLut;\n\n    if (isSigned) {\n      const size = this.#rescaleLut.getLength();\n      this.#signedShift = size / 2;\n    } else {\n      this.#signedShift = 0;\n    }\n\n    this.#isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the window / level.\n   *\n   * @returns {WindowCenterAndWidth} The window / level.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Get the rescale lut.\n   *\n   * @returns {RescaleLut} The rescale lut.\n   */\n  getRescaleLut() {\n    return this.#rescaleLut;\n  }\n\n  /**\n   * Set the window center and width.\n   *\n   * @param {WindowCenterAndWidth} wl The window level.\n   */\n  setWindowLevel(wl) {\n    // store the window values\n    this.#windowLevel = wl;\n\n    // possible signed shift (LUT indices are positive)\n    this.#windowLevel.setSignedOffset(\n      this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\n\n    // create lut if not continous\n    if (this.#isDiscrete) {\n      const size = this.#rescaleLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this.#isDiscrete) {\n      return this.#lut[offset + this.#signedShift];\n    } else {\n      return Math.floor(this.#windowLevel.apply(offset + this.#signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {Array} The LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values.\n *  otherwise return 0 for the first third and\n *  lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values.\n *  otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * Colour map: red, green and blue components\n * to associate with intensity values.\n */\nexport class ColourMap {\n  /**\n   * Red component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  red;\n  /**\n   * Green component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  green;\n  /**\n   * Blue component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  blue;\n\n  /**\n   * @param {number[]} red Red component.\n   * @param {number[]} green Green component.\n   * @param {number[]} blue Blue component.\n   */\n  constructor(red, green, blue) {\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n  }\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, ColourMap>}\n */\nexport const luts = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet\n  /* eslint-disable max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable max-len */\n\n  // hot metal blue\n  /* eslint-disable max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable max-len */\n\n  // pet 20 step\n  /* eslint-disable max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable max-len */\n};\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {object} c1 The first colour.\n * @param {object} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {object} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {object} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {object} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\n * @param {object} rgbTriplet RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgbTriplet) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgbTriplet.r * 0.001172549 +\n    rgbTriplet.g * 0.002301961 +\n    rgbTriplet.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {object} sRGB triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {object} triplet sRGB triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {Vector3D} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.getX() * this.getX()) +\n      (this.getY() * this.getY()) +\n      (this.getZ() * this.getZ())\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * @see https://en.wikipedia.org/wiki/Cross_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * @see https://en.wikipedia.org/wiki/Dot_product\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.getX() * vector3D.getX()) +\n      (this.getY() * vector3D.getY()) +\n      (this.getZ() * vector3D.getZ());\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {number[]} values row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number|undefined} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {number[]} array3D The input 3D array.\n   * @returns {number[]} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum,\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\n * @see https://github.com/willnode/N-Matrix-Programmer\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable array-element-newline */\n}\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix;\n  if (name === 'axial') {\n    matrix = getIdentityMat33();\n  } else if (name === 'coronal') {\n    matrix = getCoronalMat33();\n  } else if (name === 'sagittal') {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() + ', ' + this.getY() + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} The distance to the input point.\n   */\n  getDistance(point2D) {\n    return Math.sqrt(\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\n  }\n\n  /**\n   * Round a Point2D.\n   *\n   * @returns {Point2D} The rounded point.\n   */\n  getRound() {\n    return new Point2D(\n      Math.round(this.getX()),\n      Math.round(this.getY())\n    );\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getX() === rhs.getX() &&\n      this.getY() === rhs.getY() &&\n      this.getZ() === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.getX(), rhs.getX(), tol) &&\n      isSimilar(this.getY(), rhs.getY(), tol) &&\n      isSimilar(this.getZ(), rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.getX() +\n      ', ' + this.getY() +\n      ', ' + this.getZ() + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.getX() - point3D.getX()),\n      (this.getY() - point3D.getY()),\n      (this.getZ() - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Get an array find callback for a similar input point.\n *\n * @param {Point3D} point The point to compare to.\n * @param {number} tol The comparison tolerance\n *   default to Number.EPSILON.\n * @returns {Function} A function that compares, using `isSimilar`,\n *   its input point to the one given as input to this function.\n */\nexport function getSimilarPoint3DFunction(point, tol) {\n  return function (element) {\n    return element.isSimilar(point, tol);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/* eslint-disable quote-props */\n/* eslint max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE'\n * - (vr) 'OB or OW' -> 'ox'\n * - (vr) 'US or SS' -> 'xs'\n * - (vr) 'US or OW' -> 'xx'\n * - (vr) 'US or SS or OW' -> 'xs'\n * - added 'GenericGroupLength' element to each group\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {object} tags The tags to add.\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n// -> removed duplicates (commented)\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n// Value Representation (VR) with 32bit Value Length (VL)\n// Added locally used 'ox'\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n// String VR with extended or replaced default character repertoire defined in\n// Specific Character Set (0008,0005)\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n// VR types\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group.');\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element.');\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {Array|undefined} The info as [vr, multiplicity, name].\n   */\n  getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key.');\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {Tag|undefined} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string:\n *  key0=val00&key0=val01&key1=val10 returns\n *  { key0 : [val00, val01], key1 : val1 }\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {Array} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\n * Can be a solution to not have trailing zero as when\n * using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {*} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: arr.slice(start, end).find(callbackFn)\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *  {'Content-Type', ..., data} (depending on header tags)\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data element.\n */\nexport class DataElement {\n  /**\n   * The element Value Representation.\n   *\n   * @type {string}\n   */\n  vr;\n  /**\n   * The element value.\n   *\n   * @type {Array}\n   */\n  value;\n\n  // [start] internal values\n  // only present during parsing or writing otherwise not set\n\n  /**\n   * The element dicom tag.\n   *\n   * @type {Tag}\n   */\n  tag;\n\n  /**\n   * The element Value Length.\n   *\n   * @type {number}\n   */\n  vl;\n\n  /**\n   * Flag to know if defined or undefined sequence length.\n   *\n   * @type {boolean}\n   */\n  undefinedLength;\n\n  /**\n   * The element start offset.\n   *\n   * @type {number}\n   */\n  startOffset;\n\n  /**\n   * The element end offset.\n   *\n   * @type {number}\n   */\n  endOffset;\n\n  /**\n   * The sequence items.\n   *\n   * @type {Array}\n   */\n  items;\n\n  // [end] internal values\n\n  /**\n   * @param {string} vr The element VR (Value Representation).\n   */\n  constructor(vr) {\n    this.vr = vr;\n  }\n}","import {\n  Tag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes,\n} from './dictionary';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of DICOM data elements indexed via a 8 character string formed from\n * the group and element numbers.\n *\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.33.0-beta.7';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n * after the 128 bytes preamble.\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * (exported for tests only)\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {Array} orientation The image orientation patient.\n * @returns {string} The orientation name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\n  let name;\n  if (arrayEquals(orientation, axialOrientation)) {\n    name = 'axial';\n  } else if (arrayEquals(orientation, coronalOrientation)) {\n    name = 'coronal';\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\n    name = 'sagittal';\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2';\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.2';\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.50' ||\n    syntax === '1.2.840.10008.1.2.4.51';\n}\n\n/**\n * Tell if a given syntax is a retired JPEG one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a retired jpeg syntax.\n */\nfunction isJpegRetiredTransferSyntax(syntax) {\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\n    !isJpegBaselineTransferSyntax(syntax) &&\n    !isJpegLosslessTransferSyntax(syntax)) ||\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === '1.2.840.10008.1.2.4.57' ||\n    syntax === '1.2.840.10008.1.2.4.70';\n}\n\n/**\n * Tell if a given syntax is a JPEG-LS one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg-ls syntax.\n */\nfunction isJpeglsTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo = null;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n\n  // Unsupported:\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\n\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\n    isRleTransferSyntax(syntax)); // RLE\n}\n\n/**\n * Get the transfer syntax name.\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\n *\n * @param {string} syntax The transfer syntax.\n * @returns {string} The name of the transfer syntax.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (syntax === '1.2.840.10008.1.2') {\n    // Implicit VR - Little Endian\n    name = 'Little Endian Implicit';\n  } else if (syntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR - Little Endian\n    name = 'Little Endian Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\n    // Deflated Explicit VR - Little Endian\n    name = 'Little Endian Deflated Explicit';\n  } else if (syntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR - Big Endian\n    name = 'Big Endian Explicit';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    // JPEG baseline\n    if (syntax === '1.2.840.10008.1.2.4.50') {\n      name = 'JPEG Baseline';\n    } else { // *.51\n      name = 'JPEG Extended, Process 2+4';\n    }\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    // JPEG Lossless\n    if (syntax === '1.2.840.10008.1.2.4.57') {\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\n    } else { // *.70\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\n    }\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\n    // Retired JPEG\n    name = 'Retired JPEG';\n  } else if (isJpeglsTransferSyntax(syntax)) {\n    // JPEG-LS\n    name = 'JPEG-LS';\n  } else if (isJpeg2000TransferSyntax(syntax)) {\n    // JPEG 2000\n    if (syntax === '1.2.840.10008.1.2.4.91') {\n      name = 'JPEG 2000 (Lossless or Lossy)';\n    } else { // *.90\n      name = 'JPEG 2000 (Lossless only)';\n    }\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\n    // MPEG2 Image Compression\n    name = 'MPEG2';\n  } else if (isRleTransferSyntax(syntax)) {\n    // RLE (lossless)\n    name = 'RLE';\n  }\n  // return\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n * See https://github.com/ivmartel/dwv/issues/188\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {DataElement} firstDataElement The first data element\n *   of the DICOM header.\n * @returns {DataElement} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      // ImplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2';\n    } else {\n      // ExplicitVRLittleEndian\n      syntax = '1.2.840.10008.1.2.1';\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      // ExplicitVRBigEndian\n      syntax = '1.2.840.10008.1.2.2';\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = new DataElement('UI');\n  dataElement.tag = new Tag('0002', '0010');\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   i.e. without its value.\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\n *\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * Is the input VR a known VR.\n *\n * @param {string} vr The vr to test.\n * @returns {boolean} True if known.\n */\nfunction isKnownVR(vr) {\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\n  return knownTypes.includes(vr);\n}\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {DataElements}\n   */\n  #dataElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * @external TextDecoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  // not using type DataElements since the typedef is not exported with the API\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {Object<string, DataElement>} The data elements.\n   */\n  getDicomElements() {\n    return this.#dataElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {DataElement} The data element.\n   */\n  #readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // check vr\n    if (!isKnownVR(vr)) {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\n      vr = 'UN';\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = new DataElement(vr);\n    element.tag = tag;\n    element.vl = vl;\n    element.startOffset = startOffset;\n    element.endOffset = endOffset;\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {DataElement} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\n          );\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        data = Array.from(reader.readUint8Array(offset, vl));\n      } else {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        for (let l = 0; l < keys.length; ++l) {\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            pixelRepresentation, bitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {DataElements} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dataElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dataElements['00020010'];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dataElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dataElements[key] === 'undefined') {\n        this.#dataElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dataElements['7FE00010'] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dataElements['00280103'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dataElements['00280100'];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dataElements['00080005'];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dataElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dataElements['7FE00010'];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dataElements['00280008'] !== 'undefined') {\n          numberOfFrames = Number(this.#dataElements['00280008'].value[0]);\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\n */\nexport class ListenerHandler {\n  /**\n   * listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {Array} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy)\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Array} regions An array of regions.\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {Array} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {Array}\n   */\n  #values;\n\n  /**\n   * @param {Array} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {Array} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {object} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  BIG_EPSILON,\n  isSimilar,\n  getIdentityMat33\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Point3D[]}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {Object<string, Point3D[]>}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Point3D[]} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      this.#origins,\n      this.#orientation\n    );\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Updating slice spacing.');\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest index\n    let closestSliceIndex = 0;\n    let minDist = point.getDistance(localOrigins[0]);\n    let dist = 0;\n    for (let i = 0; i < localOrigins.length; ++i) {\n      dist = point.getDistance(localOrigins[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        closestSliceIndex = i;\n      }\n    }\n    const closestOrigin = localOrigins[closestSliceIndex];\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n    // use third orientation matrix column as base plane vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    const dotProd = normal.dotProduct(pointDir);\n    // oposite vectors get higher index\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    // equal callback\n    const equalToOrigin = function (element) {\n      return element.equals(origin);\n    };\n    if (typeof time !== 'undefined') {\n      // check if not already in list\n      const found = this.#timeOrigins[time].find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same time origin twice');\n      }\n      // add in origin array\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      // check if not already in list\n      const found = this.#origins.find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same origin twice');\n      }\n      // update flag\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {Array} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {Array} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Point3D[]} origins An array of Point3D.\n * @param {Matrix33} orientation The oritentation matrix.\n * @param {boolean} [withCheck] Flag to activate spacing variation check,\n *   default to true.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\n  if (typeof withCheck === 'undefined') {\n    withCheck = true;\n  }\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n  // (x, y, z) = orientationMatrix * (i, j, k)\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\n  // applied on the patient position, reorders indices\n  // so that Z is the slice direction\n  const invOrientation = orientation.getInverse();\n  let origin1 = invOrientation.multiplyPoint3D(origins[0]);\n  let origin2 = invOrientation.multiplyPoint3D(origins[1]);\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\n  const deltas = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    origin1 = invOrientation.multiplyPoint3D(origins[i]);\n    origin2 = invOrientation.multiplyPoint3D(origins[i + 1]);\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\n    if (diff === 0) {\n      throw new Error('Zero slice spacing.' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    // keep smallest\n    if (diff < sliceSpacing) {\n      sliceSpacing = diff;\n    }\n    if (withCheck) {\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\n        deltas.push(Math.abs(sliceSpacing - diff));\n      }\n    }\n  }\n  // warn if non constant\n  if (withCheck && deltas.length !== 0) {\n    const sumReducer = function (sum, value) {\n      return sum + value;\n    };\n    const mean = deltas.reduce(sumReducer) / deltas.length;\n    if (mean > 1e-4) {\n      logger.warn('Varying slice spacing, mean delta: ' +\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\n    }\n  }\n\n  return sliceSpacing;\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromDictionary,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * DicomElements wrapper.\n *\n * Warning: limited support for merged meta data.\n */\nexport class DicomElementsWrapper {\n\n  /**\n   * Wrapped elements.\n   *\n   * @type {Array}\n   */\n  #dicomElements;\n\n  /**\n   * @param {Array} dicomElements The elements to wrap.\n   */\n  constructor(dicomElements) {\n    this.#dicomElements = dicomElements;\n  }\n\n  /**\n   * Get a DICOM Element value from a group/element key.\n   *\n   * @param {string} groupElementKey The key to retrieve.\n   * @param {boolean} [asArray] Get the value as an Array.\n   * @returns {object} The DICOM element value.\n   */\n  getFromKey(groupElementKey, asArray) {\n    // default\n    if (typeof asArray === 'undefined') {\n      asArray = false;\n    }\n    let value = null;\n    const dElement = this.#dicomElements[groupElementKey];\n    if (typeof dElement !== 'undefined') {\n      // raw value if only one\n      if (dElement.value.length === 1 && asArray === false) {\n        value = dElement.value[0];\n      } else {\n        value = dElement.value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Dump the DICOM tags to an object.\n   *\n   * @returns {object} The DICOM tags as an object.\n   */\n  dumpToObject() {\n    const keys = Object.keys(this.#dicomElements);\n    const obj = {};\n    let dicomElement = null;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      const tag = getTagFromKey(keys[i]);\n      obj[this.#getTagName(tag)] =\n        this.#getElementAsObject(tag, dicomElement);\n    }\n    return obj;\n  }\n\n  /**\n   * Get a tag string name from the dictionary.\n   *\n   * @param {object} tag The DICOM tag object.\n   * @returns {string} The tag name.\n   */\n  #getTagName(tag) {\n    let name = tag.getNameFromDictionary();\n    if (name === null) {\n      name = tag.getKey();\n    }\n    return name;\n  }\n\n  /**\n   * Get a DICOM element as a simple object.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @returns {object} The element as a simple object.\n   */\n  #getElementAsObject(tag, dicomElement) {\n    // element value\n    let value = null;\n\n    const isPixel = isPixelDataTag(tag);\n\n    const vr = dicomElement.vr;\n    if (vr === 'SQ' &&\n      typeof dicomElement.value !== 'undefined' &&\n      !isPixel) {\n      value = [];\n      const items = dicomElement.value;\n      let itemValues = null;\n      for (let i = 0; i < items.length; ++i) {\n        itemValues = {};\n        const keys = Object.keys(items[i]);\n        for (let k = 0; k < keys.length; ++k) {\n          const itemElement = items[i][keys[k]];\n          const tag = getTagFromKey(keys[k]);\n          const key = this.#getTagName(tag);\n          // do not inclure Item elements\n          if (key !== 'Item') {\n            itemValues[key] = this.#getElementAsObject(tag, itemElement);\n          }\n        }\n        value.push(itemValues);\n      }\n    } else {\n      value = this.#getElementValueAsString(tag, dicomElement);\n    }\n\n    // return\n    return {\n      value: value,\n      vr: vr\n    };\n  }\n\n  /**\n   * Dump the DICOM tags to a string.\n   *\n   * @returns {string} The dumped file.\n   */\n  dump() {\n    const keys = Object.keys(this.#dicomElements);\n    let result = '\\n';\n    result += '# Dicom-File-Format\\n';\n    result += '\\n';\n    result += '# Dicom-Meta-Information-Header\\n';\n    result += '# Used TransferSyntax: ';\n    if (isNativeLittleEndian()) {\n      result += 'Little Endian Explicit\\n';\n    } else {\n      result += 'NOT Little Endian Explicit\\n';\n    }\n    let dicomElement = null;\n    let tag = null;\n    let checkHeader = true;\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      dicomElement = this.#dicomElements[keys[i]];\n      tag = getTagFromKey(keys[i]);\n      if (checkHeader && tag.getGroup() !== '0002') {\n        result += '\\n';\n        result += '# Dicom-Data-Set\\n';\n        result += '# Used TransferSyntax: ';\n        const syntax = this.#dicomElements['00020010'].value[0];\n        result += getTransferSyntaxName(syntax);\n        result += '\\n';\n        checkHeader = false;\n      }\n      result += this.#getElementAsString(tag, dicomElement) + '\\n';\n    }\n    return result;\n  }\n\n  /**\n   * Get a data element value as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n   * @returns {string} A string representation of the DICOM element.\n   */\n  #getElementValueAsString(tag, dicomElement, pretty) {\n    let str = '';\n    const strLenLimit = 65;\n\n    // dafault to pretty output\n    if (typeof pretty === 'undefined') {\n      pretty = true;\n    }\n    // check dicom element input\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\n      return str;\n    }\n\n    // Polyfill for Number.isInteger.\n    const isInteger = Number.isInteger || function (value) {\n      return typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value;\n    };\n\n    // TODO Support sequences.\n\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n      str += '(no value available)';\n    } else if (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength) {\n      str = '(PixelSequence)';\n    } else if (dicomElement.vr === 'DA' && pretty) {\n      const daObj = getDate(dicomElement);\n      const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n      str = da.toLocaleDateString();\n    } else if (dicomElement.vr === 'TM' && pretty) {\n      const tmObj = getTime(dicomElement);\n      str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n    } else {\n      let isOtherVR = false;\n      if (dicomElement.vr.length !== 0) {\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n      }\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'DS');\n      let valueStr = '';\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n        valueStr = '';\n        if (k !== 0) {\n          valueStr += '\\\\';\n        }\n        if (isFloatNumberVR) {\n          const num = Number(dicomElement.value[k]);\n          if (!isInteger(num) && pretty) {\n            valueStr += num.toPrecision(4);\n          } else {\n            valueStr += num.toString();\n          }\n        } else if (isOtherVR) {\n          let tmp = dicomElement.value[k].toString(16);\n          if (dicomElement.vr === 'OB') {\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n          } else {\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n          }\n          valueStr += tmp;\n        } else {\n          valueStr += dicomElement.value[k];\n        }\n        // check length\n        if (str.length + valueStr.length <= strLenLimit) {\n          str += valueStr;\n        } else {\n          str += '...';\n          break;\n        }\n      }\n    }\n    return str;\n  }\n\n  /**\n   * Get a data element as a string.\n   *\n   * @param {Tag} tag The DICOM tag.\n   * @param {object} dicomElement The DICOM element.\n   * @param {string} [prefix] A string to prepend this one.\n   * @returns {string} The element as a string.\n   */\n  #getElementAsString(tag, dicomElement, prefix) {\n    // default prefix\n    prefix = prefix || '';\n\n    // get tag anme from dictionary\n    const tagName = tag.getNameFromDictionary();\n\n    let deSize = dicomElement.value.length;\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n\n    // no size for delimitations\n    if (isItemDelimitationItemTag(tag) ||\n      isSequenceDelimitationItemTag(tag)) {\n      deSize = 0;\n    } else if (isOtherVR) {\n      deSize = 1;\n    }\n\n    const isPixSequence = (isPixelDataTag(tag) &&\n      dicomElement.undefinedLength);\n\n    let line = null;\n\n    // (group,element)\n    line = '(';\n    line += tag.getGroup().toLowerCase();\n    line += ',';\n    line += tag.getElement().toLowerCase();\n    line += ') ';\n    // value representation\n    line += dicomElement.vr;\n    // value\n    if (dicomElement.vr !== 'SQ' &&\n      dicomElement.value.length === 1 &&\n      dicomElement.value[0] === '') {\n      line += ' (no value available)';\n      deSize = 0;\n    } else {\n      // simple number display\n      if (dicomElement.vr === 'na') {\n        line += ' ';\n        line += dicomElement.value[0];\n      } else if (isPixSequence) {\n        // pixel sequence\n        line += ' (PixelSequence #=' + deSize + ')';\n      } else if (dicomElement.vr === 'SQ') {\n        line += ' (Sequence with';\n        if (dicomElement.undefinedLength) {\n          line += ' undefined';\n        } else {\n          line += ' explicit';\n        }\n        line += ' length #=';\n        line += dicomElement.value.length;\n        line += ')';\n      } else if (isOtherVR ||\n          dicomElement.vr === 'pi' ||\n          dicomElement.vr === 'UL' ||\n          dicomElement.vr === 'US' ||\n          dicomElement.vr === 'SL' ||\n          dicomElement.vr === 'SS' ||\n          dicomElement.vr === 'FL' ||\n          dicomElement.vr === 'FD' ||\n          dicomElement.vr === 'AT') {\n        // 'O'ther array, limited display length\n        line += ' ';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n      } else {\n        // default\n        line += ' [';\n        line += this.#getElementValueAsString(tag, dicomElement, false);\n        line += ']';\n      }\n    }\n\n    // align #\n    const nSpaces = 55 - line.length;\n    if (nSpaces > 0) {\n      for (let s = 0; s < nSpaces; ++s) {\n        line += ' ';\n      }\n    }\n    line += ' # ';\n    if (dicomElement.vl < 100) {\n      line += ' ';\n    }\n    if (dicomElement.vl < 10) {\n      line += ' ';\n    }\n    line += dicomElement.vl;\n    line += ', ';\n    line += deSize; //dictElement[1];\n    line += ' ';\n    if (tagName !== null) {\n      line += tagName;\n    } else {\n      line += 'Unknown Tag & Data';\n    }\n\n    let message = null;\n\n    // continue for sequence\n    if (dicomElement.vr === 'SQ') {\n      let item = null;\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n        item = dicomElement.value[l];\n        const itemKeys = Object.keys(item);\n        if (itemKeys.length === 0) {\n          continue;\n        }\n\n        // get the item element\n        const itemTag = getItemTag();\n        const itemElement = item['FFFEE000'];\n        message = '(Item with';\n        if (itemElement.undefinedLength) {\n          message += ' undefined';\n        } else {\n          message += ' explicit';\n        }\n        message += ' length #=' + (itemKeys.length - 1) + ')';\n        itemElement.value = [message];\n        itemElement.vr = 'na';\n\n        line += '\\n';\n        line += this.#getElementAsString(itemTag, itemElement, prefix + '  ');\n\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n          const itemTag = getTagFromKey(itemKeys[m]);\n          if (itemKeys[m] !== 'xFFFEE000') {\n            line += '\\n';\n            line += this.#getElementAsString(itemTag, item[itemKeys[m]],\n              prefix + '    ');\n          }\n        }\n\n        message = '(ItemDelimitationItem';\n        if (!itemElement.undefinedLength) {\n          message += ' for re-encoding';\n        }\n        message += ')';\n        const itemDelimTag = getItemDelimitationItemTag();\n        const itemDelimElement = {\n          vr: 'na',\n          vl: '0',\n          value: [message]\n        };\n        line += '\\n';\n        line += this.#getElementAsString(\n          itemDelimTag, itemDelimElement, prefix + '  ');\n\n      }\n\n      message = '(SequenceDelimitationItem';\n      if (!dicomElement.undefinedLength) {\n        message += ' for re-encod.';\n      }\n      message += ')';\n      const sqDelimTag = getSequenceDelimitationItemTag();\n      const sqDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += this.#getElementAsString(sqDelimTag, sqDelimElement, prefix);\n    } else if (isPixSequence) {\n      // pixel sequence\n      let pixItem = null;\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n        pixItem = dicomElement.value[n];\n        line += '\\n';\n        pixItem.vr = 'pi';\n        line += this.#getElementAsString(\n          getPixelDataTag(), pixItem, prefix + '  ');\n      }\n\n      const pixDelimTag = getSequenceDelimitationItemTag();\n      const pixDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: ['(SequenceDelimitationItem)']\n      };\n      line += '\\n';\n      line += this.#getElementAsString(pixDelimTag, pixDelimElement, prefix);\n    }\n\n    return prefix + line;\n  }\n\n  /**\n   * Get a DICOM Element value from a tag name.\n   * Uses the DICOM dictionary.\n   *\n   * @param {string} name The tag name.\n   * @returns {object} The DICOM element value.\n   */\n  getFromName(name) {\n    let value = null;\n    const tag = getTagFromDictionary(name);\n    // check that we are not at the end of the dictionary\n    if (tag !== null) {\n      value = this.getFromKey(tag.getKey());\n    }\n    return value;\n  }\n\n} // class DicomElementsWrapper\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {object} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n      break;\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit === 'undefined') {\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'CT') {\n        unit = 'HU';\n      }\n    }\n  }\n  return unit;\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {object} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dtDate = getDate({value: [dtValue.substring(0, 8)]});\n  const dtTime = dtValue.length >= 9\n    ? getTime({value: [dtValue.substring(8)]}) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Check an input tag.\n *\n * @param {object} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] The expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nfunction checkTag(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n\n/**\n * Do the input elements allow for PET SUV calculation.\n *\n * @param {object} elements The DICOM elements to check.\n * @returns {string} A warning if the elements are not as expected.\n */\nexport function canGetSuvFactor(elements) {\n  let warning = '';\n\n  // RadiopharmaceuticalInformationSequence (type2)\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements['00540016'];\n  warning += checkTag(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0]['00181074'];\n    warning += checkTag(totalDoseEl, totalDoseStr);\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0]['00181075'];\n    warning += checkTag(halfLifeEl, halfLifeStr);\n  }\n  // PatientWeight (type3, kilograms)\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements['00101030'];\n  warning += checkTag(patWeightEl, patientWeightStr);\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements['00280051'];\n  warning += checkTag(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements['00541102'];\n  warning += checkTag(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements['00541001'];\n  warning += checkTag(unitEl, unitTagStr, ['BQML']);\n\n  // series date/time must be before acquisition date/time\n\n  // AcquisitionDate (type3)\n  const acqDateEl = elements['00080022'];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements['00080032'];\n\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year, acqDateObj.monthIndex, acqDateObj.day,\n      acqTimeObj.hours, acqTimeObj.minutes,\n      acqTimeObj.seconds, acqTimeObj.milliseconds\n    );\n\n    // SeriesDate (type1 for PET)\n    const seriesDateEl = elements['00080021'];\n    // SeriesTime (type1 for PET)\n    const seriesTimeEl = elements['00080031'];\n    const seriesDateObj = getDate(seriesDateEl);\n    const seriesTimeObj = getTime(seriesTimeEl);\n    const seriesDate = new Date(\n      seriesDateObj.year, seriesDateObj.monthIndex, seriesDateObj.day,\n      seriesTimeObj.hours, seriesTimeObj.minutes,\n      seriesTimeObj.seconds, seriesTimeObj.milliseconds\n    );\n\n    if (seriesDate > acqDate) {\n      warning += ' Series date/time is after Aquisition date/time';\n    }\n  }\n\n  if (warning.length !== 0) {\n    warning = 'Cannot calculate PET SUV:' + warning;\n  }\n  return warning;\n}\n\n/**\n * Get the PET SUV factor.\n *\n * @see https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf\n * (from https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)#SUV_Calculation )\n * @param {object} elements The DICOM elements.\n * @returns {number} The factor.\n */\nexport function getSuvFactor(elements) {\n\n  // SeriesDate (type1 for PET)\n  const seriesDateEl = elements['00080021'];\n  const seriesDateObj = getDate(seriesDateEl);\n  // SeriesTime (type1 for PET)\n  const seriesTimeEl = elements['00080031'];\n  const seriesTimeObj = getTime(seriesTimeEl);\n\n  // RadiopharmaceuticalInformationSequence (type2)\n  const radioInfoSq = elements['00540016'];\n  if (radioInfoSq.value.length !== 1) {\n    console.warn(\n      'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.');\n  }\n  // RadiopharmaceuticalStartDateTime (type3)\n  const radioStartDateTimeEl = radioInfoSq.value[0]['00181078'];\n  let radioStartDateObj;\n  let radioStartTimeObj;\n  if (typeof radioStartDateTimeEl === 'undefined') {\n    radioStartDateObj = seriesDateObj;\n    // RadiopharmaceuticalStartTime (type3)\n    const radioStartTimeEl = radioInfoSq.value[0]['00181072'];\n    radioStartTimeObj = getTime(radioStartTimeEl);\n  } else {\n    const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n    radioStartDateObj = radioStartDateTime.date;\n    radioStartTimeObj = radioStartDateTime.time;\n  }\n  if (typeof radioStartTimeObj === 'undefined') {\n    radioStartTimeObj = {\n      hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n    };\n  }\n  const radioStart = new Date(\n    radioStartDateObj.year,\n    radioStartDateObj.monthIndex,\n    radioStartDateObj.day,\n    radioStartTimeObj.hours,\n    radioStartTimeObj.minutes,\n    radioStartTimeObj.seconds,\n    radioStartTimeObj.milliseconds\n  );\n\n  // RadionuclideTotalDose (type3, Bq)\n  const totalDoseEl = radioInfoSq.value[0]['00181074'];\n  // RadionuclideHalfLife (type3, seconds)\n  const halfLifeEl = radioInfoSq.value[0]['00181075'];\n  // PatientWeight (type3, kilograms)\n  const patWeightEl = elements['00101030'];\n\n  // Series date/time\n  const scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n  // Date diff is in milliseconds\n  const decaySeconds = (scanStart.getTime() - radioStart.getTime()) / 1000;\n  const decay = Math.pow(2,\n    (-decaySeconds / parseFloat(halfLifeEl.value[0]))\n  );\n  const decayedDose = totalDoseEl.value[0] * decay;\n  // factor is grams / Bq\n  const suvFactor = (patWeightEl.value[0] * 1000) / decayedDose;\n\n  return suvFactor;\n}\n\n/**\n * Get the file list from a DICOMDIR\n *\n * @param {object} data The buffer data of the DICOMDIR\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {Object<string, DataElement>} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\nimport {Image} from './image';\nimport {luts} from './luts';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor,\n  getSuvFactor,\n  canGetSuvFactor\n} from '../dicom/dicomElementsWrapper';\nimport {Vector3D} from '../math/vector';\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {DataElements} dataElements The DICOM data elements.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(dataElements) {\n    // will throw if columns or rows is not defined\n    getImage2DSize(dataElements);\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dataElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // frames\n    const frames = dataElements['00280008'];\n    if (frames) {\n      sizeValues.push(frames.value[0]);\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dataElements);\n\n    // TransferSyntaxUID\n    const syntax = dataElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dataElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // slice orientation (cosines are matrices' columns)\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n    const imageOrientationPatient = dataElements['00200037'];\n    let orientationMatrix;\n    if (typeof imageOrientationPatient !== 'undefined') {\n      const rowCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[0]),\n        parseFloat(imageOrientationPatient.value[1]),\n        parseFloat(imageOrientationPatient.value[2]));\n      const colCosines = new Vector3D(\n        parseFloat(imageOrientationPatient.value[3]),\n        parseFloat(imageOrientationPatient.value[4]),\n        parseFloat(imageOrientationPatient.value[5]));\n      const normal = rowCosines.crossProduct(colCosines);\n      /* eslint-disable array-element-newline */\n      orientationMatrix = new Matrix33([\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n      ]);\n      /* eslint-enable array-element-newline */\n    }\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dataElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dataElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dataElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dataElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dataElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dataElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dataElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n\n    // Modality\n    const modality = dataElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n\n    // PET SUV\n    let isPetWithSuv = false;\n    if (typeof meta.Modality !== 'undefined' &&\n      meta.Modality === 'PT') {\n      const warn = canGetSuvFactor(dataElements);\n      if (warn.length === 0) {\n        isPetWithSuv = true;\n      } else {\n        logger.warn(warn);\n      }\n    }\n    let intensityFactor = 1;\n    if (isPetWithSuv) {\n      intensityFactor = getSuvFactor(dataElements);\n      logger.info('Applying PET SUV calibration: ' + intensityFactor);\n      slope *= intensityFactor;\n      intercept *= intensityFactor;\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    const sopClassUID = dataElements['00080016'];\n    if (typeof sopClassUID !== 'undefined') {\n      meta.SOPClassUID = sopClassUID.value[0];\n    }\n    const studyUID = dataElements['0020000D'];\n    if (typeof studyUID !== 'undefined') {\n      meta.StudyInstanceUID = studyUID.value[0];\n    }\n    const seriesUID = dataElements['0020000E'];\n    if (typeof seriesUID !== 'undefined') {\n      meta.SeriesInstanceUID = seriesUID.value[0];\n    }\n    const bits = dataElements['00280101'];\n    if (typeof bits !== 'undefined') {\n      meta.BitsStored = bits.value[0];\n    }\n    const pixelRep = dataElements['00280103'];\n    if (typeof pixelRep !== 'undefined') {\n      meta.PixelRepresentation = pixelRep.value[0];\n    }\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    if (isPetWithSuv) {\n      meta.pixelUnit = 'SUV';\n    } else {\n      const pixelUnit = getPixelUnit(dataElements);\n      if (typeof pixelUnit !== 'undefined') {\n        meta.pixelUnit = pixelUnit;\n      }\n    }\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dataElements['00200052'];\n    if (typeof frameOfReferenceUID !== 'undefined') {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dataElements['00281050'];\n    const windowWidth = dataElements['00281051'];\n    const windowCWExplanation = dataElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        let width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          width *= intensityFactor;\n          if (width < 1) {\n            width = 1;\n          }\n          windowPresets[name] = {\n            wl: [new WindowCenterAndWidth(\n              center * intensityFactor,\n              width\n            )],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      // Red Palette Color Lookup Table Data\n      const redLutElement = dataElements['00281201'];\n      // Green Palette Color Lookup Table Data\n      const greenLutElement = dataElements['00281202'];\n      // Blue Palette Color Lookup Table Data\n      const blueLutElement = dataElements['00281203'];\n      let redLut;\n      let greenLut;\n      let blueLut;\n      // check red palette descriptor (should all be equal)\n      // Red Palette Color Lookup Table Descriptor\n      // 0: number of entries in the lookup table\n      // 1: first input value mapped\n      // 2: number of bits for each entry in the Lookup Table Data (8 or 16)\n      const descriptor = dataElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n        descriptor.value.length === 3) {\n        if (descriptor.value[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor.value[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          // TODO vl is undefined, find info elsewhere...\n          const vlSize = redLutElement.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dataElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLutElement.value.map(scaleTo8);\n            greenLut = greenLutElement.value.map(scaleTo8);\n            blueLut = blueLutElement.value.map(scaleTo8);\n          }\n        } else if (descriptor.value[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLutElement.value.slice(0);\n          // @ts-expect-error\n          redLut = Array.from(new Uint8Array(clone.buffer));\n          clone = greenLutElement.value.slice(0);\n          // @ts-expect-error\n          greenLut = Array.from(new Uint8Array(clone.buffer));\n          clone = blueLutElement.value.slice(0);\n          // @ts-expect-error\n          blueLut = Array.from(new Uint8Array(clone.buffer));\n        }\n      }\n      // set the palette\n      luts['palette'] = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dataElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","import {getImage2DSize} from '../dicom/dicomElementsWrapper';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\nimport {Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab\n} from '../utils/colour';\nimport {Size} from './size';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(dataElements, tagDefinition) {\n  const element = dataElements[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: 'x00020010',\n    type: '1',\n    enum: ['1.2.840.10008.1.2.1']\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: 'x00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: 'x00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: 'x00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: 'x00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: 'x00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: 'x00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: 'x00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: 'x00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: 'x00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: 'x00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: 'x00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nfunction getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nfunction getDimensionOrganization(dataElements) {\n  // Dimension Organization Sequence (required)\n  const orgSq = dataElements['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = dataElements['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {object} A code object.\n */\nfunction getCode(dataElements) {\n  // meaning -> CodeMeaning (type1)\n  const code = {\n    meaning: dataElements['00080104'].value[0]\n  };\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (dataElements['00080100']) {\n    code.value = dataElements['00080100'].value[0];\n  } else if (dataElements['00080119']) {\n    code.longValue = dataElements['00080119'].value[0];\n  } else if (dataElements['00080120']) {\n    code.urnValue = dataElements['00080120'].value[0];\n  } else {\n    throw Error('Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (dataElements['00080102']) {\n      code.schemeDesignator = dataElements['00080102'].value[0];\n    } else {\n      throw Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {object} A segment object.\n */\nfunction getSegment(dataElements) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = {\n    number: dataElements['00620004'].value[0],\n    label: dataElements['00620005'].value[0],\n    algorithmType: dataElements['00620008'].value[0]\n  };\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (dataElements['00620009']) {\n    segment.algorithmName = dataElements['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof dataElements['0062000C'] !== 'undefined') {\n    segment.displayValue = dataElements['006200C'].value;\n  } else if (typeof dataElements['0062000D'] !== 'undefined') {\n    const cielabElement = dataElements['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof dataElements['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(dataElements['00620003'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof dataElements['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(dataElements['0062000F'].value[0]);\n  } else {\n    throw Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof dataElements['00620020'] !== 'undefined') {\n    segment.trackingId = dataElements['00620020'].value[0];\n    segment.trackingUid = dataElements['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {object} seg1 The first segment.\n * @param {object} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // rgb\n  if (typeof seg1.displayValue.r !== 'undefined') {\n    if (typeof seg2.displayValue.r === 'undefined') {\n      isSimilar = false;\n    } else {\n      isSimilar = isSimilar ||\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\n    }\n  } else {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Spacing} A spacing object.\n */\nfunction getSpacingFromMeasure(dataElements) {\n  // Pixel Spacing\n  if (typeof dataElements['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = dataElements['00280030'];\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[0]),\n    parseFloat(pixelSpacing.value[1])\n  ];\n  // Slice Thickness\n  if (typeof dataElements['00180050'] !== 'undefined') {\n    spacingValues.push(parseFloat(dataElements['00180050'].value[0]));\n  } else if (typeof dataElements['00180088'] !== 'undefined') {\n    // Spacing Between Slices\n    spacingValues.push(parseFloat(dataElements['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {object} A frame information object.\n */\nfunction getSegmentFrameInfo(dataElements) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof dataElements['00089124'] !== 'undefined') {\n    const derivationImageSq = dataElements['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push(sourceImages);\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = dataElements['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = dataElements['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = segmentIdSq[0]['0062000B'].value[0];\n  // Plane Position Sequence (required, only one)\n  const planePosSq = dataElements['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = {\n    dimIndex: dimIndex,\n    imagePosPat: imagePosPat,\n    derivationImages: derivationImages,\n    refSegmentNumber: refSegmentNumber\n  };\n  // Plane Orientation Sequence\n  if (typeof dataElements['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = dataElements['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof dataElements['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = dataElements['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /*\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {object} _dicomElements The DICOM tags.\n   * @returns {object|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dataElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dataElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dataElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dataElements);\n\n    // Segment Sequence\n    const segSequence = dataElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayValue.r !== 'undefined' &&\n        typeof segment.displayValue.g !== 'undefined' &&\n        typeof segment.displayValue.b !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dataElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dataElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // use calculated spacing\n    let newSpacing = spacing;\n    const geoSliceSpacing = getSliceGeometrySpacing(\n      frameOrigins, orientationMatrix, false);\n    const spacingValues = spacing.getValues();\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      geoSliceSpacing !== spacingValues[2]) {\n      spacingValues[2] = geoSliceSpacing;\n      newSpacing = new Spacing(spacingValues);\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isNotSmall = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isNotSmall(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, newSpacing, orientationMatrix);\n    const uids = [0];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m);\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      const pixelValue = frameSegment.displayValue;\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = pixelValue.r;\n            buffer[offset + 1] = pixelValue.g;\n            buffer[offset + 2] = pixelValue.b;\n          } else {\n            buffer[offset] = pixelValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    // Study\n    meta.StudyDate = dataElements['00080020'].value[0];\n    meta.StudyTime = dataElements['00080030'].value[0];\n    meta.StudyInstanceUID = dataElements['0020000D'].value[0];\n    meta.StudyID = dataElements['00200010'].value[0];\n    // Series\n    meta.SeriesInstanceUID = dataElements['0020000E'].value[0];\n    meta.SeriesNumber = dataElements['00200011'].value[0];\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = dataElements['00080090'].value[0];\n    // patient info\n    meta.PatientName = dataElements['00100010'].value[0];\n    meta.PatientID = dataElements['00100020'].value[0];\n    meta.PatientBirthDate = dataElements['00100030'].value[0];\n    meta.PatientSex = dataElements['00100040'].value[0];\n    // Enhanced General Equipment Module\n    meta.Manufacturer = dataElements['00080070'].value[0];\n    meta.ManufacturerModelName = dataElements['00081090'].value[0];\n    meta.DeviceSerialNumber = dataElements['00181000'].value[0];\n    meta.SoftwareVersions = dataElements['00181020'].value[0];\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dataElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dataElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dataElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {object} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {Array}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\n   *   1:RRR...GGG...BBB...).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {object}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {object}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {Array} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(this.#rsi);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {object} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {object} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|object} value The value to check.\n   * @returns {Array} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    if (this.#numberOfComponents === 1) {\n      value = [value];\n    } else if (this.#numberOfComponents === 3 &&\n      typeof value.r !== 'undefined') {\n      value = [value.r, value.g, value.b];\n    }\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== value[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {Array} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this.#dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this.#rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {object} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {object} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsets List of offsets where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsets(offsets, value) {\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      this.#buffer[offset] = value.r;\n      this.#buffer[offset + 1] = value.g;\n      this.#buffer[offset + 2] = value.b;\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagechange\n    this.#fireEvent({type: 'imagechange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {Array} offsetsLists List of offset lists where to set the data.\n   * @param {object|Array} value The value to set at the given offsets.\n   * @fires Image#imagechange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (typeof value !== 'undefined' &&\n        typeof value.r !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      } else {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagechange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagechange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {View} from './view';\nimport {luts} from './luts';\nimport {\n  WindowCenterAndWidth,\n  defaultPresets\n} from './windowCenterAndWidth';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dataElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setColourMap('invPlain');\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      if (typeof luts['palette'] !== 'undefined') {\n        view.setColourMap('palette');\n      } else {\n        logger.warn('Cannot find Palette lut');\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowCenterAndWidth(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {RescaleLut} from './rescaleLut';\nimport {WindowLut} from './windowLut';\nimport {luts} from './luts';\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ColourMap} from './luts';\nimport {Matrix33} from '../math/matrix';\nimport {\n  Point,\n  Point3D\n} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {string[]}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourmapchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {object} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {object}\n   */\n  #windowLut;\n\n  /**\n   * Flag for image constant RSI.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {object}\n   */\n  #currentWl = null;\n\n  /**\n   * Colour map name.\n   *\n   * @type {string}\n   */\n  #colourMapName = 'plain';\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {Matrix33}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to 0.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {*} _value The pixel value. Can be a number for monochrome\n   *  data or an array for RGB data.\n   * @param {number} _index The index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  getCurrentWindowLut() {\n    // get the current window level\n    let wl;\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      const currentIndex = this.getCurrentIndex();\n      // get the preset for this slice\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\n    }\n    // regular case\n    if (typeof wl === 'undefined') {\n      // if no current, use first id\n      if (!this.#currentWl) {\n        this.setWindowLevelPresetById(0, true);\n      }\n      wl = this.#currentWl;\n    }\n\n    // get the window lut\n    if (typeof this.#isConstantRSI === 'undefined' ||\n      this.#image.isConstantRSI() !== this.#isConstantRSI) {\n      this.#isConstantRSI = this.#image.isConstantRSI();\n      // set or update windowLut if isConstantRSI has changed\n      // (can be different at first slice and after having loaded\n      //  the full volume...)\n      let rsi;\n      let isDiscrete;\n      if (this.#isConstantRSI) {\n        rsi = this.#image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const rescaleLut = new RescaleLut(\n        rsi,\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      this.#windowLut = new WindowLut(\n        rescaleLut,\n        this.#image.getMeta().IsSigned,\n        isDiscrete);\n    }\n\n    // update lut window level if not present or different from previous\n    const lutWl = this.#windowLut.getWindowLevel();\n    if (typeof lutWl === 'undefined' || !wl.equals(lutWl)) {\n      // set lut window level\n      this.#windowLut.setWindowLevel(wl);\n      // fire change event\n      if (typeof lutWl === 'undefined' ||\n        lutWl.getWidth() !== wl.getWidth() ||\n        lutWl.getCenter() !== wl.getCenter()) {\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [wl.getCenter(), wl.getWidth()],\n          wc: wl.getCenter(),\n          ww: wl.getWidth(),\n          skipGenerate: true\n        });\n      }\n    }\n\n    // return\n    return this.#windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {object} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n          this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#colourMapName;\n  }\n\n  /**\n   * Get the colour map object.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  #getColourMapLut() {\n    return luts[this.#colourMapName];\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {string} name The colour map name.\n   * @fires View#colourmapchange\n   */\n  setColourMap(name) {\n    // check if we have it\n    if (!luts[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n\n    this.#colourMapName = name;\n\n    /**\n     * Color change event.\n     *\n     * @event View#colourmapchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'colourmapchange',\n      value: [name]\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {Array} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(center, width, name, silent) {\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\n    if (width < 1) {\n      return;\n    }\n\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // new window level\n    const newWl = new WindowCenterAndWidth(center, width);\n\n    // check if new\n    const isNew = !newWl.equals(this.#currentWl);\n\n    // compare to previous if present\n    if (isNew) {\n      const isNewWidth = this.#currentWl\n        ? this.#currentWl.getWidth() !== width : true;\n      const isNewCenter = this.#currentWl\n        ? this.#currentWl.getCenter() !== center : true;\n      // assign\n      this.#currentWl = newWl;\n      this.#currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this.#windowPresets[name] !== 'undefined') {\n          this.#windowPresets[name].wl[0] = newWl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [newWl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      if (isNewWidth || isNewCenter) {\n        /**\n         * Window/level change event.\n         *\n         * @event View#wlchange\n         * @type {object}\n         * @property {Array} value The changed value.\n         * @property {number} wc The new window center value.\n         * @property {number} ww The new window wdth value.\n         * @property {boolean} skipGenerate Flag to skip view generation.\n         */\n        this.#fireEvent({\n          type: 'wlchange',\n          value: [center, width],\n          wc: center,\n          ww: width,\n          skipGenerate: silent\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(\n      wl.getCenter(), wl.getWidth(), name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowCenterAndWidth} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowCenterAndWidth(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.getCurrentWindowLut(),\n        this.#getColourMapLut()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getColourMapLut(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    const newIndex = index.add(incr);\n    return this.setCurrentIndex(newIndex, silent);\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.decrementIndex(this.getScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} silent Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.incrementIndex(this.getScrollIndex(), silent);\n  }\n\n} // class View\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLut} from './windowLut';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {WindowLut} windowLut The window/level LUT.\n * @param {ColourMap} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {ColourMap} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {object} offset3D The 3D offset as {x,y,z}.\n   * @returns {object} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {object} values Values as {x,y,z}.\n   * @returns {object} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {object} offset The previous offset as {x,y}.\n * @param {object} scale The previous scale as {x,y}.\n * @param {object} newScale The new scale as {x,y}.\n * @param {object} center The scale center as {x,y}.\n * @returns {object} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * Display position: {x,y}\n * Plane position: Index (access: get(i))\n * (world) Position: Point3D (access: getX, getY, getZ)\n *\n * Display -> World:\n * planePos = viewLayer.displayToPlanePos(displayPos)\n * -> compensate for layer scale and offset\n * pos = viewController.getPositionFromPlanePoint(planePos)\n *\n * World -> display\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\n * no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  // jsdoc does not like\n  // @type {(ViewLayer|DrawLayer)[]}\n\n  /**\n   * List of layers.\n   *\n   * @type {Array<ViewLayer|DrawLayer>}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y}.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y}.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = undefined;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = undefined;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layers\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.setImageSmoothing(flag);\n      }\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale\n   *\n   * @returns {object} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined') {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the number of view layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfViewLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined' &&\n        item instanceof ViewLayer) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getActiveViewLayer() {\n    let layer;\n    if (typeof this.#activeViewLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeViewLayerIndex];\n      if (tmpLayer instanceof ViewLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active view layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        if (layer.getViewController().equalImageMeta(meta)) {\n          res.push(layer);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {Array} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        res.push(layer.getDataId());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getActiveDrawLayer() {\n    let layer;\n    if (typeof this.#activeDrawLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeDrawLayerIndex];\n      if (tmpLayer instanceof DrawLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active draw layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof DrawLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    if (this.#layers[index] instanceof ViewLayer) {\n      this.#activeViewLayerIndex = index;\n      /**\n       * Active view layer change event.\n       *\n       * @event LayerGroup#activeviewlayerchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       */\n      this.#fireEvent({\n        type: 'activelayerchange',\n        value: [this.#layers[index]]\n      });\n    } else {\n      logger.warn('No view layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active view layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveViewLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveViewLayer(index);\n    } else {\n      logger.warn('No view layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    if (this.#layers[index] instanceof DrawLayer) {\n      this.#activeDrawLayerIndex = index;\n      this.#fireEvent({\n        type: 'activelayerchange',\n        value: [this.#layers[index]]\n      });\n    } else {\n      logger.warn('No draw layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active draw layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveDrawLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveDrawLayer(index);\n    } else {\n      logger.warn('No draw layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    layer.setImageSmoothing(this.#imageSmoothing);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.addEventListener(eventName, this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  #unbindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.removeEventListener(eventName, this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.removeEventListener('renderstart', this.#fireEvent);\n    viewLayer.removeEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  #unbindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.removeEventListener('drawcreate', this.#fireEvent);\n    drawLayer.removeEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = undefined;\n    this.#activeDrawLayerIndex = undefined;\n    // remove possible crosshair\n    this.#removeCrosshairDiv();\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   * Warning: if current active layer, the index will\n   *   be set to `undefined`. Call one of the setActive\n   *   methods to define the active index.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this.#layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer to remove');\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this.#unbindViewLayer(layer);\n      if (this.#activeViewLayerIndex === index) {\n        this.#activeViewLayerIndex = undefined;\n      }\n    } else {\n      this.#unbindDrawLayer(layer);\n      if (this.#activeDrawLayerIndex === index) {\n        this.#activeDrawLayerIndex = undefined;\n      }\n    }\n    // reset in storage\n    this.#layers[index] = undefined;\n    // update html\n    const layerDiv = document.getElementById(layer.getId());\n    if (layerDiv) {\n      layerDiv.remove();\n    }\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer to show crosshair');\n      return;\n    }\n\n    const vc = baseLayer.getViewController();\n    const p2D = vc.getPlanePositionFromPosition(position);\n    const displayPos = baseLayer.planePosToDisplay(p2D.x, p2D.y);\n\n    if (typeof displayPos.y !== 'undefined') {\n      const lineH = document.createElement('hr');\n      lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n      lineH.className = 'horizontal';\n      lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n      lineH.style.left = '0px';\n      lineH.style.top = displayPos.y + 'px';\n      this.#containerDiv.appendChild(lineH);\n    }\n\n    if (typeof displayPos.x !== 'undefined') {\n      const lineV = document.createElement('hr');\n      lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n      lineV.className = 'vertical';\n      lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n      lineV.style.left = (displayPos.x) + 'px';\n      lineV.style.top = '0px';\n      this.#containerDiv.appendChild(lineV);\n    }\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    let div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-horizontal');\n    if (div) {\n      div.remove();\n    }\n    div = document.getElementById(\n      this.getDivId() + '-scroll-crosshair-vertical');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   * @function\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0;\n    let baseViewLayerOrigin;\n    let scrollOffset;\n    let planeOffset;\n    // update position for all layers except the source one\n    for (const layer of this.#layers) {\n      if (typeof layer === 'undefined') {\n        continue;\n      }\n\n      // update base offset (does not trigger redraw)\n      let hasSetOffset = false;\n      if (layer instanceof ViewLayer) {\n        const vc = layer.getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (typeof baseViewLayerOrigin === 'undefined') {\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n          const zeroOffset = new Vector3D(0, 0, 0);\n          hasSetOffset =\n            layer.setBaseOffset(zeroOffset, zeroOffset);\n        } else {\n          if (vc.canSetPosition(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n          }\n        }\n      }\n      // also set for draw layers\n      // (should be next after a view layer)\n      if (typeof scrollOffset !== 'undefined' &&\n        typeof planeOffset !== 'undefined') {\n        hasSetOffset =\n          layer.setBaseOffset(scrollOffset, planeOffset);\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (layer.getId() !== event.srclayerid) {\n        hasSetPos = layer.setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        layer.draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the fit scale: the scale that fits the largest data.\n   *\n   * @returns {number|undefined} The fit scale.\n   */\n  calculateFitScale() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max size\n    const maxSize = this.getMaxSize();\n    if (typeof maxSize === 'undefined') {\n      return undefined;\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxSize.x,\n      this.#containerDiv.offsetHeight / maxSize.y\n    );\n  }\n\n  /**\n   * Set the layer group fit scale.\n   *\n   * @param {number} scaleIn The fit scale.\n   */\n  setFitScale(scaleIn) {\n    // get maximum size\n    const maxSize = this.getMaxSize();\n    // exit if none\n    if (typeof maxSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\n    };\n\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.fitToContainer(scaleIn, containerSize, fitOffset);\n      }\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data size.\n   *\n   * @returns {object|undefined} The largest size as {x,y}.\n   */\n  getMaxSize() {\n    let maxSize = {x: 0, y: 0};\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        const size = layer.getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {object} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setScale(this.#scale, center);\n      }\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {object} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {object} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setOffset(this.#offset);\n      }\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.draw();\n      }\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.display(flag);\n      }\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper.\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {Array}\n   */\n  #segments;\n\n  /**\n   * List of ids of hidden segments.\n   *\n   * @type {Array}\n   */\n  #hiddenSegments = [];\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    this.#segments = mask.getMeta().custom.segments;\n  }\n\n  /**\n   * Check if a segment is part of the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {Array} numbers Array of segment numbers.\n   * @returns {Array} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        values.push(segment.displayValue);\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {object} The segment.\n   */\n  getSegment(segmentNumber) {\n    return this.#segments.find(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Get the inner segment list.\n   *\n   * @returns {Array} The list of segments.\n   */\n  getSegments() {\n    return this.#segments;\n  }\n\n  /**\n   * Set the inner segment list.\n   *\n   * @param {Array} list The segment list.\n   */\n  setSegments(list) {\n    this.#segments = list;\n  }\n\n  /**\n   * Set the hidden segment list.\n   * TODO: not sure if needed...\n   *\n   * @param {Array} list The list of hidden segment numbers.\n   */\n  setHiddenSegments(list) {\n    this.#hiddenSegments = list;\n  }\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number|undefined} The index in the array.\n   */\n  #getHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#getHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenSegments.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Segment is allready in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#getHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\n      const segment = this.getSegment(this.#hiddenSegments[i]);\n      if (typeof segment !== 'undefined') {\n        hiddenColours.push(segment.displayValue);\n      }\n    }\n\n    // create alpha function\n    return function (value/*, index*/) {\n      for (let i = 0; i < hiddenColours.length; ++i) {\n        if (value[0] === hiddenColours[i].r &&\n          value[1] === hiddenColours[i].g &&\n          value[2] === hiddenColours[i].b) {\n          return 0;\n        }\n      }\n      // default\n      return 255;\n    };\n  }\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {eventFn} cmdCallback The command event callback.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\n    const delcmd = new DeleteSegmentCommand(\n      this.#mask, this.getSegment(segmentNumber));\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    if (delcmd.isValid()) {\n      delcmd.execute();\n      // callback\n      exeCallback(delcmd);\n      // possibly hidden\n      if (this.isHidden(segmentNumber)) {\n        this.removeFromHidden(segmentNumber);\n      }\n    }\n  }\n\n} // class MaskSegmentHelper\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {object}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {Array}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {object} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    this.#offsets = mask.getOffsets(segment.displayValue);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {ColourMap} from '../image/luts';\nimport {Point, Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Mask segment helper.\n   *\n   * @type {MaskSegmentHelper}\n   */\n  #maskSegmentHelper;\n\n  /**\n   * Colour map name.\n   * Defaults to 'plain' as defined in Views' default.\n   *\n   * #type {string}\n   */\n  #colourMapName = 'plain';\n\n  /**\n   * Third dimension player ID (created by setInterval).\n   *\n   * @type {number|undefined}\n   */\n  #playerID;\n\n  /**\n   * @param {View} view The associated view.\n   * @param {string} dataId The associated data id.\n   */\n  constructor(view, dataId) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n    this.#dataId = dataId;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#maskSegmentHelper =\n        new MaskSegmentHelper(view.getImage());\n    }\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {object} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return typeof this.#maskSegmentHelper !== 'undefined';\n  }\n\n  /**\n   * Get the mask segment helper.\n   *\n   * @returns {object} The helper.\n   */\n  getMaskSegmentHelper() {\n    return this.#maskSegmentHelper;\n  }\n\n  /**\n   * Apply the hidden segments list by setting\n   * the corresponding alpha function.\n   */\n  applyHiddenSegments() {\n    if (this.isMask) {\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\n    }\n  }\n\n  /**\n   * Delete a segment.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @param {Function} exeCallback The post execution callback.\n   */\n  deleteSegment(segmentNumber, exeCallback) {\n    if (this.isMask) {\n      this.#maskSegmentHelper.deleteSegment(\n        segmentNumber, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this.#view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {Array} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (typeof this.#playerID !== 'undefined');\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Opitonal position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   * @param {string} dataId The data id of the image.\n   */\n  setImage(img, dataId) {\n    this.#view.setImage(img);\n    this.#dataId = dataId;\n  }\n\n  /**\n   * Get the current view (2D) spacing.\n   *\n   * @returns {Array} The spacing as a 2D array.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing(\n      this.#view.getOrientation());\n    return [spacing.get(0), spacing.get(1)];\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position the input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let position = this.getCurrentIndex();\n    let rescaled = true;\n\n    // created oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      // generate slice values\n      const sliceIter = getSliceIterator(\n        image,\n        position,\n        rescaled,\n        orientation\n      );\n      const sliceValues = getIteratorValues(sliceIter);\n      // oriented geometry\n      const orientedSize = image.getGeometry().getSize(orientation);\n      const sizeValues = orientedSize.getValues();\n      sizeValues[2] = 1;\n      const sliceSize = new Size(sizeValues);\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\n      const spacingValues = orientedSpacing.getValues();\n      spacingValues[2] = 1;\n      const sliceSpacing = new Spacing(spacingValues);\n      const sliceOrigin = new Point3D(0, 0, 0);\n      const sliceGeometry =\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n      // slice image\n      // @ts-ignore\n      image = new Image(sliceGeometry, sliceValues);\n      // update position\n      position = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, position, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {Array} regions A list of regions.\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    const iter = getVariableRegionSliceIterator(\n      this.#view.getImage(),\n      this.getCurrentIndex(),\n      true, regions\n    );\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canWindowLevel() {\n    return this.#view.getImage().canWindowLevel();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check is the provided position can be set.\n   *\n   * @param {Point} position The position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  canSetPosition(position) {\n    return this.#view.canSetPosition(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a position from a 2D (x,y) position.\n   *\n   * @param {number} x The column position.\n   * @param {number} y The row position.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(x, y) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(x, y, k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D (x,y) position from a position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {object} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return {\n      x: planePoint.getX(),\n      y: planePoint.getY(),\n    };\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {object} point2D The 2D position as {x,y}.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {object} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.#view.incrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.#view.decrementIndex(dim, silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.#view.decrementScrollIndex(silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.#view.incrementScrollIndex(silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (this.#playerID === null) {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = window.setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (typeof this.#playerID !== 'undefined') {\n      clearInterval(this.#playerID);\n      this.#playerID = undefined;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {object} The window center and width.\n   */\n  getWindowLevel() {\n    return {\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\n    };\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window/level.\n   *\n   * @param {number} wc The window center.\n   * @param {number} ww The window width.\n   */\n  setWindowLevel(wc, ww) {\n    this.#view.setWindowLevel(wc, ww);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    this.#view.setColourMap(name);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {object} value The pixel value.\n   * @param {object} index The values' index.\n   * @returns {number} The value to display.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class ViewController\n","import {logger} from '../utils/logger';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get a HTML element associated to a container div.\n *\n * @param {string} containerDivId The id of the container div.\n * @param {string} name The name or id to find.\n * @returns {object} The found element or null.\n * @deprecated\n */\nexport function getElement(containerDivId, name) {\n  // get by class in the container div\n  const parent = document.getElementById(containerDivId);\n  if (!parent) {\n    return null;\n  }\n  const elements = parent.getElementsByClassName(name);\n  // getting the last element since some libraries (ie jquery-mobile) create\n  // span in front of regular tags (such as select)...\n  let element = elements[elements.length - 1];\n  // if not found get by id with 'containerDivId-className'\n  if (typeof element === 'undefined') {\n    element = document.getElementById(containerDivId + '-' + name);\n  }\n  return element;\n}\n\n/**\n * Overridalbe custom UI object for client defined UI.\n */\nexport const customUI = {\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {object} data The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog(data, callback) {\n    const textExpr = prompt('Label', data.textExpr);\n    if (textExpr !== null) {\n      data.textExpr = textExpr;\n      callback(data);\n    }\n  }\n};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Array} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push({\n      x: touches[i].pageX - offsetLeft,\n      y: touches[i].pageY - offsetTop\n    });\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Array} The array of offsets.\n */\nexport function getEventOffset(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  } else {\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\n    // between that event and the padding edge of the target node\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\n    positions.push({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n  }\n  return positions;\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * @see https://github.com/ivmartel/dwv/issues/902\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {object}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {object}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {object}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {object}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The data id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {string} dataId The associated data id.\n   */\n  setView(view, dataId) {\n    this.#dataId = dataId;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourmapchange', this.#onColourMapChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view, dataId);\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataId === event.dataid) {\n      this.#viewController.setImage(event.value[0], this.#dataId);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagechange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {object} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n    this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to an index.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {Index} The equivalent index.\n   */\n  displayToPlaneIndex(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return new Index([\n      Math.floor(planePos.x),\n      Math.floor(planePos.y)\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The de-scaled position as {x,y}.\n   */\n  displayToPlaneScale(x, y) {\n    return {\n      x: x / this.#scale.x,\n      y: y / this.#scale.y\n    };\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The plane position as {x,y}.\n   */\n  displayToPlanePos(x, y) {\n    const deScaled = this.displayToPlaneScale(x, y);\n    return {\n      x: deScaled.x + this.#offset.x,\n      y: deScaled.y + this.#offset.y\n    };\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The display position as {x,y}, can be individually\n   *   undefined if out of bounds.\n   */\n  planePosToDisplay(x, y) {\n    let posX = (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x;\n    let posY = (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y;\n    // check if in bounds\n    if (posX < 0 || posX >= this.#canvas.width) {\n      posX = undefined;\n    }\n    if (posY < 0 || posY >= this.#canvas.height) {\n      posY = undefined;\n    }\n    return {x: posX, y: posY};\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {number} x The X position.\n   * @param {number} y The Y position.\n   * @returns {object} The main plane position as {x,y}.\n   */\n  displayToMainPlanePos(x, y) {\n    const planePos = this.displayToPlanePos(x, y);\n    return {\n      x: planePos.x - this.#baseOffset.x,\n      y: planePos.y - this.#baseOffset.y\n    };\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothing;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {object} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    let needsDraw = false;\n\n    // update canvas size if needed (triggers canvas reset)\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\n      }\n      // canvas size  change triggers canvas reset\n      this.#canvas.width = fitSize.x;\n      this.#canvas.height = fitSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n    // previous fit scale\n    const previousFitScale = this.#fitScale;\n    // previous scale without fit\n    const previousScale = {\n      x: this.#scale.x / this.#fitScale.x,\n      y: this.#scale.y / this.#fitScale.y\n    };\n    // fit scale\n    const newFitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // scale\n    const newScale = {\n      x: previousScale.x * newFitScale.x,\n      y: previousScale.y * newFitScale.y\n    };\n    // check if different\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x * previousFitScale.x / newFitScale.x,\n      y: this.#flipOffset.y * previousFitScale.y / newFitScale.y\n    };\n    // check if different\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update global offset\n      this.#offset = {\n        x: this.#viewOffset.x +\n          this.#baseOffset.x +\n          this.#zoomOffset.x +\n          this.#flipOffset.x,\n        y: this.#viewOffset.y +\n          this.#baseOffset.y +\n          this.#zoomOffset.y +\n          this.#flipOffset.y\n      };\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(\n        names[i], this.#fireEvent, {passive: true});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourMapChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {getShadowColour} from '../utils/colour';\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {object}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {object}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {object}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {number} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {object} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {number} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {object} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {object} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {Konva.Shape} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {string} id The id of the created draw.\n       * @property {string} dataid The associated data id.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id(),\n        dataid: this.#layer.getDataId()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {object}\n   */\n  #translation;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {DrawLayer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {string} id The id of the create draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {DrawLayer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {Konva.Container}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from '../math/index';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Konva.\n *\n * @external Konva\n * @see https://konvajs.org/\n */\nimport Konva from 'konva';\n\n/**\n * Draw meta data.\n */\nexport class DrawMeta {\n  /**\n   * Draw quantification.\n   *\n   * @type {object}\n   */\n  quantification;\n\n  /**\n   * Draw text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string}\n   */\n  textExpr;\n}\n\n/**\n * Draw details.\n */\nexport class DrawDetails {\n  /**\n   * The draw ID.\n   *\n   * @type {number}\n   */\n  id;\n\n  /**\n   * The draw position: an Index converted to string.\n   *\n   * @type {string}\n   */\n  position;\n\n  /**\n   * The draw type.\n   *\n   * @type {string}\n   */\n  type;\n\n  /**\n   * The draw color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string}\n   */\n  color;\n\n  /**\n   * The draw meta.\n   *\n   * @type {DrawMeta}\n   */\n  meta;\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {Konva.Node} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {DrawLayer} drawLayer The draw layer.\n   */\n  constructor(drawLayer) {\n    this.#drawLayer = drawLayer;\n    this.#konvaLayer = drawLayer.getKonvaLayer();\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {Konva.Group|undefined} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup;\n    if (posGroups.length === 1) {\n      if (posGroups[0] instanceof Konva.Group) {\n        posGroup = posGroups[0];\n      }\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {DrawDetails[]} A list of draw details.\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      // @ts-ignore\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      // @ts-ignore\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {DrawDetails[]} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        // @ts-ignore\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup,\n          shape.className,\n          this.#drawLayer\n        );\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {DrawDetails} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    // @ts-ignore\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    // @ts-ignore\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    // @ts-ignore\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {Konva.Group} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group,\n      shapeDisplayName,\n      this.#drawLayer\n    );\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    exeCallback(delcmd);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const groups = this.#konvaLayer.getChildren();\n    while (groups.length) {\n      if (groups[0] instanceof Konva.Group) {\n        this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\n      } else {\n        logger.warn('Found non group in layer while deleting');\n      }\n    }\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {object}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {object}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {object}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {object}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {object}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {object}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {object}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  #drawController = null;\n\n  /**\n   * The plane helper.\n   *\n   * @type {object}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {Konva.Stage} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {Konva.Layer} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {object} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {object} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {object} newScale The scale as {x,y}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ({\n        x: newScale.x * this.#flipScale.x,\n        y: newScale.y * this.#flipScale.y,\n        z: newScale.z * this.#flipScale.z,\n      });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {object} newOffset The offset as {x,y}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context\n   *\n   * @param {object} size The image size as {x,y}.\n   * @param {object} spacing The image spacing as {x,y}.\n   * @param {string} dataId The associated data id.\n   */\n  initialise(size, spacing, dataId) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataId = dataId;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(this);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {number} fitScale1D The 1D fit scale.\n   * @param {object} fitSize The fit size as {x,y}.\n   * @param {object} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\n    // update konva\n    this.#konvaStage.width(fitSize.x);\n    this.#konvaStage.height(fitSize.y);\n\n    // previous scale without fit\n    const previousScale = {\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y / this.#fitScale.y\n    };\n    // update fit scale\n    const previousFitScale = this.#fitScale;\n    this.#fitScale = {\n      x: fitScale1D * this.#baseSpacing.x,\n      y: fitScale1D * this.#baseSpacing.y\n    };\n    // update scale\n    this.#konvaStage.scale({\n      x: previousScale.x * this.#fitScale.x,\n      y: previousScale.y * this.#fitScale.y\n    });\n\n    // update offsets\n    this.#viewOffset = {\n      x: fitOffset.x / this.#fitScale.x,\n      y: fitOffset.y / this.#fitScale.y\n    };\n    this.#flipOffset = {\n      x: this.#flipOffset.x * previousFitScale.x / this.#fitScale.x,\n      y: this.#flipOffset.y * previousFitScale.y / this.#fitScale.y\n    };\n\n    this.#konvaStage.offset({\n      x: this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toggleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {object} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {LayerGroup} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setWindowLevel(event.value[0], event.value[1]);\n      }\n    };\n  };\n}\n\n/**\n * Colour map binder.\n */\nexport class ColourMapBinder {\n  getEventType = function () {\n    return 'colourmapchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setColourMap(event.value[0]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data id\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0 &&\n        layerGroup.getNumberOfViewLayers() > 1) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder,\n  ColourMapBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  /**\n   * Associated layer groups.\n   *\n   * @type {LayerGroup[]}\n   */\n  #layerGroups = [];\n\n  /**\n   * Active layer group index.\n   *\n   * @type {number}\n   */\n  #activeLayerGroupIndex = null;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = null;\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this.#layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup to remove');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this.#layerGroups.splice(index, 1);\n    // update active index\n    if (this.#activeLayerGroupIndex === index) {\n      this.#activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Synchronise the fit scale of the group layers.\n   */\n  syncLayerGroupScale() {\n    let minScale;\n    const hasScale = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const scale = this.#layerGroups[i].calculateFitScale();\n      if (typeof scale !== 'undefined') {\n        hasScale.push(i);\n        if (typeof minScale === 'undefined' || scale < minScale) {\n          minScale = scale;\n        }\n      }\n    }\n    // exit if no scale\n    if (typeof minScale === 'undefined') {\n      return;\n    }\n    // apply min scale to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasScale.includes(j)) {\n        this.#layerGroups[j].setFitScale(minScale);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].setImageSmoothing(flag);\n    }\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021)\n *   - store position as array\n *   - new draw position group key\n * - v0.4 (dwv 0.29.0, 06/2021)\n *   - move drawing details into meta property\n *   - remove scale center and translation, add offset\n * - v0.3 (dwv v0.23.0, 03/2018)\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation\n *   - new details structure: simple array of objects referenced by draw ids\n * - v0.2 (dwv v0.17.0, 12/2016)\n *   - adds draw details: array [nslices][nframes] of detail objects\n * - v0.1 (dwv v0.15.0, 07/2016)\n *   - adds version\n *   - drawings: array [nslices][nframes] with all groups\n * - initial release (dwv v0.10.0, 05/2015), no version number...\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings\n *   - drawings: array [nslices] with all groups\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {App} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': viewController.getWindowLevel().center,\n      'window-width': viewController.getWindowLevel().width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    viewController.setWindowLevel(\n      data['window-center'], data['window-width']);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(app.getDataIds()[0]); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3.\n * v0.2: one layer per slice/frame\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2.\n * v0.1: text on its own\n * v0.2: text as part of label\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3.\n * - v0.2: array [nslices][nframes] with all\n * - v0.3: simple array of objects referenced by draw ids\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4.\n * - v0.3: properties at group root\n * - v0.4: properties in group meta object\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: position as object\n * - v0.5: position as array\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5.\n * - v0.4: draw id as 'slice-0_frame-1'\n * - v0.5: draw id as '#2-0_#3-1''\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: 'base?query#fragment'\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\n * or encoded URI with base and key value/pairs:\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n * be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode.\n *   replaceMode can be:\n *   - key (default): keep the key\n *   - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {Array} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {Array} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // keydown listener\n    window.addEventListener('keydown',\n      this.#getOnMouch('window', 'keydown'), true);\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {LayerGroup} layerGroup The associated layer group.\n   * @param {ViewLayer|DrawLayer} layer The layer to listen to.\n   */\n  bindLayerGroup(layerGroup, layer) {\n    const divId = layerGroup.getDivId();\n    // listen to active layer changes\n    layerGroup.addEventListener(\n      'activelayerchange', this.#getActiveLayerChangeHandler(divId));\n    // bind the layer\n    this.#internalBindLayerGroup(divId, layer);\n  }\n\n  /**\n   * Bind a layer group to this controller.\n   *\n   * @param {string} layerGroupDivId The layer group div id.\n   * @param {ViewLayer|DrawLayer} layer The layer.\n   */\n  #internalBindLayerGroup(layerGroupDivId, layer) {\n    // remove from local list if preset\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    // replace layer in local list\n    this.#boundLayers[layerGroupDivId] = layer;\n    // bind layer\n    this.#bindLayer(layer);\n  }\n\n  /**\n   * Get an active layer change handler.\n   *\n   * @param {string} divId The associated layer group div id.\n   * @returns {Function} The event handler.\n   */\n  #getActiveLayerChangeHandler(divId) {\n    return (event) => {\n      const layer = event.value[0];\n      this.#internalBindLayerGroup(divId, layer);\n    };\n  }\n\n  /**\n   * Add canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to start listening to.\n   */\n  #bindLayer(layer) {\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getOnMouch(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getOnMouch(layerId, eventType) {\n    // augment event with converted offsets\n    const augmentEventOffsets = function (event) {\n      // event offset(s)\n      const offsets = getEventOffset(event);\n      // should have at least one offset\n      event._x = offsets[0].x;\n      event._y = offsets[0].y;\n      // possible second\n      if (offsets.length === 2) {\n        event._x1 = offsets[1].x;\n        event._y1 = offsets[1].y;\n      }\n    };\n\n    const applySelectedTool = (event) => {\n      // make sure we have a tool\n      if (this.#selectedTool) {\n        const func = this.#selectedTool[event.type];\n        if (func) {\n          func(event);\n        }\n      }\n    };\n\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      let callback = null;\n      if (eventType === 'keydown') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else if (eventType === 'touchend') {\n        callback = function (event) {\n          applySelectedTool(event);\n        };\n      } else {\n        // mouse or touch events\n        callback = function (event) {\n          augmentEventOffsets(event);\n          applySelectedTool(event);\n        };\n      }\n      // store callback\n      this.#callbackStore[layerId][eventType] = callback;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {Array}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {object} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for request + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {Array} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\n   *    to the request\n   *  - batchSize: the size of the request url batch\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      this.#addLoadend();\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * @external XMLHttpRequest\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * @external Worker\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * @external JpegImage\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * @external jpeg\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * @external JpxImage\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      index: info.index,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factoryWarnings = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory} The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    // mask factory for DICOM SEG\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n    // default image factory\n    if (typeof factory === 'undefined') {\n      factory = new ImageFactory();\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dataElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#getFactory(dataElements);\n    // create the image\n    try {\n      const image = factory.create(\n        dataElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: dataElements\n        },\n        source: origin,\n        warn: this.#factoryWarnings[index]\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.index,\n      source: origin\n    });\n\n    const dataIndex = event.index;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n\n    this.onloadstart({\n      source: origin,\n      index: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let warning;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      const factory = this.#getFactory(dicomParser.getDicomElements());\n      warning = factory.checkElements(dicomParser.getDicomElements());\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = (algoName !== null);\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\n    this.#factoryWarnings[dataIndex] = warning;\n\n    if (needDecompression) {\n      // gather pixel buffer meta data\n      const bitsAllocated =\n        dicomParser.getDicomElements()['00280100'].value[0];\n      const pixelRepresentation =\n        dicomParser.getDicomElements()['00280103'].value[0];\n      const pixelMeta = {\n        bitsAllocated: bitsAllocated,\n        isSigned: (pixelRepresentation === 1)\n      };\n      const columnsElement = dicomParser.getDicomElements()['00280011'];\n      const rowsElement = dicomParser.getDicomElements()['00280010'];\n      if (typeof columnsElement !== 'undefined' &&\n        typeof rowsElement !== 'undefined') {\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n      }\n      const samplesPerPixelElement =\n        dicomParser.getDicomElements()['00280002'];\n      if (typeof samplesPerPixelElement !== 'undefined') {\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n      }\n      const planarConfigurationElement =\n        dicomParser.getDicomElements()['00280006'];\n      if (typeof planarConfigurationElement !== 'undefined') {\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n      }\n\n      // number of items\n      const numberOfItems = pixelBuffer.length;\n\n      // setup the decoder (one decoder per all converts)\n      if (this.#pixelDecoder === null) {\n        this.#pixelDecoder = new PixelBufferDecoder(\n          algoName, numberOfItems);\n        // callbacks\n        // pixelDecoder.ondecodestart: nothing to do\n        this.#pixelDecoder.ondecodeditem = (event) => {\n          this.#onDecodedItem(event);\n          // send onload and onloadend when all items have been decoded\n          if (event.itemNumber + 1 === event.numberOfItems) {\n            this.onload(event);\n            this.onloadend(event);\n          }\n        };\n        // pixelDecoder.ondecoded: nothing to do\n        // pixelDecoder.ondecodeend: nothing to do\n        this.#pixelDecoder.onerror = this.onerror;\n        this.#pixelDecoder.onabort = this.onabort;\n      }\n\n      // launch decode\n      for (let i = 0; i < numberOfItems; ++i) {\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n          {\n            itemNumber: i,\n            numberOfItems: numberOfItems,\n            index: dataIndex\n          }\n        );\n      }\n    } else {\n      // no decompression\n      // send progress\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: dataIndex,\n        source: origin\n      });\n      // generate image\n      this.#generateImage(dataIndex, origin);\n      // send load events\n      this.onload({\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous)\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if:\n   *  - the url has a 'contentType' and it is 'application/dicom'\n   *    (as in wado urls)\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/dicom'\n      const isDicom = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/dicom') &&\n          element.value[18] !== '+';\n      };\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/dicom')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeader, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/json' or 'application/dicom+json\n      const isJson = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/json') &&\n          startsWith(element.value, 'application/dicom+json');\n      };\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/json')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] The url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      const isMultipart = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'multipart/related');\n      };\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * if abort is triggered, all image.onload callbacks have to be cancelled\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'image/'\n      const isImage = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'image/');\n      };\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n * url example (cors enabled):\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*'));\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'video/'\n      const isVideo = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'video/');\n      };\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * @external JSZip\n * @see https://github.com/Stuk/jszip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback\n   *\n   * @param {ArrayBuffer} content unzipped file image\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   *\n   * @param {object} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // if there are options.requestHeaders, just base check on them\n    if (typeof options !== 'undefined' &&\n      typeof options.requestHeaders !== 'undefined') {\n      // starts with 'application/zip'\n      const isZip = function (element) {\n        return element.name === 'Accept' &&\n          startsWith(element.value, 'application/zip');\n      };\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/zip')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      return this.canLoadFile({name: mem.filename});\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {Array}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {object} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    // x2 to count for reader + load\n    if (this.#nLoadend === 2 * this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {object} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {Array} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * @external FileReader\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      reader.onloadend = this.#addLoadend;\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * load counter.\n   *\n   * @type {number}\n   */\n  #counter = -1;\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Get the next data id.\n   *\n   * @returns {string} The data id.\n   */\n  #getNextDataId() {\n    ++this.#counter;\n    return this.#counter.toString();\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   */\n  loadFiles(files) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0]);\n    } else {\n      this.#loadImageFiles(files);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  loadURLs(urls, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], options);\n    } else {\n      this.#loadImageUrls(urls, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   */\n  loadImageObject(data) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image');\n  }\n\n  /**\n   * Abort the current loaders.\n   */\n  abort() {\n    const keys = Object.keys(this.#currentLoaders);\n    for (let i = 0; i < keys.length; ++i) {\n      this.#currentLoaders[i].loader.abort();\n      delete this.#currentLoaders[i];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {File[]} files The list of image files to load.\n   */\n  #loadImageFiles(files) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image');\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   */\n  #loadStateFile(file) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state');\n  }\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {string[]|File[]|Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, options) {\n    const eventInfo = {\n      loadtype: loadType,\n    };\n\n    // data id\n    const dataId = this.#getNextDataId();\n    eventInfo.dataid = dataId;\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[dataId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        dataid: dataId\n      };\n      if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[dataId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[dataId] !== 'undefined' &&\n        this.#currentLoaders[dataId].isFirstItem) {\n        this.#currentLoaders[dataId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[dataId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        dataid: dataId\n      });\n      this.onloadend({\n        dataid: dataId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of {image, meta}.\n   *\n   * @type {object}\n   */\n  #data = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {Array} The list of data ids.\n   */\n  getDataIds() {\n    return Object.keys(this.#data);\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#data = [];\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @returns {object} The data.\n   */\n  get(dataId) {\n    return this.#data[dataId];\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image to set.\n   */\n  setImage(dataId, image) {\n    this.#data[dataId].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: dataId\n    });\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(dataId));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(dataId, image, meta) {\n    if (typeof this.#data[dataId] !== 'undefined') {\n      throw new Error('Data id already used in storage: ' + dataId);\n    }\n    // store the new image\n    this.#data[dataId] = {\n      image: image,\n      meta: meta\n    };\n    // listen to image change\n    image.addEventListener('imagechange', this.#getFireEvent(dataId));\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(dataId, image, meta) {\n    const dataToUpdate = this.#data[dataId];\n\n    // add slice to current image\n    dataToUpdate.image.appendSlice(image);\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input data id\n   * to the event value.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(dataId) {\n    return (event) => {\n      event.dataid = dataId;\n      this.#fireEvent(event);\n    };\n  }\n\n} // ImageController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {Array} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  #configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {Array}\n   */\n  #eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  #isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  #data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  #currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {string} dataId The associated data id.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this.#app = app;\n    this.#dataId = dataId;\n    this.#configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this.#configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this.#configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this.#eventNames.includes(eventType)) {\n            this.#eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this.#data = [];\n    this.#currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this.#data[dataUid] = createOverlayData(data, this.#configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this.#data[dataUid] = createOverlayDataForDom(data, this.#configs);\n    }\n    // store uid\n    this.#currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  #onSliceChange = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this.#currentDataUid !== event.data.imageUid) {\n      this.#currentDataUid = event.data.imageUid;\n      this.#updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners\n   */\n  #updateData = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this.#data[this.#currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this.#currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    // fire valuechange for listeners\n    this.#fireEvent({type: 'valuechange', data: sliceOverlayData});\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this.#isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this.#app.addEventListener('positionchange', this.#onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.addEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this.#app.removeEventListener('positionchange', this.#onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.removeEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent(event) {\n    this.#listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated wheel event deltaY.\n   *\n   * @type {number}\n   */\n  #wheelDeltaY = 0;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel(event) {\n    // deltaMode (deltaY values on my machine...):\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\n    // - 2 (DOM_DELTA_PAGE): ??\n    // TODO: check scroll event\n    let scrollMin = 52;\n    if (event.deltaMode === 1) {\n      scrollMin = 5.99;\n    }\n    this.#wheelDeltaY += event.deltaY;\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\n      return;\n    } else {\n      this.#wheelDeltaY = 0;\n    }\n\n    const up = event.deltaY < 0 ? true : false;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const imageSize = viewController.getImageSize();\n    if (imageSize.canScroll3D()) {\n      if (up) {\n        viewController.incrementScrollIndex();\n      } else {\n        viewController.decrementScrollIndex();\n      }\n    } else if (imageSize.moreThanOne(3)) {\n      if (up) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","/**\n * Namespace for translation function.\n * (in a namespace to allow for override from client)\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    // defaut expects something like 'unit.cm2'\n    const unit = {\n      mm: 'mm',\n      cm2: 'cm²',\n      degree: '°'\n    };\n    const props = key.split('.');\n    if (props.length !== 2) {\n      throw new Error('Unexpected translation key length.');\n    }\n    if (props[0] !== 'unit') {\n      throw new Error('Unexpected translation key prefix.');\n    }\n    return unit[props[1]];\n  }\n\n};\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacingX, spacingY) {\n    let wlen = null;\n    if (spacingX !== null && spacingY !== null) {\n      const dxs = this.getDeltaX() * spacingX;\n      const dys = this.getDeltaY() * spacingY;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing[0], spacing[1]);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","/**\n * Statistics storage class.\n * 'simple' statistics do not include median, p25 nor p75.\n */\nexport class Statistics {\n  /**\n   * Minimum.\n   *\n   * @type {number}\n   */\n  min;\n  /**\n   * Maximum.\n   *\n   * @type {number}\n   */\n  max;\n  /**\n   * Mean.\n   *\n   * @type {number}\n   */\n  mean;\n  /**\n   * Standard deviation.\n   *\n   * @type {number}\n   */\n  stdDev;\n  /**\n   * Median.\n   *\n   * @type {number|undefined}\n   */\n  median;\n  /**\n   * 25th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p25;\n  /**\n   * 75th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p75;\n\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maxnimum.\n   * @param {number} mean The mean.\n   * @param {number} stdDev The standard deviation.\n   */\n  constructor(min, max, mean, stdDev) {\n    this.min = min;\n    this.max = max;\n    this.mean = mean;\n    this.stdDev = stdDev;\n  }\n}\n\n/**\n * Get statistics on an input array of number.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @param {string[]} flags A list of stat value names to calculate.\n * @returns {Statistics} A statistics object.\n */\nexport function getStats(values, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(values);\n  } else {\n    return getSimpleStats(values);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {string[]} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Simple statistics (no median, p25 nor p75).\n */\nfunction getSimpleStats(values) {\n  let min = values[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = values.length;\n  for (let i = 0; i < length; ++i) {\n    val = values[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  const variance = sumSqr / length - mean * mean;\n  const stdDev = Math.sqrt(variance);\n\n  return new Statistics(min, max, mean, stdDev);\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Complete statistics (includes median, p25 and p75).\n */\nfunction getFullStats(values) {\n  // get simple stats\n  const stats = getSimpleStats(values);\n\n  // sort array... can get slow...\n  values.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(values, 0.5);\n  stats.p25 = getPercentile(values, 0.25);\n  stats.p75 = getPercentile(values, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n * that lie between data points.\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\n *\n * @param {number[]} values The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile.\n */\nfunction getPercentile(values, ratio) {\n  // check input\n  if (values.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return values[0];\n  } else if (ratio === 1) {\n    return values[values.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (values.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  const v1 = values[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n","import {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {ViewController} from '../app/viewController';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {Style} style The application style.\n * @returns {Konva.Ellipse} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {Konva.Shape}\n   */\n  #shape = null;\n\n  /**\n   * Associated draw layer. Used to bound anchor move.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * Associated view controller. Used for quantification update.\n   *\n   * @type {ViewController}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Draw event callback.\n   *\n   * @type {eventFn}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {Konva.Shape} inshape The shape to edit.\n   * @param {DrawLayer} drawLayer The associated draw layer.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  setShape(inshape, drawLayer, viewController) {\n    this.#shape = inshape;\n    this.#drawLayer = drawLayer;\n    this.#viewController = viewController;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {Konva.Shape} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {eventFn} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the editor.\n   */\n  reset() {\n    this.#shape = undefined;\n    this.#drawLayer = undefined;\n    this.#viewController = undefined;\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {Konva.Shape} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // validate the anchor position\n      validateAnchorPosition(this.#drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        this.#drawLayer,\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getEventOffset,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  canNodeChangeColour,\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw layer group structure. The layout is:\n *\n * drawLayer\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\n *       |_ shape: name=\"shape\"\n *       |_ label: name=\"label\"\n *       |_ extra: line tick, protractor arc...\n *\n * Discussion:\n * - posGroup > shapeGroup\n *    pro: slice/frame display: 1 loop\n *    cons: multi-slice shape splitted in positionGroups\n * - shapeGroup > posGroup\n *    pros: more logical\n *    cons: slice/frame display: 2 loops\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {ShapeEditor}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {Konva.Group}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n\n    // trash cross\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Shape factory list\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {object}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {Konva.Group}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * With scroll flag.\n   *\n   * @type {boolean}\n   */\n  #withScroll = true;\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if a draw was started (handle at mouse move or up)\n    if (this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    // determine if the click happened in an existing shape\n    const stage = drawLayer.getKonvaStage();\n    const kshape = stage.getIntersection({\n      x: event._x,\n      y: event._y\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (kshape) {\n      const group = kshape.getParent();\n      const selectedShape = group.find('.shape')[0];\n      // reset editor if click on other shape\n      // (and avoid anchors mouse down)\n      if (selectedShape &&\n        selectedShape instanceof Konva.Shape &&\n        selectedShape !== this.#shapeEditor.getShape()) {\n        this.#shapeEditor.disable();\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        this.#shapeEditor.setShape(selectedShape, drawLayer, viewController);\n        this.#shapeEditor.enable();\n      }\n    } else {\n      // disable edition\n      this.#shapeEditor.disable();\n      this.#shapeEditor.reset();\n      // start storing points\n      this.#started = true;\n      // set factory\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n      // clear array\n      this.#points = [];\n      // store point\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      this.#points.push(this.#lastPoint);\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    // draw line to current pos\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      // if it was marked as temporary\n      if (this.#points.length !== 1 &&\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // mark it as temporary\n      this.#lastPoint.tmp = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      // reset flag\n      this.#started = false;\n    } else {\n      // remove temporary flag\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\n        delete this.#points[this.#points.length - 1].tmp;\n      }\n    }\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    // reset flag\n    this.#started = false;\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\n\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = new Point2D(pos.x, pos.y);\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    if (this.#withScroll) {\n      this.#scrollWhell.wheel(event);\n    }\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#started) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      if (!(shapeGroup instanceof Konva.Group)) {\n        return;\n      }\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      const shapeDisplayName = getShapeDisplayName(shape);\n      // delete command\n      const drawLayer = this.#app.getActiveLayerGroup().getActiveDrawLayer();\n      const delcmd = new DeleteGroupCommand(\n        shapeGroup,\n        shapeDisplayName,\n        drawLayer\n      );\n      delcmd.onExecute = this.#fireEvent;\n      delcmd.onUndo = this.#fireEvent;\n      delcmd.execute();\n      this.#app.addToUndoStack(delcmd);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      const konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // reset flag and points\n      this.#started = false;\n      this.#points = [];\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Array} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    // create shape group\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Point2D[]} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    // reset temporary shape group\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const drawController = drawLayer.getDrawController();\n\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      finalShapeGroup,\n      this.#shapeName,\n      drawLayer\n    );\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // execute it\n    this.#command.execute();\n    // save it in undo stack\n    this.#app.addToUndoStack(this.#command);\n\n    // activate shape listeners\n    this.setShapeOn(finalShapeGroup, layerGroup);\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.reset();\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n      // same for colour\n      this.setFeatures({lineColour: this.#style.getLineColour()});\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange', () => {\n        this.#updateDrawLayer(layerGroup);\n      });\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      return;\n    }\n    const drawController = drawLayer.getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.setShapeOn(group, layerGroup);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#setShapeOff(group);\n      });\n    }\n    // draw\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Set shape group off properties.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set off.\n   */\n  #setShapeOff(shapeGroup) {\n    // mouse styling\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {object} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {object} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n      const colour = this.#style.getLineColour();\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\n        function (ashape) {\n          if (ashape instanceof Konva.Shape) {\n            ashape.stroke(colour);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Set shape group on properties.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  setShapeOn(shapeGroup, layerGroup) {\n    // adapt shape and cursor when mouse over\n    const mouseOnShape = () => {\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    };\n    // mouse over event hanlding\n    shapeGroup.on('mouseover', () => {\n      // save local vars\n      this.#activeShapeGroup = shapeGroup;\n      // adapt shape\n      mouseOnShape();\n    });\n    // mouse out event hanlding\n    shapeGroup.on('mouseout', () => {\n      // reset shape\n      this.#resetActiveShapeGroup();\n      // reset local vars\n      this.#activeShapeGroup = undefined;\n    });\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    const shapeDisplayName = getShapeDisplayName(shape);\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      colour = shape.stroke();\n      // display trash\n      const stage = drawLayer.getKonvaStage();\n      const scale = stage.scale();\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n      this.#trash.scale(invscale);\n      konvaLayer.add(this.#trash);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      let factory;\n      const keys = Object.keys(this.#shapeFactoryList);\n      for (let i = 0; i < keys.length; ++i) {\n        factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(shapeGroup)) {\n          // stop at first find\n          break;\n        }\n      }\n      if (typeof factory === 'undefined') {\n        throw new Error('Cannot find factory to update quantification.');\n      }\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth =\n        this.#trash.width() * Math.abs(this.#trash.scaleX()) / 2;\n      const trashHalfHeight =\n        this.#trash.height() * Math.abs(this.#trash.scaleY()) / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        this.#trash.getChildren().forEach(function (tshape) {\n          if (tshape instanceof Konva.Shape) {\n            tshape.stroke('orange');\n          }\n        });\n        // change the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (ashape instanceof Konva.Shape) {\n              ashape.stroke('red');\n            }\n          });\n      } else {\n        this.#trash.getChildren().forEach(function (tshape) {\n          if (tshape instanceof Konva.Shape) {\n            tshape.stroke('red');\n          }\n        });\n        // reset the group shapes colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (ashape instanceof Konva.Shape &&\n              typeof ashape.stroke !== 'undefined') {\n              ashape.stroke(colour);\n            }\n          });\n      }\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const offset = getEventOffset(event.evt)[0];\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      const trashHalfWidth =\n        this.#trash.width() * Math.abs(this.#trash.scaleX()) / 2;\n      const trashHalfHeight =\n        this.#trash.height() * Math.abs(this.#trash.scaleY()) / 2;\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.reset();\n        // reset colour\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\n          function (ashape) {\n            if (ashape instanceof Konva.Shape) {\n              ashape.stroke(colour);\n            }\n          });\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n        // delete command\n        const delcmd = new DeleteGroupCommand(\n          group,\n          shapeDisplayName,\n          drawLayer\n        );\n        delcmd.onExecute = this.#fireEvent;\n        delcmd.onUndo = this.#fireEvent;\n        delcmd.execute();\n        this.#app.addToUndoStack(delcmd);\n      } else {\n        // save drag move\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          const mvcmd = new MoveGroupCommand(\n            group,\n            shapeDisplayName,\n            translation,\n            drawLayer\n          );\n          mvcmd.onExecute = this.#fireEvent;\n          mvcmd.onUndo = this.#fireEvent;\n          this.#app.addToUndoStack(mvcmd);\n\n          // the move is handled by Konva, trigger an event manually\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id(),\n            dataid: drawLayer.getDataId()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.currentTarget;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      if (!(label instanceof Konva.Label)) {\n        return;\n      }\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = (meta) => {\n        // store meta\n        // @ts-expect-error\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          meta.textExpr, meta.quantification));\n        // hide label if no text\n        label.visible(meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId,\n          dataid: drawLayer.getDataId()\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call roi dialog\n      // @ts-expect-error\n      customUI.openRoiDialog(ktext.meta, onSaveCallback);\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n    if (typeof features.withScroll !== 'undefined') {\n      this.#withScroll = features.withScroll;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {Konva.Group} group The group that contains anchors.\n * @returns {object|undefined} The minimum position as {x,y}.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return {x: minX, y: minY};\n}\n\n/**\n * Bound a node position.\n *\n * @param {Konva.Node} node The node to bound the position.\n * @param {object} min The minimum position as {x,y}.\n * @param {object} max The maximum position as {x,y}.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.x) {\n    node.x(min.x);\n    changed = true;\n  } else if (node.x() > max.x) {\n    node.x(max.x);\n    changed = true;\n  }\n  if (node.y() < min.y) {\n    node.y(min.y);\n    changed = true;\n  } else if (node.y() > max.y) {\n    node.y(max.y);\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {Konva.Group} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = {\n    x: -anchorMin.x,\n    y: -anchorMin.y\n  };\n  const max = {\n    x: stageSize.x -\n      (anchorMin.x + Math.abs(shape.width())),\n    y: stageSize.y -\n      (anchorMin.y + Math.abs(shape.height()))\n  };\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {object} stageSize The stage size {x,y}.\n * @param {Konva.Shape} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = {\n    x: -group.x(),\n    y: -group.y()\n  };\n  const max = {\n    x: stageSize.x - group.x(),\n    y: stageSize.y - group.y()\n  };\n\n  return boundNodePosition(anchor, min, max);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Array}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Array} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","// linting 'type {Object.<bla, bla>}' will give:\n// warning  Use object shorthand or index signatures instead of `Object`,\n//   e.g., `{[key: string]: string}` jsdoc/check-types\n// pb: jsdoc does not support the object shorthand\n//   and ignoring will give vscode warning since the doc linting is not\n//   activated by default.\n\n// Overridable default object.\nexport const defaults = {\n  /**\n   * List of default window level presets.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelText: {\n    arrow: {\n      '*': ''\n    },\n    circle: {\n      '*': '{surface}'\n    },\n    ellipse: {\n      '*': '{surface}'\n    },\n    freeHand: {\n      '*': ''\n    },\n    protractor: {\n      '*': '{angle}'\n    },\n    rectangle: {\n      '*': '{surface}'\n    },\n    roi: {\n      '*': ''\n    },\n    ruler: {\n      '*': '{length}'\n    }\n  }\n};\n","import {ROI} from '../math/roi';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} [viewController] The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    if (typeof viewController !== 'undefined') {\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.roi[modality] !== 'undefined') {\n        textExpr = defaults.labelText.roi[modality];\n      } else {\n        textExpr = defaults.labelText.roi['*'];\n      }\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kroi instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kroi.x();\n    points[index + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Array} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {Array} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Array}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {Array}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Array} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * @param {object} greyscale The input greyscale-\n * @returns {object} A gradient object\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\n *\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\n   * Circle formula: x*x + y*y = r*r\n   * => y = (+-) sqrt(r*r - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing = viewController.get2DSpacing();\n    quant.radius = {\n      value: this.getRadius() * spacing[0],\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\n   *\n   * @returns {Array} The rounded limits.\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing = viewController.get2DSpacing();\n    quant.a = {\n      value: this.getA() * spacing[0],\n      unit: i18n.t('unit.mm')\n    };\n    quant.b = {\n      value: this.getB() * spacing[1],\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {Array} radius The 2 ellipse radiuses.\n * @param {Array} dir The 2 ellipse directions.\n * @returns {Array} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {number} spacingX The X spacing.\n   * @param {number} spacingY The Y spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacingX, spacingY) {\n    return mulABC(this.getSurface(), spacingX, spacingY);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits.\n   */\n  getRound() {\n    return {\n      min: this.getBegin().getRound(),\n      max: this.getEnd().getRound()\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing = viewController.get2DSpacing();\n    quant.width = {\n      value: this.getWidth() * spacing[0],\n      unit: i18n.t('unit.mm')\n    };\n    quant.height = {\n      value: this.getHeight() * spacing[1],\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const unit = viewController.getPixelUnit();\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: unit};\n      quant.max = {value: quantif.max, unit: unit};\n      quant.mean = {value: quantif.mean, unit: unit};\n      quant.stdDev = {value: quantif.stdDev, unit: unit};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: unit};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: unit};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: unit};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} image The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      this.#filter.setOriginalImage(this.#app.getLastImage());\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} _args The filter arguments.\n   */\n  run(_args) {\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getLastImage());\n    const command = new RunFilterCommand(filter, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, app) {\n    this.#filter = filter;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setLastImage(this.#filter.update());\n    // update display\n    this.#app.render(this.#app.getDataIds()[0]); //todo: fix\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName()\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setLastImage(this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(this.#app.getDataIds()[0]); //todo: fix\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName()\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\nexport const toolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {validateWindowWidth} from '../image/windowCenterAndWidth';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // set start flag\n    this.#started = true;\n    // store initial position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = event._x - this.x0;\n    const diffY = this.y0 - event._y;\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = parseInt(viewController.getWindowLevel().center, 10);\n    const width = parseInt(viewController.getWindowLevel().width, 10);\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    viewController.setWindowLevel(windowCenter, windowWidth);\n\n    // store position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    // set start flag\n    if (this.#started) {\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataId());\n\n    // update view controller\n    viewController.setWindowLevel(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      parseInt(viewController.getWindowLevel().width, 10));\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {precisionRound} from '../utils/string';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new dwv.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    viewController.setCurrentPosition(position);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(event);\n      }\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // difference to last Y position\n    const diffY = event._y - this.y0;\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && viewController.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        viewController.decrementScrollIndex();\n      } else {\n        viewController.incrementScrollIndex();\n      }\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    const imageSize = viewController.getImageSize();\n    if (xMove && imageSize.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        viewController.incrementIndex(3);\n      } else {\n        viewController.decrementIndex(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove) {\n      this.x0 = event._x;\n    }\n    if (yMove) {\n      this.y0 = event._y;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Displays a tooltip in a temparary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {object} event The mouse move event.\n   */\n  #showTooltip(event) {\n    // remove previous div\n    this.#removeTooltipDiv();\n\n    // get image value at position\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\n    const position = viewController.getPositionFromPlanePoint(\n      planePos.x, planePos.y);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // place span in layer group to avoid upper layer opacity\n      const layerDiv = document.getElementById(viewLayer.getId());\n      layerDiv.parentElement.appendChild(span);\n      // position tooltip\n      span.style.left = (event._x + 10) + 'px';\n      span.style.top = (event._y + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  #removeTooltipDiv() {\n    const div = document.getElementById('scroll-tooltip');\n    if (div) {\n      div.remove();\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch down event.\n   *\n   * @param {object} event The touch down event.\n   */\n  twotouchdown = (event) => {\n    this.#started = true;\n    // store first point\n    this.x0 = event._x;\n    this.y0 = event._y;\n    // first line\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    this.line0 = new Line(point0, point1);\n    this.midPoint = this.line0.getMidpoint();\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    // calculate translation\n    const tx = event._x - this.x0;\n    const ty = event._y - this.y0;\n    // apply translation\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle two touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  twotouchmove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const point0 = new Point2D(event._x, event._y);\n    const point1 = new Point2D(event._x1, event._y1);\n    const newLine = new Line(point0, point1);\n    const lineRatio = newLine.getLength() / this.line0.getLength();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = event._y - this.y0;\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (viewController.canScroll()) {\n        if (diffY > 0) {\n          viewController.incrementScrollIndex();\n        } else {\n          viewController.decrementScrollIndex();\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\n        const planePos = viewLayer.displayToMainPlanePos(\n          this.midPoint.getX(), this.midPoint.getY());\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousedown(event);\n    } else if (touches.length === 2) {\n      this.twotouchdown(event);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touches = event.targetTouches;\n    if (touches.length === 1) {\n      this.mousemove(event);\n    } else if (touches.length === 2) {\n      this.twotouchmove(event);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Opacity: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // start flag\n    this.#started = true;\n    // first position\n    this.x0 = event._x;\n    this.y0 = event._y;\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = event._x - this.x0;\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerDetails = getLayerDetailsFromEvent(event);\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.x0 = event._x;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      // stop recording\n      this.#started = false;\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Opacity class\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * @external MagicWand\n * @see https://github.com/Tamersoul/magic-wand-js\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * threshold default tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * threshold tolerance of the tool border\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas\n   *\n   * @param {object} event The original event.\n   * @returns {object} The coordinates as a {x,y}.\n   */\n  #getCoord = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(\n        this.#shapeGroup,\n        'floodfill',\n        drawLayer\n      );\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change\n   *\n   * @param {number} _value Current threshold\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getCoord(event);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const movedpoint = this.#getCoord(event);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#started = false;\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.x0 = index.get(0);\n      this.y0 = index.get(1);\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      // final point: at 'tolerance' of the initial point\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      this.#shapeGroup,\n      'livewire',\n      drawLayer\n    );\n    // draw\n    this.#command.execute();\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // treat as mouse down\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // treat as mouse move\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // treat as mouse up\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, points[0], style.scale(10));\n    const linePerp1 = getPerpendicularLine(\n      line, points[1], style.scale(10));\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = 5 * style.getScaledStrokeWidth();\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.arrow[modality] !== 'undefined') {\n      textExpr = defaults.labelText.arrow[modality];\n    } else {\n      textExpr = defaults.labelText.arrow['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n    if (!(ktriangle instanceof Konva.RegularPolygon)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the circle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    const circle = new Circle(points[0], radius);\n    // draw shape\n    const kshape = new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.circle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.circle[modality];\n    } else {\n      textExpr = defaults.labelText.circle['*'];\n    }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta data\n    // @ts-expect-error\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(circle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // force y\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // force y\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y - radius);\n      top.y(center.y + radius);\n      break;\n    case 'bottom':\n      radius = center.y - anchor.y();\n      // force x\n      bottom.x(top.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y + radius);\n      break;\n    case 'top':\n      radius = anchor.y() - center.y;\n      // force x\n      top.x(bottom.x());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y - radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the ellipse.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ellipse[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ellipse[modality];\n    } else {\n      textExpr = defaults.labelText.ellipse['*'];\n    }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\n    const center = {\n      x: topLeft.x() + radiusX,\n      y: topRight.y() + radiusY\n    };\n    kellipse.position(center);\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {x: center.x, y: center.y};\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.freeHand[modality] !== 'undefined') {\n      textExpr = defaults.labelText.freeHand[modality];\n    } else {\n      textExpr = defaults.labelText.freeHand['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kline.x();\n    points[index + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the protractor.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.protractor[modality] !== 'undefined') {\n        textExpr = defaults.labelText.protractor[modality];\n      } else {\n        textExpr = defaults.labelText.protractor['*'];\n      }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n.t('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // augment text with meta\n      // @ts-ignore\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n    if (!(karc instanceof Konva.Arc)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = {\n      angle: {value: angle, unit: i18n.t('unit.degree')}\n    };\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the rectangle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.rectangle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.rectangle[modality];\n    } else {\n      textExpr = defaults.labelText.rectangle['*'];\n    }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {Konva.Shape} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Rectangle} rectangle The rectangle to shadow.\n   * @returns {Konva.Rect} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.scale(10);\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ruler[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ruler[modality];\n    } else {\n      textExpr = defaults.labelText.ruler['*'];\n    }\n    const quant = line.quantify(viewController);\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n    if (!(ktick0 instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n    if (!(ktick1 instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = line.quantify(viewController);\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {getMatrixFromName} from '../math/matrix';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getViewOrientation} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {toolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/**\n * View configuration: mainly defines the ´divId´\n * of the associated HTML div.\n */\nexport class ViewConfig {\n  /**\n   * Associated HTML div id.\n   *\n   * @type {string}\n   */\n  divId;\n  /**\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\n   * If undefined, will use the data aquisition plane.\n   *\n   * @type {string|undefined}\n   */\n  orientation;\n  /**\n   * Optional view colour map name.\n   *\n   * @type {string|undefined}\n   */\n  colourMap;\n  /**\n   * Optional layer opacity; in [0, 1] range.\n   *\n   * @type {number|undefined}\n   */\n  opacity;\n\n  /**\n   * @param {string} divId The associated HTML div id.\n   */\n  constructor(divId) {\n    this.divId = divId;\n  }\n}\n\n/**\n * Tool configuration.\n */\nexport class ToolConfig {\n  /**\n   * Optional tool options.\n   * For Draw: list of shape names.\n   * For Filter: list of filter names.\n   *\n   * @type {string[]|undefined}\n   */\n  options;\n\n  /**\n   * @param {string[]} [options] Optional tool options.\n   */\n  constructor(options) {\n    this.options = options;\n  }\n}\n\n/**\n * Application options.\n */\nexport class AppOptions {\n  /**\n   * DataId indexed object containing the data view configurations.\n   *\n   * @type {Object<string, ViewConfig[]>|undefined}\n   */\n  dataViewConfigs;\n  /**\n   * Tool name indexed object containing individual tool configurations.\n   *\n   * @type {Object<string, ToolConfig>|undefined}\n   */\n  tools;\n  /**\n   * Optional array of layerGroup binder names.\n   *\n   * @type {string[]|undefined}\n   */\n  binders;\n  /**\n   * Optional boolean flag to trigger the first data render\n   *   after the first loaded data or not. Defaults to true;\n   *\n   * @type {boolean|undefined}\n   */\n  viewOnFirstLoadItem;\n  /**\n   * Optional default chraracter set string used for DICOM parsing if\n   * not passed in DICOM file.\n   * Valid values: https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings\n   *\n   * @type {string|undefined}\n   */\n  defaultCharacterSet;\n  /**\n   * Optional overlay config.\n   *\n   * @type {object|undefined}\n   */\n  overlayConfig;\n\n  /**\n   * @param {Object<string, ViewConfig[]>} [dataViewConfigs] Optional dataId\n   *   indexed object containing the data view configurations.\n   */\n  constructor(dataViewConfigs) {\n    this.dataViewConfigs = dataViewConfigs;\n  }\n}\n\n/**\n * List of ViewConfigs indexed by dataIds.\n *\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\n */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * app.init(options);\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  /**\n   * App options.\n   *\n   * @type {AppOptions}\n   */\n  #options = null;\n\n  /**\n   * Data controller.\n   *\n   * @type {DataController}\n   */\n  #dataController = null;\n\n  /**\n   * Toolbox controller.\n   *\n   * @type {ToolboxController}\n   */\n  #toolboxController = null;\n\n  /**\n   * Load controller.\n   *\n   * @type {LoadController}\n   */\n  #loadController = null;\n\n  /**\n   * Stage.\n   *\n   * @type {Stage}\n   */\n  #stage = null;\n\n  /**\n   * Undo stack.\n   *\n   * @type {UndoStack}\n   */\n  #undoStack = null;\n\n  /**\n   * Style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  // overlay datas\n  #overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Image} The associated image.\n   */\n  getImage(dataId) {\n    return this.#dataController.get(dataId).image;\n  }\n\n  /**\n   * Get the last loaded image.\n   *\n   * @returns {Image} The image.\n   */\n  getLastImage() {\n    const dataIds = this.#dataController.getDataIds();\n    return this.#dataController.get(dataIds[dataIds.length - 1]).image;\n  }\n\n  /**\n   * Set the image at the given id.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} img The associated image.\n   */\n  setImage(dataId, img) {\n    this.#dataController.setImage(dataId, img);\n  }\n\n  /**\n   * Set the last image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setLastImage(img) {\n    const dataIds = this.#dataController.getDataIds();\n    this.#dataController.setImage(dataIds[dataIds.length - 1], img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @returns {string} The new image data id.\n   */\n  addNewImage(image, meta) {\n    const dataId = this.#dataController.getDataIds().length.toString();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: 'internal',\n      dataid: dataId\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(dataId, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: 'internal',\n      dataid: dataId,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(dataId);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: 'internal',\n      dataid: dataId\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: 'internal',\n      dataid: dataId\n    });\n\n    return dataId;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {string} dataId The data id.\n   * @returns {object} The list of meta data.\n   */\n  getMetaData(dataId) {\n    return this.#dataController.get(dataId).meta;\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {Array} The list of data ids.\n   */\n  getDataIds() {\n    return this.#dataController.getDataIds();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the layer scale on top of the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {object} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {object} The offset.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {ToolboxController} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    return this.#stage.getViewLayersByDataId(dataId);\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    return this.#stage.getDrawLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   * @function\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {AppOptions} opt The application options\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n   * const viewConfigs = {'*': [viewConfig0]};\n   * const options = new dwv.AppOptions(viewConfigs);\n   * options.viewOnFirstLoadItem = false;\n   * app.init(options);\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n    if (typeof this.#options.dataViewConfigs === 'undefined') {\n      this.#options.dataViewConfigs = {};\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (typeof this.#options.tools !== 'undefined') {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the Tools list\n        if (typeof toolList[toolName] !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolList[toolName](this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined' &&\n            toolParams.options.length !== 0) {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            } else {\n              appToolOptions = toolParams.options;\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    this.#overlayDatas = {};\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   * @function\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   *  - requestHeaders: an array of {name, value} to use as request headers\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\n   *  - batchSize: the size of the request url batch\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   * @function\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   * @function\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#loaderror\n   * @fires App#loadabort\n   * @function\n   */\n  loadImageObject = (data) => {\n    this.#loadController.loadImageObject(data);\n  };\n\n  /**\n   * Abort the current load.\n   */\n  abortLoad() {\n    this.#loadController.abort();\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.syncLayerGroupScale();\n  }\n\n  /**\n   * Init the Window/Level display\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Set the imageSmoothing flag value. Default is false.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#stage.setImageSmoothing(flag);\n    this.#stage.draw();\n  }\n\n  /**\n   * Get the layer group configuration from a data id.\n   * Defaults to div id 'layerGroup' if no association object has been set.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewConfig[]} The list of associated configs.\n   */\n  #getViewConfigs(dataId) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs[dataId] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataId];\n    } else if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\n   */\n  getDataViewConfigs() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration.\n   * Resets the stage and recreates all the views.\n   *\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\n   */\n  setDataViewConfigs(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this.#options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view config for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // add layer group if not done\n    if (typeof this.#stage.getLayerGroupByDivId(config.divId) === 'undefined') {\n      this.#createLayerGroup(config);\n    }\n\n    // render (will create layers)\n    this.render(dataId, [config]);\n  }\n\n  /**\n   * Remove a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  removeDataViewConfig(dataId, config) {\n    // remove from list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n    configs[dataId].splice(itemIndex, 1);\n    if (configs[dataId].length === 0) {\n      delete configs[dataId];\n    }\n\n    // data is loaded, remove view\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      const lg = this.#stage.getLayerGroupByDivId(config.divId);\n      if (typeof lg !== 'undefined') {\n        const vls = lg.getViewLayersByDataId(dataId);\n        if (vls.length === 1) {\n          lg.removeLayer(vls[0]);\n        } else {\n          throw new Error('Expected one view layer, got ' + vls.length);\n        }\n        const dls = lg.getDrawLayersByDataId(dataId);\n        if (dls.length === 1) {\n          lg.removeLayer(dls[0]);\n        } else {\n          throw new Error('Expected one draw layer, got ' + dls.length);\n        }\n        if (lg.getNumberOfLayers() === 0) {\n          this.#stage.removeLayerGroup(lg);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update a data view config.\n   * Removes and re-creates the layer if found.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  updateDataViewConfig(dataId, divId, config) {\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      throw new Error('No config for dataId: ' + dataId);\n    }\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      throw new Error('No config for dataId: ' +\n        dataId + ' and divId: ' + divId);\n    }\n\n    configs[dataId][itemIndex] = config;\n\n    // remove previous layers\n    const lg = this.#stage.getLayerGroupByDivId(config.divId);\n    if (typeof lg !== 'undefined') {\n      const vls = lg.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        lg.removeLayer(vls[0]);\n      } else {\n        throw new Error('Expected one view layer, got ' + vls.length);\n      }\n      const dls = lg.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        lg.removeLayer(dls[0]);\n      } else {\n        throw new Error('Expected one draw layer, got ' + dls.length);\n      }\n    }\n\n    // render (will create layer)\n    this.render(dataId, [config]);\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < viewConfigs.length; ++j) {\n        const viewConfig = viewConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this.#createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {ViewConfig} viewConfig The view config.\n   */\n  #createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = document.getElementById(viewConfig.divId);\n    const layerGroup = this.#stage.addLayerGroup(element);\n    // bind events\n    this.#bindLayerGroupToApp(layerGroup);\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {string} dataId The data id to render.\n   * @param {ViewConfig[]} [viewConfigs] The list of configs to render.\n   */\n  render(dataId, viewConfigs) {\n    if (typeof dataId === 'undefined' || dataId === null) {\n      throw new Error('Cannot render without data id');\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // use options list if non provided\n    if (typeof viewConfigs === 'undefined') {\n      viewConfigs = this.#getViewConfigs(dataId);\n    }\n\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataId +\n        ' (no data view config)');\n      return;\n    }\n\n    // loop on configs\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // add view\n      // warn: needs a loaded DOM\n      if (typeof this.#dataController.get(dataId) !== 'undefined' &&\n        layerGroup.getViewLayersByDataId(dataId).length === 0) {\n        this.#addViewLayer(dataId, config);\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom to the layers.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the image layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {string} The state of the app as a JSON string.\n   */\n  getJsonState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @param {string} jsonState The state of the app as a JSON string.\n   */\n  applyJsonState(jsonState) {\n    const state = new State();\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @function\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   * @function\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo\n   * - CRTL-Y: redo\n   * - CRTL-ARROW_LEFT: next element on fourth dim\n   * - CRTL-ARROW_UP: next element on third dim\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\n   * - CRTL-ARROW_DOWN: previous element on third dim\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   * @function\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const viewController =\n          this.#stage.getActiveLayerGroup()\n            .getActiveViewLayer().getViewController();\n        const size = viewController.getImageSize();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (size.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (viewController.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (size.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (viewController.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.s\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMap(name);\n  }\n\n  /**\n   * Set the window/level preset.\n   *\n   * @param {object} preset The window/level preset.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayerGroup(layerGroup, layer);\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {OverlayData|undefined} The overlay data.\n   */\n  getOverlayData(dataId) {\n    let data;\n    if (typeof this.#overlayDatas !== 'undefined') {\n      data = this.#overlayDatas[dataId];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {string} dataId The data id.\n   */\n  toggleOverlayListeners(dataId) {\n    const data = this.getOverlayData(dataId);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    // create overlay data\n    if (typeof this.#options.overlayConfig !== 'undefined') {\n      this.#overlayDatas[event.dataid] = new OverlayData(\n        this, event.dataid, this.#options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.dataid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.dataid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data);\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      dataid: event.dataid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // update overlay data if present\n    if (typeof this.#overlayDatas !== 'undefined' &&\n      typeof this.#overlayDatas[event.dataid] !== 'undefined') {\n      this.#overlayDatas[event.dataid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n      this.#getViewConfigs(event.dataid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.dataid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#loaderror\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    event.type = 'loaderror';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#loadabort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadabort';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  #addViewLayer(dataId, viewConfig) {\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n      dataId);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    if (typeof viewConfig.opacity !== 'undefined') {\n      opacity = viewConfig.opacity;\n    } else {\n      if (!isBaseLayer) {\n        opacity = 0.5;\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataId);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n\n    // view controller\n    const viewController = viewLayer.getViewController();\n    // colour map\n    if (typeof viewConfig.colourMap !== 'undefined') {\n      viewController.setColourMap(viewConfig.colourMap);\n    } else {\n      if (!isBaseLayer) {\n        if (data.image.getMeta().Modality === 'PT') {\n          viewController.setColourMap('hot');\n        } else {\n          viewController.setColourMap('rainbow');\n        }\n      }\n    }\n\n    // listen to controller events\n    if (data.image.getMeta().Modality === 'SEG') {\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\n    }\n\n    // listen to image changes\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n    this.#dataController.addEventListener('imagechange', (event) => {\n      viewLayer.onimagechange(event);\n      this.render(event.dataid);\n    });\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataId);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.syncLayerGroupScale();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n\n    // major orientation axis\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\n\n    // flip\n    let flipOffsetX = false;\n    let flipOffsetY = false;\n    let flipScaleZ = false;\n    if (typeof viewConfig.orientation !== 'undefined') {\n      if (major === 2) {\n        // scale flip Z for oriented views...\n        flipScaleZ = true;\n        // flip offset Y for axial aquired data\n        if (viewConfig.orientation !== 'axial') {\n          flipOffsetY = true;\n        }\n      } else if (major === 0) {\n        // scale flip Z for oriented views...\n        flipScaleZ = true;\n        // flip offset X for sagittal aquired data\n        if (viewConfig.orientation !== 'sagittal') {\n          flipOffsetX = true;\n        }\n      }\n    } else {\n      if (major === 0) {\n        // scale flip Z for sagittal and undefined target orientation\n        flipScaleZ = true;\n      }\n    }\n    // apply\n    if (flipOffsetX) {\n      viewLayer.addFlipOffsetX();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetX();\n      }\n    }\n    if (flipOffsetY) {\n      viewLayer.addFlipOffsetY();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetY();\n      }\n    }\n    if (flipScaleZ) {\n      viewLayer.flipScaleZ();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleZ();\n      }\n    }\n\n    // layer scale (done after possible flip)\n    viewLayer.setScale(layerGroup.getScale());\n    if (typeof drawLayer !== 'undefined') {\n      drawLayer.setScale(layerGroup.getScale());\n    }\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, viewLayer);\n    }\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this.#toolboxController) {\n        this.#toolboxController.init();\n      }\n    }\n\n  }\n\n} // class App\n","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataElement} from './dataElement';\nimport {DataWriter} from './dataWriter';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Writer rule.\n */\nexport class WriterRule {\n  /**\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\n   *\n   * @type {string}\n   */\n  action;\n  /**\n   * Optional value to use for replace action.\n   *\n   * @type {any|undefined}\n   */\n  value;\n\n  /**\n   * @param {string} action The rule action.\n   */\n  constructor(action) {\n    this.action = action;\n  }\n}\n\n/**\n * Get a UID for a DICOM tag.\n * Note: Use https://github.com/uuidjs/uuid?\n *\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array\n *\n * @param {Array} initialArray array of typed arrays\n * @returns {object} a typed array containing all values\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * DICOM writer.\n *\n * @example\n * // add link to html\n * const link = document.createElement(\"a\");\n * link.appendChild(document.createTextNode(\"download\"));\n * const div = document.getElementById(\"dwv\");\n * div.appendChild(link);\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   const parser = new dwv.DicomParser();\n *   parser.parse(event.target.response);\n *   // create writer\n *   const writer = new dwv.DicomWriter();\n *   // get buffer using default rules\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\n *   // create blob\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\n *   // add blob to download link\n *   link.href = URL.createObjectURL(blob);\n *   link.download = \"anonym.dcm\";\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomWriter {\n\n  // flag to use VR=UN for private sequences, default to false\n  // (mainly used in tests)\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  /**\n   * Possible tag actions.\n   *\n   * @type {Object<string, Function>}\n   */\n  #actions = {\n    copy: function (item) {\n      return item;\n    },\n    remove: function () {\n      return null;\n    },\n    clear: function (item) {\n      item.value = [];\n      return item;\n    },\n    replace: function (item, value) {\n      item.value = [value];\n      return item;\n    }\n  };\n\n  /**\n   * Default rules: just copy\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * Set the writing rules.\n   * List of writer rules indexed by either `default`, tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   *\n   * @param {Object<string, WriterRule>} rules The input rules.\n   */\n  setRules(rules) {\n    this.#rules = rules;\n  }\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * @external TextEncoder\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Use default anonymisation rules.\n   */\n  useDefaultAnonymisationRules() {\n    this.setRules({\n      default: {action: 'remove', value: null},\n      PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n      'Meta Element': {action: 'copy', value: null}, // group '0002'\n      Acquisition: {action: 'copy', value: null}, // group '0018'\n      'Image Presentation': {action: 'copy', value: null}, // group '0028'\n      Procedure: {action: 'copy', value: null}, // group '0040'\n      'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n    });\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {DataElement} element The element to check\n   * @returns {DataElement|null} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return this.#actions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\n        undefinedLength = item['FFFEE000'].undefinedLength;\n      }\n      // const itemElement = {\n      //   tag: getItemTag(),\n      //   vr: 'NONE',\n      //   vl: undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n      //   value: []\n      // };\n      const itemElement = new DataElement('NONE');\n      itemElement.vl = undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n      itemElement.tag = getItemTag();\n      itemElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\n          byteOffset = this.#writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        // const itemDelimElement = {\n        //   tag: getItemDelimitationItemTag(),\n        //   vr: 'NONE',\n        //   vl: 0,\n        //   value: []\n        // };\n        const itemDelimElement = new DataElement('NONE');\n        itemDelimElement.vl = 0;\n        itemDelimElement.tag = getItemDelimitationItemTag();\n        itemDelimElement.value = [];\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        logger.warn('Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      // const seqDelimElement = {\n      //   tag: getSequenceDelimitationItemTag(),\n      //   vr: 'NONE',\n      //   vl: 0,\n      //   value: []\n      // };\n      const seqDelimElement = new DataElement('NONE');\n      seqDelimElement.vl = 0;\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\n      seqDelimElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dataElements) {\n    // Transfer Syntax\n    // const el = dataElements['00020010'];\n    // el.value = 1;\n    // el.vl = 'a';\n    const syntax = dataElements['00020010'].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dataElements['00080005'] !== 'undefined') {\n      const oldscs = dataElements['00080005'].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dataElements['00080005'].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dataElements['00280100'] !== 'undefined') {\n      bitsAllocated = dataElements['00280100'].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dataElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dataElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        checkUnknownVR(element);\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDataElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDataElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this.#setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDataElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {DataElement} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, bitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\n * element exists in dictionary\n *\n * @param {DataElement} element The DICOM element.\n */\nfunction checkUnknownVR(element) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {DataElement} The DICOM element.\n */\nfunction getDataElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  const element = new DataElement(tag.getVrFromDictionary());\n  element.tag = tag;\n  return element;\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a 'simple' DICOM json tags object.\n * The json is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags. See synthetic test data (in tests/dicom) for examples.\n *\n * @param {Object<string, any>} jsonTags The DICOM\n *   json tags object.\n * @returns {Object<string, DataElement>} The DICOM elements.\n */\nexport function getElementsFromJSONTags(jsonTags) {\n  const keys = Object.keys(jsonTags);\n  const dataElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (typeof tag === 'undefined') {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const jsonTag = jsonTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\n        undefinedLength = jsonTag.undefinedLength;\n      }\n      if (typeof jsonTag.value !== 'undefined' &&\n        jsonTag.value !== null) {\n        for (let i = 0; i < jsonTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null jsonTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(jsonTag)) {\n        value = jsonTag;\n      } else {\n        value = [jsonTag];\n      }\n    }\n    // create element\n    const dataElement = new DataElement(vr);\n    dataElement.tag = tag;\n    dataElement.value = value;\n    if (undefinedLength) {\n      dataElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dataElements[tag.getKey()] = dataElement;\n  }\n  // return\n  // @ts-expect-error\n  return dataElements;\n}\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__436__","__WEBPACK_EXTERNAL_MODULE__626__","__WEBPACK_EXTERNAL_MODULE__812__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","pointLength","parseInt","substring","Array","fill","RescaleLut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","WindowCenterAndWidth","c","getCenter","getWidth","setSignedOffset","WindowLut","rescaleLut","isSigned","isDiscrete","size","getWindowLevel","getRescaleLut","setWindowLevel","wl","getSlope","Uint8ClampedArray","floor","lut_range_max","buildLut","func","lut","id","invId","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","x","y","z","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","BIG_EPSILON","Number","EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","getCoronalMat33","Point2D","getDistance","point2D","getRound","round","minus","Point","get3D","values0","values1","mergeWith3D","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","Tag","element","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getInfoFromDictionary","getVrFromDictionary","getTagFromKey","getItemTag","isItemTag","tag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","buffer","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","data","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","charCodeAt","precisionRound","number","precision","factor","delta","arraySortEquals","arr0","arr1","arrayEquals","sort","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer","set","DataElement","vl","undefinedLength","startOffset","endOffset","items","getDwvVersion","hasDicomPrefix","reduce","previous","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientation","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","implicit","itemData","item","isSeqDelim","isItemDelim","offsetTableVl","readTagRes","is32bitVL","concat","isKnownVR","pixItemData","sqEndOffset","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","subElement","elements","parse","dataElement","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Spacing","Geometry","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","geoSliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","appendOrigin","equalToOrigin","find","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","toFixed","getImage2DSize","rows","columns","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","checkTag","warning","TagValueExtractor","_elements","ImageFactory","checkElements","dataElements","create","pixelBuffer","numberOfFiles","size2D","frames","rowSpacing","columnSpacing","parseFloat","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","meta","modality","Modality","isPetWithSuv","radioInfoSq","totalDoseStr","halfLifeStr","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","Date","seriesDateEl","seriesTimeEl","seriesDateObj","seriesTimeObj","canGetSuvFactor","intensityFactor","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","date","getDateTime","radioStart","totalDoseEl","halfLifeEl","patWeightEl","decaySeconds","decay","decayedDose","getSuvFactor","setRescaleSlopeAndIntercept","sopClassUID","SOPClassUID","studyUID","StudyInstanceUID","seriesUID","SeriesInstanceUID","bits","BitsStored","pixelRep","PixelRepresentation","IsSigned","pixelUnit","getPixelUnit","frameOfReferenceUID","FrameOfReferenceUID","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLutElement","greenLutElement","blueLutElement","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","equalPosPat","pos1","pos2","JSON","stringify","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","longValue","urnValue","schemeDesignator","getSegment","segment","algorithmType","algorithmName","displayValue","cielabElement","rgb","triplet","gammaFunc","min","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","propertyCategoryCode","propertyTypeCode","trackingId","trackingUid","getSpacingFromMeasure","pixelSpacing","getSegmentFrameInfo","derivationImages","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","dimIndex","refSegmentNumber","imagePosPat","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","MaskFactory","_dicomElements","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","segments","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","lossyImageCompression","LossyImageCompression","createImage","createMaskImage","imageUids","getImageUid","uid","getSecondaryOffset","getBuffer","canQuantify","canWindowLevel","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","config","getMeta","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","copy","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","mat33","setInitialIndex","getPlaybackMilliseconds","_value","_index","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","setWindowLevelPresetById","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getCurrentWindowPresetName","getColourMap","getCurrentPosition","canSetPosition","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","newWl","isNewWidth","isNewCenter","manual","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","MaskSegmentHelper","mask","hasSegment","segmentNumber","maskHasSegments","numbers","unknowns","getSegments","setSegments","list","setHiddenSegments","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","getName","segmentnumber","undo","_event","ViewController","dataId","getPlaneHelper","isMask","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","initialise","getPositionFromPlanePoint","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","window","setInterval","canDoMore","stop","clearInterval","dataid","InteractionEventNames","customUI","openRoiDialog","textExpr","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","containerDiv","className","getDataId","setImageSmoothing","setView","getViewController","onimageset","onimagechange","getId","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","flipScaleZ","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","posX","posY","displayToMainPlanePos","display","style","isVisible","draw","layerid","globalAlpha","clear","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousFitScale","previousScale","newFitScale","newViewOffset","newFlipOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollIndex","filter","save","restore","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","DrawGroupCommand","layer","getParent","getKonvaLayer","MoveGroupCommand","translation","move","minusTrans","ChangeGroupCommand","startAnchor","endAnchor","viewController","update","DeleteGroupCommand","DrawMeta","quantification","DrawDetails","color","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","DrawController","drawLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","DrawLayer","getKonvaStage","getLayers","getDrawController","setPlaneHelper","opacity","container","listening","getContent","setAttribute","konvaLayer","isGroupVisible","toggleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","LayerGroup","getShowCrosshair","setShowCrosshair","getDivId","getScale","getAddedScale","getOffset","getNumberOfLayers","forEach","getNumberOfViewLayers","getActiveViewLayer","tmpLayer","getViewLayersByDataId","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataId","setActiveViewLayer","setActiveViewLayerByDataId","setActiveDrawLayer","setActiveDrawLayerByDataId","addViewLayer","viewLayerIndex","div","append","addDrawLayer","viewLayer","updateLayersToPositionChange","eventName","empty","getElementsByClassName","removeLayer","getElementById","baseLayer","p2D","displayPos","lineH","offsetWidth","left","top","lineV","offsetHeight","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","zeroOffset","scrollDiff","planeDiff","hasSetPos","calculateFitScale","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","addScale","scaleStep","addTranslation","binderList","WindowLevelBinder","getEventType","getCallback","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","ColourMapBinder","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","removeLayerGroup","syncLayerGroupScale","minScale","hasScale","binder","binderObj","elem","State","toJSON","app","drawController","version","toObject","fromJSON","json","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","getDataIds","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenk","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","command","redo","ToolboxController","toolList","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayerGroup","divId","layerGroupDivId","applySelectedTool","_x","_y","_x1","_y1","augmentEventOffsets","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","request","loader","onload","onloadend","load","options","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","join","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","random","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","WorkerTask","message","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","DicomBufferToView","opt","dataIndex","decodedData","fullSize","convert","dicomParser","algo","getSyntaxDecompressionName","needDecompression","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","canLoadFile","file","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","ArrayBuffer","_opt","isJson","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","bytes","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","content","unzipPercent","async","then","JSZip","zip","isZip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","fileIO","urlIO","loadType","eventInfo","loadtype","isFirstItem","eventInfoItem","isfirstitem","DataController","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","mergeObjects","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","configs","addAppListeners","addItemMeta","dataUid","dicomElements","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","sliceOverlayData","mapFunc","isListening","removeAppListeners","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","up","layerDetails","i18n","t","props","mm","cm2","degree","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","Statistics","stdDev","median","p25","p75","getStats","includesFullStatsFlags","stats","getSimpleStats","getPercentile","getFullStats","sumSqr","variance","ratio","i0","v0","guid","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","ShapeEditor","setFactoryList","setShape","inshape","isFactoryGroup","getShape","isActive","setDrawEventCallback","enable","getLayer","disable","resetAnchors","anchor","setAnchorsActive","getAnchors","getStyle","parent","on","cancelBubble","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","changed","ROI","getPoint","addPoint","addPoints","defaults","labelText","arrow","circle","ellipse","freeHand","protractor","rectangle","roi","ruler","RoiFactory","getNPoints","getTimeout","fontSize","fontFamily","px","py","_viewController","kroi","textPos","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","len","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","Ellipse","getA","getB","radiusRatio","rySquare","Rectangle","getRealWidth","getRealHeight","getHeight","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","setLastImage","WindowLevel","mousedown","x0","y0","mousemove","diffX","diffY","pixelToIntensity","mouseup","mouseout","touchstart","touchmove","touchend","dblclick","keydown","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","clearTimeout","span","parentElement","createTextNode","features","displayTooltip","ZoomAndPan","twotouchdown","point0","point1","midPoint","tx","ty","twotouchmove","lineRatio","zoom","step","Opacity","op","Draw","trashLine1","trashLine2","stage","getIntersection","selectedShape","timer","shapeGroup","destroy","tmpPoints","finalPoints","finalShapeGroup","setShapeOn","body","cursor","lineColour","shapeGroups","ashape","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","evt","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","currentTarget","groupId","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","withScroll","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","threshold","simple","MagicWand","cs","icsl","extend","ini","jl","modifyThreshold","bl","setPoints","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2d0","p2d1","p2b","p2e","CircleFactory","_style","kcircle","right","bottom","centerPoint","kshadow","maxX","pixelLine","EllipseFactory","ellipseX","ellipseY","kellipse","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectX","rectY","rectWidth","rectHeight","krect","rect","rWidth","rHeight","RulerFactory","tickLen","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","ViewConfig","ToolConfig","AppOptions","dataViewConfigs","tools","binders","viewOnFirstLoadItem","overlayConfig","App","dataIds","addNewImage","getMetaData","getToolboxController","appToolList","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortLoad","initWLDisplay","getDataViewConfigs","setDataViewConfigs","addDataViewConfig","removeDataViewConfig","itemIndex","lg","vls","dls","updateDataViewConfig","dataKeys","divIds","viewConfigs","viewConfig","setLayerGroupsBinders","instances","cx","cy","translate","getJsonState","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","isFirstLoadItem","eventMetaData","imageGeometry","getViewOrientation","matrix","getMatrixFromName","isBaseLayer","spacing2D","major","flipOffsetX","flipOffsetY","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","getUID","prefix","getDwvUIDPrefix","datePart","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","setUseUnVrForPrivateSq","default","setRules","rules","useSpecialTextEncoder","TextEncoder","useDefaultAnonymisationRules","Acquisition","Procedure","getElementToWrite","groupName","rule","writer","itemKeys","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","originalElement","checkUnknownVR","fmiv","getDataElement","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","metaOffset","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","dictVr","getElementsFromJSONTags","jsonTags","jsonTag"],"sourceRoot":""}