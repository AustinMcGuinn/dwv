{"version":3,"file":"dwv.min.js","mappings":"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AAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","sources":["webpack://evo-dwv/webpack/universalModuleDefinition","webpack://evo-dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://evo-dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://evo-dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://evo-dwv/webpack/bootstrap","webpack://evo-dwv/webpack/runtime/compat get default export","webpack://evo-dwv/webpack/runtime/define property getters","webpack://evo-dwv/webpack/runtime/hasOwnProperty shorthand","webpack://evo-dwv/webpack/runtime/make namespace object","webpack://evo-dwv/./src/math/index.js","webpack://evo-dwv/./src/image/modalityLut.js","webpack://evo-dwv/./src/utils/logger.js","webpack://evo-dwv/./src/image/windowLevel.js","webpack://evo-dwv/./src/image/voiLut.js","webpack://evo-dwv/./src/image/windowLut.js","webpack://evo-dwv/./src/image/luts.js","webpack://evo-dwv/./src/utils/colour.js","webpack://evo-dwv/./src/math/vector.js","webpack://evo-dwv/./src/math/matrix.js","webpack://evo-dwv/./src/math/point.js","webpack://evo-dwv/./src/utils/string.js","webpack://evo-dwv/./src/utils/array.js","webpack://evo-dwv/./src/dicom/dictionary.js","webpack://evo-dwv/./src/dicom/dicomTag.js","webpack://evo-dwv/./src/dicom/dataElement.js","webpack://evo-dwv/./src/dicom/dataReader.js","webpack://evo-dwv/./src/math/orientation.js","webpack://evo-dwv/./src/dicom/dicomParser.js","webpack://evo-dwv/./src/utils/listen.js","webpack://evo-dwv/./src/image/iterator.js","webpack://evo-dwv/./src/image/rsi.js","webpack://evo-dwv/./src/image/size.js","webpack://evo-dwv/./src/math/stats.js","webpack://evo-dwv/./src/image/spacing.js","webpack://evo-dwv/./src/image/geometry.js","webpack://evo-dwv/./src/dicom/dicomElementsWrapper.js","webpack://evo-dwv/./src/image/imageFactory.js","webpack://evo-dwv/./src/dicom/dataWriter.js","webpack://evo-dwv/./src/dicom/dicomWriter.js","webpack://evo-dwv/./src/dicom/dicomCode.js","webpack://evo-dwv/./src/dicom/dicomSegment.js","webpack://evo-dwv/./src/dicom/dicomSegmentFrameInfo.js","webpack://evo-dwv/./src/image/maskFactory.js","webpack://evo-dwv/./src/image/image.js","webpack://evo-dwv/./src/image/viewFactory.js","webpack://evo-dwv/./src/image/view.js","webpack://evo-dwv/./src/image/viewMonochrome.js","webpack://evo-dwv/./src/image/viewPaletteColor.js","webpack://evo-dwv/./src/image/viewRgb.js","webpack://evo-dwv/./src/image/viewYbrFull.js","webpack://evo-dwv/./src/image/planeHelper.js","webpack://evo-dwv/./src/gui/layerGroup.js","webpack://evo-dwv/./src/app/viewController.js","webpack://evo-dwv/./src/gui/generic.js","webpack://evo-dwv/./src/gui/viewLayer.js","webpack://evo-dwv/./src/gui/style.js","webpack://evo-dwv/./src/tools/drawCommands.js","webpack://evo-dwv/./src/app/drawController.js","webpack://evo-dwv/./src/gui/drawLayer.js","webpack://evo-dwv/./src/gui/stage.js","webpack://evo-dwv/./src/io/state.js","webpack://evo-dwv/./src/utils/uri.js","webpack://evo-dwv/./src/tools/undo.js","webpack://evo-dwv/./src/app/toolboxController.js","webpack://evo-dwv/./src/utils/progress.js","webpack://evo-dwv/./src/io/urlsLoader.js","webpack://evo-dwv/./src/utils/thread.js","webpack://evo-dwv/./src/image/decoder.js","webpack://evo-dwv/./src/image/dicomBufferToView.js","webpack://evo-dwv/./src/io/memoryLoader.js","webpack://evo-dwv/./src/image/domReader.js","webpack://evo-dwv/./src/io/loaderList.js","webpack://evo-dwv/./src/io/dicomDataLoader.js","webpack://evo-dwv/./src/io/jsonTextLoader.js","webpack://evo-dwv/./src/io/multipartLoader.js","webpack://evo-dwv/./src/io/rawImageLoader.js","webpack://evo-dwv/./src/io/rawVideoLoader.js","webpack://evo-dwv/./src/io/zipLoader.js","webpack://evo-dwv/./src/io/filesLoader.js","webpack://evo-dwv/./src/app/loadController.js","webpack://evo-dwv/./src/app/dataController.js","webpack://evo-dwv/./src/utils/operator.js","webpack://evo-dwv/./src/gui/overlayData.js","webpack://evo-dwv/./src/tools/scrollWheel.js","webpack://evo-dwv/./src/utils/i18n.js","webpack://evo-dwv/./src/math/line.js","webpack://evo-dwv/./src/tools/editor.js","webpack://evo-dwv/./src/tools/draw.js","webpack://evo-dwv/./src/tools/drawTrash.js","webpack://evo-dwv/./src/math/roi.js","webpack://evo-dwv/./src/app/defaults.js","webpack://evo-dwv/./src/tools/roi.js","webpack://evo-dwv/./src/math/path.js","webpack://evo-dwv/./src/math/bucketQueue.js","webpack://evo-dwv/./src/math/scissors.js","webpack://evo-dwv/./src/math/circle.js","webpack://evo-dwv/./src/math/ellipse.js","webpack://evo-dwv/./src/math/rectangle.js","webpack://evo-dwv/./src/image/filter.js","webpack://evo-dwv/./src/tools/filter.js","webpack://evo-dwv/./src/tools/index.js","webpack://evo-dwv/./src/tools/windowLevel.js","webpack://evo-dwv/./src/tools/scroll.js","webpack://evo-dwv/./src/tools/zoomPan.js","webpack://evo-dwv/./src/tools/opacity.js","webpack://evo-dwv/./src/tools/floodfill.js","webpack://evo-dwv/./src/tools/livewire.js","webpack://evo-dwv/./src/tools/arrow.js","webpack://evo-dwv/./src/tools/circle.js","webpack://evo-dwv/./src/tools/ellipse.js","webpack://evo-dwv/./src/tools/freeHand.js","webpack://evo-dwv/./src/tools/protractor.js","webpack://evo-dwv/./src/tools/rectangle.js","webpack://evo-dwv/./src/tools/ruler.js","webpack://evo-dwv/./src/app/application.js","webpack://evo-dwv/./src/image/maskSegmentHelper.js","webpack://evo-dwv/./src/image/deleteSegmentCommand.js","webpack://evo-dwv/./src/image/changeSegmentColourCommand.js","webpack://evo-dwv/./src/image/maskSegmentViewHelper.js","webpack://evo-dwv/./src/math/scalar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__654__, __WEBPACK_EXTERNAL_MODULE__324__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__654__;","module.exports = __WEBPACK_EXTERNAL_MODULE__944__;","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {number[]}\n   */\n  _values;\n\n  /**\n   * @param {number[]} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this._values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this._values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this._values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this._values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this._values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '_0-1__1-2'.\n   *\n   * @param {number[]} [dims] Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an index from an id string in the form of: '_0-1__1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index (minimum size is 3D).\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index (minimum 3)\n  let numberOfDims = 3;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    // expecting dim < 10\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    // dim is zero based\n    if (dim + 1 > numberOfDims) {\n      numberOfDims = dim + 1;\n    }\n  }\n  // default values\n  const values = new Array(numberOfDims);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    // expecting dim < 10\n    dim = parseInt(strIds[j].substring(1, 2), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Modality LUT class: compensates for any modality-specific presentation.\n * Typically consists of a rescale slope and intercept to\n * rescale the data range.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.html}.\n */\nexport class ModalityLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  _rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  _isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  _length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  _lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this._rsi = rsi;\n    this._isIdRsi = rsi.isID();\n\n    this._length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this._isIdRsi) {\n      this._lut = new Float32Array(this._length);\n      for (let i = 0; i < this._length; ++i) {\n        this._lut[i] = this._rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this._rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this._length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this._isIdRsi ? offset : this._lut[offset];\n  }\n\n} // class ModalityLut\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","import {logger} from '../utils/logger';\n\n/**\n * Minimum window width value.\n *\n * Ref: {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html_sect_C.11.2.1.2}.\n */\nconst minWindowWidth = 1;\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * Window and Level also known as window width and center.\n */\nexport class WindowLevel {\n  /**\n   * The window center.\n   *\n   * @type {number}\n   */\n  center;\n\n  /**\n   * The window width.\n   *\n   * @type {number}\n   */\n  width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      logger.warn('Using minimum window width since input is not valid: ' +\n        width);\n      width = minWindowWidth;\n    }\n    this.center = center;\n    this.width = width;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {WindowLevel} rhs The other object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.center === rhs.center &&\n      this.width === rhs.width;\n  }\n\n} // WindowLevel class\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, WindowLevel>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: new WindowLevel(40, 400),\n    lung: new WindowLevel(-500, 1500),\n    bone: new WindowLevel(500, 2000),\n    brain: new WindowLevel(40, 80),\n    head: new WindowLevel(90, 350)\n  }\n};\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLevel} from './windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * VOI (Values of Interest) LUT class: apply window centre and width.\n *\n * ```\n * if (x <= c - 0.5 - (w-1)/2) then y = ymin\n * else if (x > c - 0.5 + (w-1)/2) then y = ymax\n * else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * ```\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html}.\n */\nexport class VoiLut {\n\n  /**\n   * The window and level.\n   *\n   * @type {WindowLevel}\n   */\n  _windowLevel;\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  _signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  _ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  _ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  _xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  _xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  _slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  _inter = null;\n\n  /**\n   * @param {WindowLevel} wl The window center and width.\n   */\n  constructor(wl) {\n    this._windowLevel = wl;\n    this._init();\n  }\n\n  /**\n   * Get the window and level.\n   *\n   * @returns {WindowLevel} The window center and width.\n   */\n  getWindowLevel() {\n    return this._windowLevel;\n  }\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  _init() {\n    const center = this._windowLevel.center;\n    const width = this._windowLevel.width;\n    const c = center + this._signedOffset;\n    // from the standard\n    this._xmin = c - 0.5 - ((width - 1) / 2);\n    this._xmax = c - 0.5 + ((width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this._slope = (this._ymax - this._ymin) / (width - 1);\n    this._inter = (-(c - 0.5) / (width - 1) + 0.5) *\n      (this._ymax - this._ymin) + this._ymin;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this._signedOffset = offset;\n    // re-initialise\n    this._init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this._xmin) {\n      return this._ymin;\n    } else if (value > this._xmax) {\n      return this._ymax;\n    } else {\n      return (value * this._slope) + this._inter;\n    }\n  }\n\n} // class VoiLut\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {ModalityLut} from './modalityLut';\nimport {VoiLut} from './voiLut';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class: combines a modality LUT and a VOI LUT.\n */\nexport class WindowLut {\n\n  /**\n   * The modality LUT.\n   *\n   * @type {ModalityLut}\n   */\n  _modalityLut;\n\n  /**\n   * The VOI LUT.\n   *\n   * @type {VoiLut}\n   */\n  _voiLut;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  _lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  _signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  _isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, VOI LUT is set with\n   *   the 'setVoiLut' method.\n   *\n   * @param {ModalityLut} modalityLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(modalityLut, isSigned, isDiscrete) {\n    this._modalityLut = modalityLut;\n\n    if (isSigned) {\n      const size = this._modalityLut.getLength();\n      this._signedShift = size / 2;\n    } else {\n      this._signedShift = 0;\n    }\n\n    this._isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the VOI LUT.\n   *\n   * @returns {VoiLut} The VOI LUT.\n   */\n  getVoiLut() {\n    return this._voiLut;\n  }\n\n  /**\n   * Get the modality LUT.\n   *\n   * @returns {ModalityLut} The modality LUT.\n   */\n  getModalityLut() {\n    return this._modalityLut;\n  }\n\n  /**\n   * Set the VOI LUT.\n   *\n   * @param {VoiLut} lut The VOI LUT.\n   */\n  setVoiLut(lut) {\n    // store the window values\n    this._voiLut = lut;\n\n    // possible signed shift (LUT indices are positive)\n    this._voiLut.setSignedOffset(\n      this._modalityLut.getRSI().getSlope() * this._signedShift);\n\n    // create lut if not continous\n    if (this._isDiscrete) {\n      const size = this._modalityLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this._lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this._lut[i] = this._voiLut.apply(this._modalityLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this._isDiscrete) {\n      return this._lut[offset + this._signedShift];\n    } else {\n      return Math.floor(this._voiLut.apply(offset + this._signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {number[]} The LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values,\n *   otherwise return 0 for the first third and\n *   lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values,\n *   otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * Colour map: red, green and blue components\n *   to associate with intensity values.\n */\nexport class ColourMap {\n  /**\n   * Red component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  red;\n  /**\n   * Green component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  green;\n  /**\n   * Blue component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  blue;\n\n  /**\n   * @param {number[]} red Red component.\n   * @param {number[]} green Green component.\n   * @param {number[]} blue Blue component.\n   */\n  constructor(red, green, blue) {\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n  }\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, ColourMap>}\n */\nexport const luts = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable @stylistic/js/max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable @stylistic/js/max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet\n  /* eslint-disable @stylistic/js/max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot metal blue\n  /* eslint-disable @stylistic/js/max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet 20 step\n  /* eslint-disable @stylistic/js/max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable @stylistic/js/max-len */\n};\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * RGB colour class.\n */\nexport class RGB {\n  /**\n   * Red component.\n   *\n   * @type {number}\n   */\n  r;\n  /**\n   * Green component.\n   *\n   * @type {number}\n   */\n  g;\n  /**\n   * Blue component.\n   *\n   * @type {number}\n   */\n  b;\n  /**\n   * @param {number} r Red component.\n   * @param {number} g Green component.\n   * @param {number} b Blue component.\n   */\n  constructor(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n}\n\n// black rgb\nexport const BLACK = {r: 0, g: 0, b: 0};\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {RGB} c1 The first colour.\n * @param {RGB} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.3.html_sect_C.7.6.3.1.2},\n * - {@link https://en.wikipedia.org/wiki/YCbCr_JPEG_conversion}.\n *\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {RGB} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '_ab01ef'.\n * @returns {RGB} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {RGB} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '_ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/YIQ_From_RGB_to_YIQ}.\n *\n * @param {RGB} rgb RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgb) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgb.r * 0.001172549 +\n    rgb.g * 0.002301961 +\n    rgb.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '_ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '_ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '_fff' : '_000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {l,a,b} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/Illuminant_D65}.\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space_From_CIELAB_to_CIEXYZ}.\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space_From_CIEXYZ_to_CIELAB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB_From_CIE_XYZ_to_sRGB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB_From_sRGB_to_CIE_XYZ}.\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '_ffff00',\n    Red: '_ff0000',\n    White: '_ffffff',\n    Green: '_008000',\n    Blue: '_0000ff',\n    Lime: '_00ff00',\n    Fuchsia: '_ff00ff',\n    Black: '_000000'\n  };\n  let res = '_ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  _x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  _y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  _z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this._x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this._y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this._z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {Vector3D} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this._x === rhs.getX() &&\n      this._y === rhs.getY() &&\n      this._z === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this._x +\n      ', ' + this._y +\n      ', ' + this._z + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this._x * this._x) +\n      (this._y * this._y) +\n      (this._z * this._z)\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Cross_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this._y * vector3D.getZ()) - (vector3D.getY() * this._z),\n      (this._z * vector3D.getX()) - (vector3D.getZ() * this._x),\n      (this._x * vector3D.getY()) - (vector3D.getX() * this._y));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Dot_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this._x * vector3D.getX()) +\n      (this._y * vector3D.getY()) +\n      (this._z * vector3D.getZ());\n  }\n\n  /**\n   * Is this vector codirectional to an input one.\n   *\n   * @param {Vector3D} vector3D The vector to test.\n   * @returns {boolean} True if codirectional, false is opposite.\n   */\n  isCodirectional(vector3D) {\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product_Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    return this.dotProduct(vector3D) > 0;\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {number[]}\n   */\n  _values;\n\n  /**\n   * Matrix inverse, calculated at first ask.\n   *\n   * @type {Matrix33}\n   */\n  _inverse;\n\n  /**\n   * @param {number[]} values Row-major ordered 9 values.\n   */\n  constructor(values) {\n    this._values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number|undefined} The value at the position.\n   */\n  get(row, col) {\n    return this._values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this._inverse === 'undefined') {\n      this._inverse = getMatrixInverse(this);\n    }\n    return this._inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {number[]} array3D The input 3D array.\n   * @returns {number[]} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum.\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/Invertible_matrix_Inversion_of_3_%C3%97_3_matrices},\n * - {@link https://github.com/willnode/N-Matrix-Programmer}.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  _x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  _y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this._x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this._y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this._x === rhs.getX() &&\n      this._y === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this._x + ', ' + this._y + ')';\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  _x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  _y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  _z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this._x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this._y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this._z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this._x === rhs.getX() &&\n      this._y === rhs.getY() &&\n      this._z === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this._x, rhs.getX(), tol) &&\n      isSimilar(this._y, rhs.getY(), tol) &&\n      isSimilar(this._z, rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this._x +\n      ', ' + this._y +\n      ', ' + this._z + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(this._getSquaredDistance(point3D));\n  }\n\n  /**\n   * Get the square of the distance between this and\n   * an input point. Used for sorting.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} The square of the distance.\n   */\n  _getSquaredDistance(point3D) {\n    const dx = this._x - point3D.getX();\n    const dy = this._y - point3D.getY();\n    const dz = this._z - point3D.getZ();\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  /**\n   * Get the closest point to this in a Point3D list.\n   *\n   * @param {Point3D[]} pointList The list to check.\n   * @returns {number} The index of the closest point in the input list.\n   */\n  getClosest(pointList) {\n    let minIndex = 0;\n    // the order between squared distances and distances is the same\n    let minDist = this._getSquaredDistance(pointList[minIndex]);\n    for (let i = 0; i < pointList.length; ++i) {\n      const dist = this._getSquaredDistance(pointList[i]);\n      if (dist < minDist) {\n        minIndex = i;\n        minDist = dist;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this._x - point3D.getX()),\n      (this._y - point3D.getY()),\n      (this._z - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {number[]}\n   */\n  _values;\n\n  /**\n   * @param {number[]} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this._values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this._values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this._values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this._values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this._values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string: `key0=val00&key0=val01&key1=val10\n *   will return `{key0 : [val00, val01], key1 : val1}`.\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {string[]} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)_Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path.\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n *\n * Inspired from {@link https://stackoverflow.com/a/49729715/3639892}.\n *\n * Can be a solution to not have trailing zero as when\n *   using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check if the first input array contains all the\n * elements of the second input array.\n *\n * @param {string[]} arr0 The test array.\n * @param {string[]} arr1 The elements to check in the first array.\n * @returns {boolean} True if all the elements of arr1 are included in arr0.\n */\nexport function arrayContains(arr0, arr1) {\n  // check input\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length === 0 ||\n    arr1.length === 0 ||\n    arr1.length > arr0.length) {\n    return false;\n  }\n  // check values\n  for (const itemArr1 of arr1) {\n    if (!arr0.includes(itemArr1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: `arr.slice(start, end).find(callbackFn)`.\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/MIME_Multipart_messages}.\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *   {'Content-Type', ..., data} (depending on header tags).\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/MIME_Multipart_messages},\n * - {@link https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js}.\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","/* eslint-disable @stylistic/js/quote-props */\n/* eslint @stylistic/js/max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n *\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE',\n * - (vr) 'OB or OW' -> 'ox',\n * - (vr) 'US or SS' -> 'xs',\n * - (vr) 'US or OW' -> 'xx',\n * - (vr) 'US or SS or OW' -> 'xs',\n * - added 'GenericGroupLength' element to each group.\n *\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'.\n *\n * @type {Object<string, Object<string, string[]>>}\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {Object<string, string[]>} tags The tags to add as an\n *   object indexed by element key with values as:\n *   [VR, multiplicity, TagName] (all strings).\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n/**\n * Tag groups: key to name pairs.\n * Copied from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n * -> removed duplicates (commented).\n *\n * @type {Object<string, string>}\n */\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n/**\n * List of Value Representation (VR) with 32bit Value Length (VL).\n *\n * Added locally used 'ox'.\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html_table_7.1-1}.\n *\n * @type {Object<string, boolean>}\n */\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n/**\n * List of string VR with extended or replaced default character repertoire defined in\n *   Specific Character Set (0008,0005).\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html_sect_6.1.2.2}.\n *\n * @type {Object<string, boolean>}\n */\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n/**\n * VR equivalent javascript types.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html_table_6.2-1}.\n *\n * @type {Object<string, string>}\n */\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n\n/**\n * Transfer syntaxes.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part06/chapter_A.html_table_A-1}.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxes = {\n  '1.2.840.10008.1.2': 'Implicit VR Little Endian',\n  '1.2.840.10008.1.2.1': 'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.98': 'Encapsulated Uncompressed Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99': 'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2': 'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50': 'JPEG Baseline (Process 1)',\n  '1.2.840.10008.1.2.4.51': 'JPEG Extended (Process 2 & 4)',\n  '1.2.840.10008.1.2.4.52': 'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53': 'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54': 'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55': 'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56': 'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57': 'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58': 'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59': 'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60': 'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61': 'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62': 'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63': 'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64': 'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65': 'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66': 'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70': 'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])',\n  '1.2.840.10008.1.2.4.80': 'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81': 'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90': 'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91': 'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92': 'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93': 'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94': 'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95': 'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100': 'MPEG2 Main Profile / Main Level',\n  '1.2.840.10008.1.2.4.101': 'MPEG2 Main Profile / High Level',\n  '1.2.840.10008.1.2.4.102': 'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103': 'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106': 'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.4.107': 'HEVC/H.265 Main Profile / Level 5.1',\n  '1.2.840.10008.1.2.4.108': 'HEVC/H.265 Main 10 Profile / Level 5.1',\n  '1.2.840.10008.1.2.5': 'RLE Lossless',\n  '1.2.840.10008.1.2.6.1': 'RFC 2557 MIME encapsulation (Retired)',\n  '1.2.840.10008.1.2.6.2': 'XML Encoding (Retired)',\n  '1.2.840.10008.1.2.7.1': 'SMPTE ST 2110-20 Uncompressed Progressive Active Video',\n  '1.2.840.10008.1.2.7.2': 'SMPTE ST 2110-20 Uncompressed Interlaced Active Video',\n  '1.2.840.10008.1.2.7.3': 'SMPTE ST 2110-30 PCM Digital Audio',\n  '1.2.840.10008.1.20': 'Papyrus 3 Implicit VR Little Endian (Retired)'\n};\n\n/**\n * Transfer syntaxes indexed by keyword.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxKeywords = {\n  ImplicitVRLittleEndian: '1.2.840.10008.1.2',\n  ExplicitVRLittleEndian: '1.2.840.10008.1.2.1',\n  EncapsulatedUncompressedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.98',\n  DeflatedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.99',\n  ExplicitVRBigEndian: '1.2.840.10008.1.2.2',\n  JPEGBaseline8Bit: '1.2.840.10008.1.2.4.50',\n  JPEGExtended12Bit: '1.2.840.10008.1.2.4.51',\n  JPEGExtended35: '1.2.840.10008.1.2.4.52',\n  JPEGSpectralSelectionNonHierarchical68: '1.2.840.10008.1.2.4.53',\n  JPEGSpectralSelectionNonHierarchical79: '1.2.840.10008.1.2.4.54',\n  JPEGFullProgressionNonHierarchical1012: '1.2.840.10008.1.2.4.55',\n  JPEGFullProgressionNonHierarchical1113: '1.2.840.10008.1.2.4.56',\n  JPEGLossless: '1.2.840.10008.1.2.4.57',\n  JPEGLosslessNonHierarchical15: '1.2.840.10008.1.2.4.58',\n  JPEGExtendedHierarchical1618: '1.2.840.10008.1.2.4.59',\n  JPEGExtendedHierarchical1719: '1.2.840.10008.1.2.4.60',\n  JPEGSpectralSelectionHierarchical2022: '1.2.840.10008.1.2.4.61',\n  JPEGSpectralSelectionHierarchical2123: '1.2.840.10008.1.2.4.62',\n  JPEGFullProgressionHierarchical2426: '1.2.840.10008.1.2.4.63',\n  JPEGFullProgressionHierarchical2527: '1.2.840.10008.1.2.4.64',\n  JPEGLosslessHierarchical28: '1.2.840.10008.1.2.4.65',\n  JPEGLosslessHierarchical29: '1.2.840.10008.1.2.4.66',\n  JPEGLosslessSV1: '1.2.840.10008.1.2.4.70',\n  JPEGLSLossless: '1.2.840.10008.1.2.4.80',\n  JPEGLSNearLossless: '1.2.840.10008.1.2.4.81',\n  JPEG2000Lossless: '1.2.840.10008.1.2.4.90',\n  JPEG2000: '1.2.840.10008.1.2.4.91',\n  JPEG2000MCLossless: '1.2.840.10008.1.2.4.92',\n  JPEG2000MC: '1.2.840.10008.1.2.4.93',\n  JPIPReferenced: '1.2.840.10008.1.2.4.94',\n  JPIPReferencedDeflate: '1.2.840.10008.1.2.4.95',\n  MPEG2MPML: '1.2.840.10008.1.2.4.100',\n  MPEG2MPHL: '1.2.840.10008.1.2.4.101',\n  MPEG4HP41: '1.2.840.10008.1.2.4.102',\n  MPEG4HP41BD: '1.2.840.10008.1.2.4.103',\n  MPEG4HP422D: '1.2.840.10008.1.2.4.104',\n  MPEG4HP423D: '1.2.840.10008.1.2.4.105',\n  MPEG4HP42STEREO: '1.2.840.10008.1.2.4.106',\n  HEVCMP51: '1.2.840.10008.1.2.4.107',\n  HEVCM10P51: '1.2.840.10008.1.2.4.108',\n  RLELossless: '1.2.840.10008.1.2.5',\n  RFC2557MIMEEncapsulation: '1.2.840.10008.1.2.6.1',\n  XMLEncoding: '1.2.840.10008.1.2.6.2',\n  SMPTEST211020UncompressedProgressiveActiveVideo: '1.2.840.10008.1.2.7.1',\n  SMPTEST211020UncompressedInterlacedActiveVideo: '1.2.840.10008.1.2.7.2',\n  SMPTEST211030PCMDigitalAudio: '1.2.840.10008.1.2.7.3',\n  Papyrus3ImplicitVRLittleEndian: '1.2.840.10008.1.20'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  _group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  _element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group: ' + group);\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element: ' + element);\n    }\n    this._group = group;\n    this._element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this._group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this._group === rhs.getGroup() &&\n      this._element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this._group + this._element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this._group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this._group === 'FFFE' &&\n      (this._element === 'E000' ||\n      this._element === 'E00D' ||\n      this._element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   *\n   * See: {@link http://dicom.nema.org/medical/dicom/2022a/output/html/part05.html_sect_7.8}.\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this._group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {string[]|undefined} The info as [vr, multiplicity, name].\n   */\n  _getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this._group] !== 'undefined' &&\n      typeof dictionary[this._group][this._element] !==\n        'undefined') {\n      info = dictionary[this._group][this._element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this._getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this._getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key: ' + key);\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {Tag|undefined} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data element.\n */\nexport class DataElement {\n  /**\n   * The element Value Representation.\n   *\n   * @type {string}\n   */\n  vr;\n  /**\n   * The element value.\n   *\n   * @type {Array}\n   */\n  value;\n\n  // [start] internal values\n  // only present during parsing or writing otherwise not set\n\n  /**\n   * The element dicom tag.\n   *\n   * @type {Tag}\n   */\n  tag;\n\n  /**\n   * The element Value Length.\n   *\n   * @type {number}\n   */\n  vl;\n\n  /**\n   * Flag to know if defined or undefined sequence length.\n   *\n   * @type {boolean}\n   */\n  undefinedLength;\n\n  /**\n   * The element start offset.\n   *\n   * @type {number}\n   */\n  startOffset;\n\n  /**\n   * The element end offset.\n   *\n   * @type {number}\n   */\n  endOffset;\n\n  /**\n   * The sequence items.\n   *\n   * @type {Array}\n   */\n  items;\n\n  // [end] internal values\n\n  /**\n   * @param {string} vr The element VR (Value Representation).\n   */\n  constructor(vr) {\n    this.vr = vr;\n  }\n}","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  _buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  _isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  _isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  _needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  _view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this._buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this._isLittleEndian = isLittleEndian;\n    }\n    this._needFlip = (this._isLittleEndian !== this._isNativeLittleEndian);\n    this._view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this._view.getUint16(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this._view.getInt16(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this._view.getUint32(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this._view.getBigUint64(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this._view.getInt32(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this._view.getBigInt64(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this._view.getFloat32(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this._view.getFloat64(byteOffset, this._isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this._buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this._buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this._buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this._buffer, byteOffset, arraySize);\n      if (this._needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","import {Vector3D} from './vector';\nimport {\n  Matrix33,\n  getIdentityMat33\n} from './matrix';\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Default anatomical plane orientations.\n */\nexport const Orientation = {\n  /**\n   * Axial, also known as transverse.\n   */\n  Axial: 'axial',\n  /**\n   * Coronal, also known as frontal.\n   */\n  Coronal: 'coronal',\n  /**\n   * Sagittal, also known as anteroposterior.\n   */\n  Sagittal: 'sagittal'\n};\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix;\n  if (name === Orientation.Axial) {\n    matrix = getIdentityMat33();\n  } else if (name === Orientation.Coronal) {\n    matrix = getCoronalMat33();\n  } else if (name === Orientation.Sagittal) {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n\n/**\n * Get the orientation code of an orientation matrix. Each letter defines\n * the towards direction. Letters are: R (right), L (left),\n * A (anterior), P (posterior), I (inferior) and S (superior).\n *\n * @param {Matrix33} matrix The orientation matrix.\n * @returns {string} The orientation code.\n */\nexport function getOrientationStringLPS(matrix) {\n  const v0 = new Vector3D(\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0)\n  );\n  const v1 = new Vector3D(\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  );\n  const v2 = new Vector3D(\n    matrix.get(0, 2),\n    matrix.get(1, 2),\n    matrix.get(2, 2)\n  );\n  return getVectorStringLPS(v0) +\n    getVectorStringLPS(v1) +\n    getVectorStringLPS(v2);\n}\n\n/**\n * Get the orientation code of an orientation vector.\n * Credits: David Clunie, {@link https://www.dclunie.com/medical-image-faq/html/part2.html}.\n *\n * @param {Vector3D} vector The orientation vector.\n * @returns {string} The orientation code.\n */\nfunction getVectorStringLPS(vector) {\n  let abs = new Vector3D(\n    Math.abs(vector.getX()),\n    Math.abs(vector.getY()),\n    Math.abs(vector.getZ())\n  );\n\n  let orientation = '';\n  const orientationX = vector.getX() < 0 ? 'R' : 'L';\n  const orientationY = vector.getY() < 0 ? 'A' : 'P';\n  // as defined in DICOM\n  //const orientationZ = vector.getZ() < 0 ? 'F' : 'H';\n  const orientationZ = vector.getZ() < 0 ? 'I' : 'S';\n\n  const threshold = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs.getX() > threshold &&\n      abs.getX() > abs.getY() &&\n      abs.getX() > abs.getZ()) {\n      orientation += orientationX;\n      abs = new Vector3D(0, abs.getY(), abs.getZ());\n    } else if (abs.getY() > threshold &&\n      abs.getY() > abs.getX() &&\n      abs.getY() > abs.getZ()) {\n      orientation += orientationY;\n      abs = new Vector3D(abs.getX(), 0, abs.getZ());\n    } else if (abs.getZ() > threshold &&\n      abs.getZ() > abs.getX() &&\n      abs.getZ() > abs.getY()) {\n      orientation += orientationZ;\n      abs = new Vector3D(abs.getX(), abs.getY(), 0);\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Get the LPS 'group' (axial, coronal or sagittal) from a LPS code.\n *\n * @param {string} code The LPS code string.\n * @returns {string|undefined} The group.\n */\nexport function getLPSGroup(code) {\n  let orientStr;\n  const axialCodes = ['LPS', 'LAI', 'RPI', 'RAS'];\n  const coronalCodes = ['LSA', 'LIP', 'RSP', 'RIA'];\n  const sagittalCodes = ['PSL', 'PIR', 'ASR', 'AIL'];\n  if (axialCodes.includes(code)) {\n    orientStr = Orientation.Axial;\n  } else if (coronalCodes.includes(code)) {\n    orientStr = Orientation.Coronal;\n  } else if (sagittalCodes.includes(code)) {\n    orientStr = Orientation.Sagittal;\n  }\n  return orientStr;\n}\n\n/**\n * Get the orientation matrix associated to the direction cosines.\n *\n * @param {number[]} cosines The direction cosines.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationFromCosines(cosines) {\n  let orientationMatrix;\n  if (typeof cosines !== 'undefined' && cosines.length === 6) {\n    const rowCosines = new Vector3D(cosines[0], cosines[1], cosines[2]);\n    const colCosines = new Vector3D(cosines[3], cosines[4], cosines[5]);\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n  return orientationMatrix;\n}\n","import {\n  Tag,\n  getTransferSyntaxUIDTag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  transferSyntaxes,\n  transferSyntaxKeywords,\n  vrTypes,\n} from './dictionary';\nimport {DataElement} from './dataElement';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {\n  getOrientationFromCosines,\n  getOrientationStringLPS,\n  getLPSGroup\n} from '../math/orientation';\n\n/**\n * List of DICOM data elements indexed via a 8 character string formed from\n * the group and element numbers.\n *\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.34.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n *   after the 128 bytes preamble.\n *\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part10/chapter_7.html_sect_7.1}.\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  // check size: typed array constructor will throw RangeError if\n  // byteOffset + length * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength\n  if (buffer.byteLength < 132) {\n    return false;\n  }\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * Exported for tests only.\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term.\n *\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html},\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.12.html_sect_C.12.1.1.2},\n * - [TextDecoder_Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder_Parameters}.\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder.\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {number[]} orientation The image orientation patient.\n * @returns {string|undefined} The orientation\n *   name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  let name;\n  const orientMatrix = getOrientationFromCosines(orientation);\n  if (typeof orientMatrix !== 'undefined') {\n    const lpsStr = getOrientationStringLPS(orientMatrix.asOneAndZeros());\n    name = getLPSGroup(lpsStr);\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ImplicitVRLittleEndian;\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ExplicitVRBigEndian;\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGBaseline8Bit ||\n    syntax === transferSyntaxKeywords.JPEGExtended12Bit;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGLossless ||\n    syntax === transferSyntaxKeywords.JPEGLosslessSV1;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.RLELossless;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string|undefined} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n  return (syntax === transferSyntaxKeywords.ImplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRBigEndian ||\n    isJpegBaselineTransferSyntax(syntax) ||\n    isJpegLosslessTransferSyntax(syntax) ||\n    isJpeg2000TransferSyntax(syntax) ||\n    isRleTransferSyntax(syntax));\n}\n\n/**\n * Get a transfer syntax name from its UID.\n *\n * @param {string} syntax The transfer syntax UID value.\n * @returns {string} The transfer syntax name.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (typeof transferSyntaxes[syntax] !== 'undefined') {\n    name = transferSyntaxes[syntax];\n  }\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n *\n * See {@link https://github.com/ivmartel/dwv/issues/188}\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {DataElement} firstDataElement The first data element\n *   of the DICOM header.\n * @returns {DataElement} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      syntax = transferSyntaxKeywords.ImplicitVRLittleEndian;\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRLittleEndian;\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRBigEndian;\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = new DataElement('UI');\n  dataElement.tag = getTransferSyntaxUIDTag();\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 1 || bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   (without its value).\n *\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n *\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html_table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_7.5.2.html_table_7.5-1}.\n *\n * ```\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n * ```\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * Is the input VR a known VR.\n *\n * @param {string} vr The vr to test.\n * @returns {boolean} True if known.\n */\nfunction isKnownVR(vr) {\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\n  return knownTypes.includes(vr);\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  NumberOfFrames: '00280008',\n  BitsAllocated: '00280100',\n  PixelRepresentation: '00280103',\n  PixelData: '7FE00010'\n};\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {DataElements}\n   */\n  _dataElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  _defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  _defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  _textDecoder = this._defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  _decodeString(buffer) {\n    return this._defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  _decodeSpecialString(buffer) {\n    return this._textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this._defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this._defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder}.\n     *\n     * @external TextDecoder\n     */\n    this._textDecoder = new TextDecoder(characterSet);\n  }\n\n  // not using type DataElements since the typedef is not exported with the API\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {Object<string, DataElement>} The data elements.\n   */\n  getDicomElements() {\n    return this._dataElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  _readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  _readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this._readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this._readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this._readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.4.html_table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  _readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this._readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this._readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   *\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html_table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {DataElement} The data element.\n   */\n  _readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this._readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this._decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // check vr\n    if (!isKnownVR(vr)) {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\n      vr = 'UN';\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see _799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this._readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this._readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this._readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = new DataElement(vr);\n    element.tag = tag;\n    element.vl = vl;\n    element.startOffset = startOffset;\n    element.endOffset = endOffset;\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {DataElement} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  _interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this._interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR' +\n            ', treating as OW'\n          );\n          element.vr = 'OW';\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this._decodeSpecialString(stream);\n        } else {\n          data = this._decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw new Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint8Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt8Array(offset, vl));\n        }\n      } else {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint16Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt16Array(offset, vl));\n        }\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        let sqBitsAllocated = bitsAllocated;\n        let sqPixelRepresentation = pixelRepresentation;\n        for (let l = 0; l < keys.length; ++l) {\n          // check if local bitsAllocated\n          // (inside item loop to get interpreted value)\n          let dataElement = item[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n          // check if local pixelRepresentation\n          // (inside item loop to get interpreted value)\n          dataElement = item[TagKeys.PixelRepresentation];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqPixelRepresentation = dataElement.value[0];\n          }\n          const subElement = item[keys[l]];\n          subElement.value = this._interpretElement(\n            subElement, reader,\n            sqPixelRepresentation, sqBitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {DataElements} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  _interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this._interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dataElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this._decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this._readDataElement(metaReader, offset, false);\n      dataElement.value = this._interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this._dataElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this._readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this._dataElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this._dataElements[TagKeys.TransferSyntax];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this._interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this._readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this._dataElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this._readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this._dataElements[key] === 'undefined') {\n        this._dataElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this._dataElements[TagKeys.PixelData] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this._dataElements[TagKeys.PixelRepresentation];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this._interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this._dataElements[TagKeys.BitsAllocated];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this._interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this._defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this._defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this._dataElements[TagKeys.SpecificCharacterSet];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this._interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this._interpret(\n      this._dataElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this._dataElements[TagKeys.PixelData];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this._dataElements[TagKeys.NumberOfFrames] !== 'undefined') {\n          numberOfFrames = Number(\n            this._dataElements[TagKeys.NumberOfFrames].value[0]\n          );\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","import {logger} from './logger';\n\n/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget_example}.\n */\nexport class ListenerHandler {\n  /**\n   * Listeners.\n   *\n   * @type {object}\n   */\n  _listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this._listeners[type] === 'undefined') {\n      this._listeners[type] = [];\n    }\n    // add callback to listeners array\n    this._listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this._listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    let nFound = 0;\n    for (let i = 0; i < this._listeners[type].length; ++i) {\n      if (this._listeners[type][i] === callback) {\n        ++nFound;\n        this._listeners[type].splice(i, 1);\n      }\n    }\n    if (nFound === 0) {\n      logger.debug('No callback found on remove listener for type ' + type);\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this._listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this._listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number[][]} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {number[][][]} regions An array of [x, y] pairs (min, max).\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept.\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  _slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  _intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this._slope = slope;\n    this._intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this._slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this._intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this._slope + this._intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {number[]}\n   */\n  _values;\n\n  /**\n   * @param {number[]} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this._values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this._values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this._values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this._values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this._values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Statistics storage class.\n * 'simple' statistics do not include median, p25 nor p75.\n */\nexport class Statistics {\n  /**\n   * Minimum.\n   *\n   * @type {number}\n   */\n  min;\n  /**\n   * Maximum.\n   *\n   * @type {number}\n   */\n  max;\n  /**\n   * Mean.\n   *\n   * @type {number}\n   */\n  mean;\n  /**\n   * Standard deviation.\n   *\n   * @type {number}\n   */\n  stdDev;\n  /**\n   * Median.\n   *\n   * @type {number|undefined}\n   */\n  median;\n  /**\n   * 25th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p25;\n  /**\n   * 75th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p75;\n\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maxnimum.\n   * @param {number} mean The mean.\n   * @param {number} stdDev The standard deviation.\n   */\n  constructor(min, max, mean, stdDev) {\n    this.min = min;\n    this.max = max;\n    this.mean = mean;\n    this.stdDev = stdDev;\n  }\n}\n\n/**\n * Get statistics on an input array of number.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @param {string[]} flags A list of stat value names to calculate.\n * @returns {Statistics} A statistics object.\n */\nexport function getStats(values, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(values);\n  } else {\n    return getBasicStats(values);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {string[]} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Simple statistics (no median, p25 nor p75).\n */\nexport function getBasicStats(values) {\n  let min = values[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = values.length;\n  for (let i = 0; i < length; ++i) {\n    val = values[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  let variance = sumSqr / length - mean * mean;\n  if (variance < 0) {\n    variance = 0;\n  }\n  const stdDev = Math.sqrt(variance);\n\n  return new Statistics(min, max, mean, stdDev);\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Complete statistics (includes median, p25 and p75).\n */\nfunction getFullStats(values) {\n  // get basic stats\n  const stats = getBasicStats(values);\n\n  // sort array... can get slow...\n  values.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(values, 0.5);\n  stats.p25 = getPercentile(values, 0.25);\n  stats.p75 = getPercentile(values, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n *   that lie between data points.\n * See: {@link https://en.wikipedia.org/wiki/Percentile} (second variant interpolation).\n *\n * @param {number[]} values The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile.\n */\nfunction getPercentile(values, ratio) {\n  // check input\n  if (values.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return values[0];\n  } else if (ratio === 1) {\n    return values[values.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (values.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  const v1 = values[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n *\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n *   and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\n/**\n * Number range.\n */\nexport class NumberRange {\n  /**\n   * @type {number}\n   */\n  min;\n  /**\n   * @type {number}\n   */\n  max;\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maximum.\n   */\n  constructor(min, max) {\n    this.min = min;\n    this.max = max;\n  }\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {number[]}\n   */\n  _values;\n\n  /**\n   * @param {number[]} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this._values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this._values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this._values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this._values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this._values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  getIdentityMat33,\n  REAL_WORLD_EPSILON\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {getBasicStats} from '../math/stats';\nimport {precisionRound} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Point3D[]}\n   */\n  _origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  _size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  _spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {Object<string, Point3D[]>}\n   */\n  _timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  _initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  _orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  _newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this._origins = [origin];\n    this._size = size;\n    this._spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this._initialTime = time;\n      this._timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this._orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this._initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this._timeOrigins);\n    if (keys.length === 0) {\n      return this._origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this._timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this._timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this._timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this._timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this._origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Point3D[]} The object origins.\n   */\n  getOrigins() {\n    return this._origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this._origins.length; ++i) {\n      if (this._origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this._size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this._size.get(0),\n          this._size.get(1),\n          this._size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this._size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  _updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(this._origins);\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this._spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Using geometric spacing ' + geoSliceSpacing +\n        ' instead of tag spacing ' + this._spacing.get(2));\n      const values = this._spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this._spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this._newOrigins) {\n      this._updateSliceSpacing();\n      this._newOrigins = false;\n    }\n    let res = this._spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this._spacing.get(0),\n          this._spacing.get(1),\n          this._spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this._orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this._orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this._origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this._timeOrigins[time];\n    }\n\n    // find the closest origin\n    const closestOriginIndex = point.getClosest(localOrigins);\n    const closestOrigin = localOrigins[closestOriginIndex];\n\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n\n    // use third orientation matrix column as plane normal vector\n    const normal = new Vector3D(\n      this._orientation.get(0, 2),\n      this._orientation.get(1, 2),\n      this._orientation.get(2, 2)\n    );\n\n    // codirectional vectors: above slice index\n    // oposite vectors: below slice index\n    const isCodirectional = normal.isCodirectional(pointDir);\n    const sliceIndex = isCodirectional\n      ? closestOriginIndex + 1 : closestOriginIndex;\n\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    // equal callback\n    const equalToOrigin = function (element) {\n      return element.equals(origin);\n    };\n    if (typeof time !== 'undefined') {\n      // check if not already in list\n      const found = this._timeOrigins[time].find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same time origin twice');\n      }\n      // add in origin array\n      this._timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this._initialTime) {\n      // check if not already in list\n      const found = this._origins.find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same origin twice');\n      }\n      // update flag\n      this._newOrigins = true;\n      // add in origin array\n      this._origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this._size.getValues();\n      values[2] += 1;\n      this._size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this._timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this._size.getValues();\n    const spacingValues = this._spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this._size = new Size(sizeValues);\n    this._spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Point3D[]} origins An array of Point3D.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins) {\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n\n  const spacings = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    const origin1 = origins[i];\n    const origin2 = origins[i + 1];\n    const sliceSpacing = origin1.getDistance(origin2);\n    if (sliceSpacing === 0) {\n      throw new Error('Zero slice spacing ' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    spacings.push(sliceSpacing);\n  }\n\n  // use rounded mean value as spacing\n  const stats = getBasicStats(spacings);\n  const spacing = precisionRound(stats.mean, 4);\n\n  // warn if non constant\n  if (stats.stdDev > REAL_WORLD_EPSILON) {\n    logger.warn('Varying slice spacing, value: ' + spacing +\n      ' (mean: ' + stats.mean +\n      ', min: ' + stats.min +\n      ', max: ' + stats.max +\n      ', stdDev: ' + stats.stdDev + ')');\n  }\n\n  return spacing;\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {getOrientationFromCosines} from '../math/orientation';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\nimport {DataElement} from './dataElement';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Dump the DICOM tags to a string in the same way as the\n * DCMTK `dcmdump` command (https://support.dcmtk.org/docs-dcmrt/dcmdump.html).\n *\n * @param {Object<string, DataElement>} dicomElements The dicom elements.\n * @returns {string} The dumped file.\n */\nexport function dcmdump(dicomElements) {\n  const keys = Object.keys(dicomElements);\n  let result = '\\n';\n  result += '# Dicom-File-Format\\n';\n  result += '\\n';\n  result += '# Dicom-Meta-Information-Header\\n';\n  result += '# Used TransferSyntax: ';\n  if (isNativeLittleEndian()) {\n    result += 'Little Endian Explicit\\n';\n  } else {\n    result += 'NOT Little Endian Explicit\\n';\n  }\n  let dicomElement = null;\n  let tag = null;\n  let checkHeader = true;\n  for (let i = 0, leni = keys.length; i < leni; ++i) {\n    dicomElement = dicomElements[keys[i]];\n    tag = getTagFromKey(keys[i]);\n    if (checkHeader && tag.getGroup() !== '0002') {\n      result += '\\n';\n      result += '# Dicom-Data-Set\\n';\n      result += '# Used TransferSyntax: ';\n      const syntax = dicomElements['00020010'].value[0];\n      result += getTransferSyntaxName(syntax);\n      result += '\\n';\n      checkHeader = false;\n    }\n    result += getElementAsString(tag, dicomElement) + '\\n';\n  }\n  return result;\n}\n\n/**\n * Get a data element value as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n * @returns {string} A string representation of the DICOM element.\n */\nfunction getElementValueAsString(tag, dicomElement, pretty) {\n  let str = '';\n  const strLenLimit = 65;\n\n  // dafault to pretty output\n  if (typeof pretty === 'undefined') {\n    pretty = true;\n  }\n  // check dicom element input\n  if (typeof dicomElement === 'undefined' || dicomElement === null) {\n    return str;\n  }\n\n  // Polyfill for Number.isInteger.\n  const isInteger = Number.isInteger || function (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value;\n  };\n\n  // TODO Support sequences.\n\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n    str += '(no value available)';\n  } else if (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength) {\n    str = '(PixelSequence)';\n  } else if (dicomElement.vr === 'DA' && pretty) {\n    const daObj = getDate(dicomElement);\n    const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n    str = da.toLocaleDateString();\n  } else if (dicomElement.vr === 'TM' && pretty) {\n    const tmObj = getTime(dicomElement);\n    str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n  } else {\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n    const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n      dicomElement.vr === 'FD' ||\n      dicomElement.vr === 'DS');\n    let valueStr = '';\n    for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n      valueStr = '';\n      if (k !== 0) {\n        valueStr += '\\\\';\n      }\n      if (isFloatNumberVR) {\n        const num = Number(dicomElement.value[k]);\n        if (!isInteger(num) && pretty) {\n          valueStr += num.toPrecision(4);\n        } else {\n          valueStr += num.toString();\n        }\n      } else if (isOtherVR) {\n        let tmp = dicomElement.value[k].toString(16);\n        if (dicomElement.vr === 'OB') {\n          tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n        } else {\n          tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n        }\n        valueStr += tmp;\n      } else {\n        valueStr += dicomElement.value[k];\n      }\n      // check length\n      if (str.length + valueStr.length <= strLenLimit) {\n        str += valueStr;\n      } else {\n        str += '...';\n        break;\n      }\n    }\n  }\n  return str;\n}\n\n/**\n * Get a data element as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {string} [prefix] A string to prepend this one.\n * @returns {string} The element as a string.\n */\nfunction getElementAsString(tag, dicomElement, prefix) {\n  // default prefix\n  prefix = prefix || '';\n\n  // get tag anme from dictionary\n  const tagName = tag.getNameFromDictionary();\n\n  let deSize = dicomElement.value.length;\n  let isOtherVR = false;\n  if (dicomElement.vr.length !== 0) {\n    isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n  }\n\n  // no size for delimitations\n  if (isItemDelimitationItemTag(tag) ||\n    isSequenceDelimitationItemTag(tag)) {\n    deSize = 0;\n  } else if (isOtherVR) {\n    deSize = 1;\n  }\n\n  const isPixSequence = (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength);\n\n  let line = null;\n\n  // (group,element)\n  line = '(';\n  line += tag.getGroup().toLowerCase();\n  line += ',';\n  line += tag.getElement().toLowerCase();\n  line += ') ';\n  // value representation\n  line += dicomElement.vr;\n  // value\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 &&\n    dicomElement.value[0] === '') {\n    line += ' (no value available)';\n    deSize = 0;\n  } else {\n    // simple number display\n    if (dicomElement.vr === 'na') {\n      line += ' ';\n      line += dicomElement.value[0];\n    } else if (isPixSequence) {\n      // pixel sequence\n      line += ' (PixelSequence #=' + deSize + ')';\n    } else if (dicomElement.vr === 'SQ') {\n      line += ' (Sequence with';\n      if (dicomElement.undefinedLength) {\n        line += ' undefined';\n      } else {\n        line += ' explicit';\n      }\n      line += ' length #=';\n      line += dicomElement.value.length;\n      line += ')';\n    } else if (isOtherVR ||\n        dicomElement.vr === 'pi' ||\n        dicomElement.vr === 'UL' ||\n        dicomElement.vr === 'US' ||\n        dicomElement.vr === 'SL' ||\n        dicomElement.vr === 'SS' ||\n        dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'AT') {\n      // 'O'ther array, limited display length\n      line += ' ';\n      line += getElementValueAsString(tag, dicomElement, false);\n    } else {\n      // default\n      line += ' [';\n      line += getElementValueAsString(tag, dicomElement, false);\n      line += ']';\n    }\n  }\n\n  // align #\n  const nSpaces = 55 - line.length;\n  if (nSpaces > 0) {\n    for (let s = 0; s < nSpaces; ++s) {\n      line += ' ';\n    }\n  }\n  line += ' # ';\n  if (dicomElement.vl < 100) {\n    line += ' ';\n  }\n  if (dicomElement.vl < 10) {\n    line += ' ';\n  }\n  line += dicomElement.vl;\n  line += ', ';\n  line += deSize; //dictElement[1];\n  line += ' ';\n  if (tagName !== null) {\n    line += tagName;\n  } else {\n    line += 'Unknown Tag & Data';\n  }\n\n  let message = null;\n\n  // continue for sequence\n  if (dicomElement.vr === 'SQ') {\n    let item = null;\n    for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n      item = dicomElement.value[l];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n\n      // get the item element\n      const itemTag = getItemTag();\n      const itemElement = item['FFFEE000'];\n      message = '(Item with';\n      if (itemElement.undefinedLength) {\n        message += ' undefined';\n      } else {\n        message += ' explicit';\n      }\n      message += ' length #=' + (itemKeys.length - 1) + ')';\n      itemElement.value = [message];\n      itemElement.vr = 'na';\n\n      line += '\\n';\n      line += getElementAsString(itemTag, itemElement, prefix + '  ');\n\n      for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n        const itemTag = getTagFromKey(itemKeys[m]);\n        if (itemKeys[m] !== 'xFFFEE000') {\n          line += '\\n';\n          line += getElementAsString(itemTag, item[itemKeys[m]],\n            prefix + '    ');\n        }\n      }\n\n      message = '(ItemDelimitationItem';\n      if (!itemElement.undefinedLength) {\n        message += ' for re-encoding';\n      }\n      message += ')';\n      const itemDelimTag = getItemDelimitationItemTag();\n      const itemDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += getElementAsString(\n        itemDelimTag, itemDelimElement, prefix + '  ');\n\n    }\n\n    message = '(SequenceDelimitationItem';\n    if (!dicomElement.undefinedLength) {\n      message += ' for re-encod.';\n    }\n    message += ')';\n    const sqDelimTag = getSequenceDelimitationItemTag();\n    const sqDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: [message]\n    };\n    line += '\\n';\n    line += getElementAsString(sqDelimTag, sqDelimElement, prefix);\n  } else if (isPixSequence) {\n    // pixel sequence\n    let pixItem = null;\n    for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n      pixItem = dicomElement.value[n];\n      line += '\\n';\n      pixItem.vr = 'pi';\n      line += getElementAsString(\n        getPixelDataTag(), pixItem, prefix + '  ');\n    }\n\n    const pixDelimTag = getSequenceDelimitationItemTag();\n    const pixDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: ['(SequenceDelimitationItem)']\n    };\n    line += '\\n';\n    line += getElementAsString(pixDelimTag, pixDelimElement, prefix);\n  }\n\n  return prefix + line;\n}\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {number[]} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {Spacing} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      // spacing order: [row, column]\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n      break;\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit === 'undefined') {\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'CT') {\n        unit = 'HU';\n      }\n    }\n  }\n  return unit;\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {object} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dtDate = getDate({value: [dtValue.substring(0, 8)]});\n  const dtTime = dtValue.length >= 9\n    ? getTime({value: [dtValue.substring(8)]}) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Pad an input string with a '0' to form a 2 digit one.\n *\n * @param {string} str The string to pad.\n * @returns {string} The padded string.\n */\nfunction padZeroTwoDigit(str) {\n  return ('0' + str).slice(-2);\n}\n\n/**\n * Get a DICOM formated date.\n *\n * @param {Date} date The date to format.\n * @returns {string} The formated date.\n */\nexport function getDicomDate(date) {\n  // YYYYMMDD\n  return (\n    date.getFullYear().toString() +\n    padZeroTwoDigit((date.getMonth() + 1).toString()) +\n    padZeroTwoDigit(date.getDate().toString())\n  );\n}\n\n/**\n * Get a DICOM formated time.\n *\n * @param {Date} date The date to format.\n * @returns {string} The formated time.\n */\nexport function getDicomTime(date) {\n  // HHMMSS\n  return (\n    padZeroTwoDigit(date.getHours().toString()) +\n    padZeroTwoDigit(date.getMinutes().toString()) +\n    padZeroTwoDigit(date.getSeconds().toString())\n  );\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nexport function getDimensionOrganization(dataElements) {\n  // Dimension Organization Sequence (required)\n  const orgSq = dataElements['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = dataElements['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Spacing} A spacing object.\n */\nexport function getSpacingFromMeasure(dataElements) {\n  // Pixel Spacing\n  if (typeof dataElements['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = dataElements['00280030'];\n  // spacing order: [row, column]\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[1]),\n    parseFloat(pixelSpacing.value[0]),\n  ];\n  // Spacing Between Slices\n  if (typeof dataElements['00180088'] !== 'undefined') {\n    spacingValues.push(parseFloat(dataElements['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get an orientation matrix from a dicom orientation element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationMatrix(dataElements) {\n  const imageOrientationPatient = dataElements['00200037'];\n  let orientationMatrix;\n  // slice orientation (cosines are matrices' columns)\n  // http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.2.html_sect_C.7.6.2.1.1\n  if (typeof imageOrientationPatient !== 'undefined') {\n    orientationMatrix =\n      getOrientationFromCosines(\n        imageOrientationPatient.value.map((item) => parseFloat(item))\n      );\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get a dicom item from a measure sequence.\n *\n * @param {Spacing} spacing The spacing object.\n * @returns {object} The dicom item.\n */\nexport function getDicomMeasureItem(spacing) {\n  return {\n    SpacingBetweenSlices: spacing.get(2),\n    PixelSpacing: [spacing.get(1), spacing.get(0)]\n  };\n}\n\n/**\n * Get a dicom element from a plane orientation sequence.\n *\n * @param {Matrix33} orientation The image orientation.\n * @returns {object} The dicom element.\n */\nexport function getDicomPlaneOrientationItem(orientation) {\n  return {\n    ImageOrientationPatient: [\n      orientation.get(0, 0),\n      orientation.get(1, 0),\n      orientation.get(2, 0),\n      orientation.get(0, 1),\n      orientation.get(1, 1),\n      orientation.get(2, 1)\n    ]\n  };\n}\n\n/**\n * Check an input tag.\n *\n * @param {object} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] The expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nfunction checkTag(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n\n/**\n * Get the decayed dose (Bq).\n *\n * @param {object} elements The DICOM elements to check.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nfunction getDecayedDose(elements) {\n  let warning = '';\n  let warn;\n\n  // SeriesDate (type1)\n  const seriesDateEl = elements['00080021'];\n  const seriesDateObj = getDate(seriesDateEl);\n\n  let totalDose;\n  let halfLife;\n  let radioStart;\n\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements['00540016'];\n  warning += checkTag(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    if (radioInfoSq.value.length !== 1) {\n      logger.warn(\n        'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.'\n      );\n    }\n\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0]['00181074'];\n    warn = checkTag(totalDoseEl, totalDoseStr);\n    if (warn.length === 0) {\n      totalDose = totalDoseEl.value[0];\n    } else {\n      warning += warn;\n    }\n\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0]['00181075'];\n    warn = checkTag(halfLifeEl, halfLifeStr);\n    if (warn.length === 0) {\n      halfLife = parseFloat(halfLifeEl.value[0]);\n    } else {\n      warning += warn;\n    }\n\n    // RadiopharmaceuticalStartDateTime (type3)\n    const radioStartDateTimeEl = radioInfoSq.value[0]['00181078'];\n    let radioStartDateObj;\n    let radioStartTimeObj;\n    if (typeof radioStartDateTimeEl === 'undefined') {\n      // use seriesDate as radioStartDate\n      radioStartDateObj = seriesDateObj;\n      // try RadiopharmaceuticalStartTime (type3)\n      const radioStartTimeEl = radioInfoSq.value[0]['00181072'];\n      radioStartTimeObj = getTime(radioStartTimeEl);\n    } else {\n      const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n      radioStartDateObj = radioStartDateTime.date;\n      radioStartTimeObj = radioStartDateTime.time;\n    }\n    if (typeof radioStartTimeObj === 'undefined') {\n      radioStartTimeObj = {\n        hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n      };\n    }\n    radioStart = new Date(\n      radioStartDateObj.year,\n      radioStartDateObj.monthIndex,\n      radioStartDateObj.day,\n      radioStartTimeObj.hours,\n      radioStartTimeObj.minutes,\n      radioStartTimeObj.seconds,\n      radioStartTimeObj.milliseconds\n    );\n  }\n\n  // SeriesTime (type1)\n  const seriesTimeEl = elements['00080031'];\n  const seriesTimeObj = getTime(seriesTimeEl);\n  // Series date/time\n  let scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n\n  // scanStart Date check\n  // AcquisitionDate (type3)\n  const acqDateEl = elements['00080022'];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements['00080032'];\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year,\n      acqDateObj.monthIndex,\n      acqDateObj.day,\n      acqTimeObj.hours,\n      acqTimeObj.minutes,\n      acqTimeObj.seconds,\n      acqTimeObj.milliseconds\n    );\n\n    if (scanStart > acqDate) {\n      const diff = scanStart.getTime() - acqDate.getTime();\n      const warn = 'Series date/time is after Aquisition date/time (diff=' +\n        diff.toString() + 'ms) ';\n      logger.debug(warn);\n\n      // back compute from center (average count rate) of time window\n      // for bed position (frame) in series (reliable in all cases)\n\n      let frameRefTime = 0;\n      const frameRefTimeElStr = 'FrameReferenceTime (00541300)';\n      const frameRefTimeEl = elements['00541300'];\n      warning += checkTag(frameRefTimeEl, frameRefTimeElStr);\n      if (typeof frameRefTimeEl !== 'undefined') {\n        frameRefTime = frameRefTimeEl.value[0];\n      }\n      let actualFrameDuration = 0;\n      const actualFrameDurationElStr = 'ActualFrameDuration (0018,1242)';\n      const actualFrameDurationEl = elements['00181242'];\n      warning += checkTag(actualFrameDurationEl, actualFrameDurationElStr);\n      if (typeof actualFrameDurationEl !== 'undefined') {\n        actualFrameDuration = actualFrameDurationEl.value[0];\n      }\n      if (frameRefTime > 0 && actualFrameDuration > 0) {\n        // convert to seconds\n        actualFrameDuration = actualFrameDuration / 1000;\n        frameRefTime = frameRefTime / 1000;\n        const decayConstant = Math.log(2) / halfLife;\n        const decayDuringFrame = decayConstant * actualFrameDuration;\n        const averageCountRateTimeWithinFrame =\n          1 /\n          decayConstant *\n          Math.log(decayDuringFrame / (1 - Math.exp(-decayDuringFrame)));\n        const offsetSeconds = averageCountRateTimeWithinFrame - frameRefTime;\n        scanStart = new Date(\n          acqDateObj.year,\n          acqDateObj.monthIndex,\n          acqDateObj.day,\n          acqTimeObj.hours,\n          acqTimeObj.minutes,\n          acqTimeObj.seconds + offsetSeconds,\n          acqTimeObj.milliseconds\n        );\n      }\n    }\n  }\n\n  // decayed dose (Bq)\n  let decayedDose;\n  if (typeof scanStart !== 'undefined' &&\n    typeof radioStart !== 'undefined' &&\n    typeof totalDose !== 'undefined' &&\n    typeof halfLife !== 'undefined') {\n    // decay time (s) (Date diff is in milliseconds)\n    const decayTime = (scanStart.getTime() - radioStart.getTime()) / 1000;\n    const decay = Math.pow(2, (-decayTime / halfLife));\n    decayedDose = totalDose * decay;\n  }\n\n  return {\n    value: decayedDose,\n    warning: warning\n  };\n}\n\n/**\n * Get the PET SUV factor.\n *\n * Ref:\n * - {@link https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)_SUV_Calculation},\n * - {@link https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf},\n * - {@link https://qibawiki.rsna.org/images/8/86/SUV_vendorneutral_pseudocode_20180626_DAC.pdf}.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nexport function getSuvFactor(elements) {\n  let warning = '';\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements['00280051'];\n  warning += checkTag(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements['00541102'];\n  warning += checkTag(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements['00541001'];\n  warning += checkTag(unitEl, unitTagStr, ['BQML']);\n\n  // PatientWeight (type3, kg)\n  let patWeight;\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements['00101030'];\n  const warn = checkTag(patWeightEl, patientWeightStr);\n  if (warn.length === 0) {\n    patWeight = patWeightEl.value[0];\n  } else {\n    warning += warn;\n  }\n\n  // Decayed dose (Bq)\n  const decayedDose = getDecayedDose(elements);\n  warning += decayedDose.warning;\n\n  const result = {};\n  if (warning.length !== 0) {\n    result.warning = 'Cannot calculate PET SUV:' + warning;\n  } else {\n    // SUV factor (grams/Bq)\n    result.value = (patWeight * 1000) / decayedDose.value;\n  }\n\n  return result;\n}\n\n/**\n * Get the file list from a DICOMDIR.\n *\n * @param {object} data The buffer data of the DICOMDIR.\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {Object<string, DataElement>} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {luts} from './luts';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor,\n  getSuvFactor,\n  getOrientationMatrix\n} from '../dicom/dicomElementsWrapper';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  _warning;\n\n  /**\n   * The PET SUV factor.\n   *\n   * @type {number|undefined}\n   */\n  _suvFactor;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this._warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {DataElements} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(dataElements) {\n    // reset\n    this._warning = undefined;\n    // will throw if columns or rows is not defined\n    getImage2DSize(dataElements);\n    // check PET SUV\n    let modality;\n    const element = dataElements['00080060'];\n    if (typeof element !== 'undefined') {\n      modality = element.value[0];\n      if (modality === 'PT') {\n        const suvFactor = getSuvFactor(dataElements);\n        this._suvFactor = suvFactor.value;\n        this._warning = suvFactor.warning;\n      }\n    }\n\n    return this._warning;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dataElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // NumberOfFrames\n    const numberOfFramesEl = dataElements['00280008'];\n    if (typeof numberOfFramesEl !== 'undefined') {\n      const number = parseInt(numberOfFramesEl.value[0], 10);\n      if (number > 1) {\n        sizeValues.push(number);\n      }\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dataElements);\n\n    // TransferSyntaxUID\n    const syntax = dataElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dataElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // Image orientation patient\n    const orientationMatrix = getOrientationMatrix(dataElements);\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dataElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dataElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dataElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dataElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dataElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dataElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dataElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n\n    // Modality\n    const modality = dataElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n\n    // PET SUV\n    let isPetWithSuv = false;\n    let intensityFactor = 1;\n    if (typeof this._suvFactor !== 'undefined') {\n      isPetWithSuv = true;\n      intensityFactor = this._suvFactor;\n      logger.info('Applying PET SUV calibration: ' + intensityFactor);\n      slope *= intensityFactor;\n      intercept *= intensityFactor;\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n\n    // defaults\n    meta.TransferSyntaxUID = safeGet('00020010');\n    meta.MediaStorageSOPClassUID = safeGet('00020002');\n    meta.SOPClassUID = safeGet('00080016');\n    meta.Modality = safeGet('00080060');\n    meta.ImageType = safeGet('00080008');\n    meta.SamplesPerPixel = safeGet('00280002');\n    meta.PhotometricInterpretation = safeGet('00280004');\n    meta.PixelRepresentation = safeGet('00280103');\n    meta.BitsAllocated = safeGet('00280100');\n    meta.BitsStored = safeGet('00280101');\n    meta.HighBit = safeGet('00280102');\n\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n\n    meta.ImageOrientationPatient = safeGet('00200037');\n    meta.FrameOfReferenceUID = safeGet('00200052');\n\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    if (isPetWithSuv) {\n      meta.pixelUnit = 'SUV';\n    } else {\n      const pixelUnit = getPixelUnit(dataElements);\n      if (typeof pixelUnit !== 'undefined') {\n        meta.pixelUnit = pixelUnit;\n      }\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dataElements['00281050'];\n    const windowWidth = dataElements['00281051'];\n    const windowCWExplanation = dataElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        let width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          width *= intensityFactor;\n          if (width < 1) {\n            width = 1;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(\n              center * intensityFactor,\n              width\n            )],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      // Red Palette Color Lookup Table Data\n      const redLutElement = dataElements['00281201'];\n      // Green Palette Color Lookup Table Data\n      const greenLutElement = dataElements['00281202'];\n      // Blue Palette Color Lookup Table Data\n      const blueLutElement = dataElements['00281203'];\n      let redLut;\n      let greenLut;\n      let blueLut;\n      // check red palette descriptor (should all be equal)\n      // Red Palette Color Lookup Table Descriptor\n      // 0: number of entries in the lookup table\n      // 1: first input value mapped\n      // 2: number of bits for each entry in the Lookup Table Data (8 or 16)\n      const descriptor = dataElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n        descriptor.value.length === 3) {\n        if (descriptor.value[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor.value[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          // TODO vl is undefined, find info elsewhere...\n          const vlSize = redLutElement.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dataElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLutElement.value.map(scaleTo8);\n            greenLut = greenLutElement.value.map(scaleTo8);\n            blueLut = blueLutElement.value.map(scaleTo8);\n          }\n        } else if (descriptor.value[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLutElement.value.slice(0);\n          // @ts-expect-error\n          redLut = Array.from(new Uint8Array(clone.buffer));\n          clone = greenLutElement.value.slice(0);\n          // @ts-expect-error\n          greenLut = Array.from(new Uint8Array(clone.buffer));\n          clone = blueLutElement.value.slice(0);\n          // @ts-expect-error\n          blueLut = Array.from(new Uint8Array(clone.buffer));\n        }\n      }\n      // set the palette\n      luts['palette'] = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dataElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  _isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  _view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this._isLittleEndian = isLittleEndian;\n    }\n    this._view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this._view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this._view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this._view.setUint16(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this._view.setInt16(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this._view.setUint32(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this._view.setBigUint64(byteOffset, value, this._isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this._view.setInt32(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this._view.setBigInt64(byteOffset, value, this._isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this._view.setFloat32(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this._view.setFloat64(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this._view.setUint16(byteOffset, value, this._isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataElement} from './dataElement';\nimport {DataWriter} from './dataWriter';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Writer rule.\n */\nexport class WriterRule {\n  /**\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\n   *\n   * @type {string}\n   */\n  action;\n  /**\n   * Optional value to use for replace action.\n   *\n   * @type {any|undefined}\n   */\n  value;\n\n  /**\n   * @param {string} action The rule action.\n   */\n  constructor(action) {\n    this.action = action;\n  }\n}\n\n/**\n * Possible writer actions.\n *\n * @type {Object<string, Function>}\n */\nconst writerActions = {\n  copy: function (item) {\n    return item;\n  },\n  remove: function () {\n    return null;\n  },\n  clear: function (item) {\n    item.value = [];\n    return item;\n  },\n  replace: function (item, value) {\n    item.value = [value];\n    return item;\n  }\n};\n\n/**\n * Get simple (non official) DICOM anonymisation rules.\n *\n * @returns {Object<string, WriterRule>} The rules.\n */\nexport function getDefaultAnonymisationRules() {\n  return {\n    default: {action: 'copy', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group '0002'\n    Acquisition: {action: 'copy', value: null}, // group '0018'\n    'Image Presentation': {action: 'copy', value: null}, // group '0028'\n    Procedure: {action: 'copy', value: null}, // group '0040'\n    'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n  };\n}\n\n/**\n * Get a UID for a DICOM tag.\n *\n * Note: Use {@link https://github.com/uuidjs/uuid}?\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_9.html},\n * - {@link http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html},\n * - {@link https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid}.\n *\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n *\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html}.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array.\n *\n * @param {Array} initialArray Array of typed arrays.\n * @returns {object} A typed array containing all values.\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  BitsAllocated: '00280100',\n};\n\n/**\n * DICOM writer.\n *\n * @example\n * // add link to html\n * const link = document.createElement(\"a\");\n * link.appendChild(document.createTextNode(\"download\"));\n * const div = document.getElementById(\"dwv\");\n * div.appendChild(link);\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   const parser = new dwv.DicomParser();\n *   parser.parse(event.target.response);\n *   // create writer\n *   const writer = new dwv.DicomWriter();\n *   // get buffer using default rules\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\n *   // create blob\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\n *   // add blob to download link\n *   link.href = URL.createObjectURL(blob);\n *   link.download = \"anonym.dcm\";\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomWriter {\n\n  /**\n   * Flag to use VR=UN for private sequences, default to false\n   * (mainly used in tests).\n   *\n   * @type {boolean}\n   */\n  _useUnVrForPrivateSq = false;\n\n  /**\n   * Flag to activate or not the vr=UN tag check and fix\n   * if present in the dictionary. Default to true.\n   *\n   * @type {boolean}\n   */\n  _fixUnknownVR = true;\n\n  /**\n   * Default rules: just copy.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  _defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  _rules = this._defaultRules;\n\n  /**\n   * List of compulsory tags keys.\n   *\n   * @type {string[]}\n   */\n  _compulsoryTags = [];\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  _defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  _textEncoder = this._defaultTextEncoder;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this._useUnVrForPrivateSq = flag;\n  }\n\n  /**\n   * Set the vr=UN check and fix flag.\n   *\n   * @param {boolean} flag True to activate the check and fix.\n   */\n  setFixUnknownVR(flag) {\n    this._fixUnknownVR = flag;\n  }\n\n  /**\n   * Set the writing rules.\n   * List of writer rules indexed by either `default`,\n   *   tagKey, tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagKey, tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   *\n   * @param {Object<string, WriterRule>} rules The input rules.\n   * @param {boolean} [addMissingTags] If true, explicit tags that\n   *   have replace rule and a value will be\n   *   added if missing. Defaults to false.\n   */\n  setRules(rules, addMissingTags) {\n    this._rules = rules;\n\n    // default compulsory list is empty\n    this._compulsoryTags = [];\n\n    // use replace rule tags as compulsory tags\n    if (addMissingTags) {\n      const keys = Object.keys(rules);\n      for (const key of keys) {\n        const rule = rules[key];\n        if (rule.action === 'replace' &&\n          typeof rule.value !== 'undefined' &&\n          rule.value !== null) {\n          // check if key really exists\n          let isKey = false;\n          if (key.length === 8) {\n            const tag = getTagFromKey(key);\n            isKey = typeof tag.getNameFromDictionary() !== 'undefined';\n          }\n          // get tag key, rules can use key or tag name\n          let tagKey;\n          if (isKey) {\n            tagKey = key;\n          } else {\n            // try tag name\n            const tag = getTagFromDictionary(key);\n            if (typeof tag !== 'undefined') {\n              tagKey = tag.getKey();\n            }\n          }\n          // add to list\n          if (typeof tagKey !== 'undefined') {\n            this._compulsoryTags.push(tagKey);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  _encodeString(str) {\n    return this._defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  _encodeSpecialString(str) {\n    return this._textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder}.\n     *\n     * @external TextEncoder\n     */\n    this._textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {DataElement} element The element to check.\n   * @returns {DataElement|null} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this._rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this._rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this._rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this._rules[tagName];\n    } else if (typeof this._rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this._rules[groupName];\n    } else {\n      // 4. default\n      rule = this._rules['default'];\n    }\n    // apply action on element and return\n    return writerActions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  _writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item = null;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\n        undefinedLength = item['FFFEE000'].undefinedLength;\n      }\n      const itemElement = new DataElement('NONE');\n      itemElement.vl = undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\n      itemElement.tag = getItemTag();\n      itemElement.value = [];\n      byteOffset = this._writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (let m = 0; m < itemKeys.length; ++m) {\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\n          byteOffset = this._writeDataElement(\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = new DataElement('NONE');\n        itemDelimElement.vl = 0;\n        itemDelimElement.tag = getItemDelimitationItemTag();\n        itemDelimElement.value = [];\n        byteOffset = this._writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  _writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw new Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this._writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else if (element.vr === 'xs') {\n        // TODO would be better to use pixelRepresentation in if\n        if (value instanceof Int16Array) {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        let message = 'Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl;\n        message += ' (';\n        if (typeof element.tag !== 'undefined') {\n          message += element.tag + ', ';\n        }\n        message += 'vr:' + element.vr + ')';\n        logger.warn(message);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  _writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this._writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this._writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  _writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this._useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this._encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this._writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this._writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = new DataElement('NONE');\n      seqDelimElement.vl = 0;\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\n      seqDelimElement.value = [];\n      byteOffset = this._writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dataElements) {\n    // Transfer Syntax\n    const syntax = dataElements[TagKeys.TransferSyntax].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dataElements[TagKeys.SpecificCharacterSet] !== 'undefined') {\n      const oldscs = dataElements[TagKeys.SpecificCharacterSet].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dataElements[TagKeys.SpecificCharacterSet].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dataElements[TagKeys.BitsAllocated] !== 'undefined') {\n      bitsAllocated = dataElements[TagKeys.BitsAllocated].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // missing tag list: start as a copy of compulsory\n    const missingTags = this._compulsoryTags.slice();\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dataElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dataElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // check if compulsory tag, if present remove from missing list\n        const index = missingTags.indexOf(element.tag.getKey());\n        if (index !== -1) {\n          missingTags.splice(index, 1);\n        }\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        if (this._fixUnknownVR) {\n          checkAndFixUnknownVR(element, !isBigEndian);\n        }\n\n        // update value and vl\n        this._setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // add compulsory tags to output data if not present\n    for (const key of missingTags) {\n      const tag = getTagFromKey(key);\n      const dataElement = new DataElement(tag.getVrFromDictionary());\n      dataElement.tag = tag;\n      // rules are indexed by key or tag name\n      let value;\n      if (typeof this._rules[key] !== 'undefined') {\n        value = this._rules[key].value;\n      } else {\n        const name = tag.getNameFromDictionary();\n        value = this._rules[name].value;\n      }\n      // add element\n      let size = getDataElementPrefixByteSize(dataElement.vr, isImplicit);\n      size += this._setElementValue(dataElement, [value], isImplicit);\n      rawElements.push(dataElement);\n      totalSize += size;\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDataElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this._setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDataElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    icUIDSize += this._setElementValue(\n      icUID, [getUID('ImplementationClassUID')], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDataElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = 'DWV_' + getDwvVersion();\n    ivnSize += this._setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this._setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this._encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this._writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this._writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this._writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {DataElement} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  _setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n        let name;\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = {};\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // possible local bitsAllocated\n          let sqBitsAllocated = bitsAllocated;\n          const dataElement = oldItemElements[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this._setElementValue(\n              subElement, subElement.value, isImplicit, sqBitsAllocated);\n            newItemElements[itemKey] = subElement;\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          name = itemElement.tag.getKey();\n          newItemElements[name] = itemElement;\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this._encodeSpecialString(value.join('\\\\'));\n            pad = this._encodeSpecialString(padStr);\n          } else {\n            value = this._encodeString(value.join('\\\\'));\n            pad = this._encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw new Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw new Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: replace \"UN\" with correct VR if the\n * element exists in dictionary.\n *\n * @param {DataElement} element The DICOM element.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n */\nfunction checkAndFixUnknownVR(element, isLittleEndian) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      // cast typed array value from Uint8 to vr type\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined' &&\n        vrType !== 'Uint8' &&\n        vrType !== 'string') {\n        const data = getUint8ToVrValue(\n          element.value, element.vr, isLittleEndian);\n        if (typeof data !== 'undefined') {\n          element.value = data;\n        }\n      }\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get the casted typed array value from Uint8 to vr type.\n *\n * @param {object} value The value to cast.\n * @param {string} vr The DICOM element VR.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n * @returns {object} The element value casted to the vr type.\n */\nfunction getUint8ToVrValue(value, vr, isLittleEndian) {\n  let data;\n  if (typeof value.buffer === 'undefined') {\n    return data;\n  }\n  const reader = new DataReader(value.buffer, isLittleEndian);\n  const offset = value.byteOffset;\n  const vl = value.length; // size before cast\n  const vrType = vrTypes[vr];\n  if (vrType === 'Uint16') {\n    data = reader.readUint16Array(offset, vl);\n  } else if (vrType === 'Uint32') {\n    data = reader.readUint32Array(offset, vl);\n  } else if (vrType === 'Uint64') {\n    data = reader.readUint64Array(offset, vl);\n  } else if (vrType === 'Int16') {\n    data = Array.from(reader.readInt16Array(offset, vl));\n  } else if (vrType === 'Int32') {\n    data = Array.from(reader.readInt32Array(offset, vl));\n  } else if (vrType === 'Int64') {\n    data = reader.readInt64Array(offset, vl);\n  } else if (vrType === 'Float32') {\n    data = Array.from(reader.readFloat32Array(offset, vl));\n  } else if (vrType === 'Float64') {\n    data = Array.from(reader.readFloat64Array(offset, vl));\n  }\n  return data;\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {DataElement} The DICOM element.\n */\nfunction getDataElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  const element = new DataElement(tag.getVrFromDictionary());\n  element.tag = tag;\n  return element;\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a 'simple' DICOM tags object.\n * The input object is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags. See synthetic test data (in tests/dicom) for examples.\n *\n * @param {Object<string, any>} simpleTags The 'simple' DICOM\n *   tags object.\n * @returns {Object<string, DataElement>} The DICOM elements.\n */\nexport function getElementsFromJSONTags(simpleTags) {\n  const keys = Object.keys(simpleTags);\n  const dataElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (typeof tag === 'undefined') {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const simpleTag = simpleTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof simpleTag.undefinedLength !== 'undefined') {\n        undefinedLength = simpleTag.undefinedLength;\n      }\n      if (typeof simpleTag.value !== 'undefined' &&\n        simpleTag.value !== null) {\n        for (let i = 0; i < simpleTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(simpleTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null simpleTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(simpleTag)) {\n        value = simpleTag;\n      } else {\n        value = [simpleTag];\n      }\n    }\n    // create element\n    const dataElement = new DataElement(vr);\n    dataElement.tag = tag;\n    dataElement.value = value;\n    if (undefinedLength) {\n      dataElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dataElements[tag.getKey()] = dataElement;\n  }\n  // return\n  // @ts-expect-error\n  return dataElements;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM code: item of a basic code sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_8.8.html}.\n */\nexport class DicomCode {\n  /**\n   * Code meaning (0008,0104).\n   *\n   * @type {string}\n   */\n  meaning;\n  /**\n   * Code value (0008,0100).\n   *\n   * @type {string|undefined}\n   */\n  value;\n  /**\n   * Long code value (0008,0119).\n   *\n   * @type {string|undefined}\n   */\n  longValue;\n  /**\n   * URN code value (0008,0120).\n   *\n   * @type {string|undefined}\n   */\n  urnValue;\n  /**\n   * Coding scheme designator (0008,0102).\n   *\n   * @type {string|undefined}\n   */\n  schemeDesignator;\n\n  /**\n   * @param {string} meaning The code meaning.\n   */\n  constructor(meaning) {\n    this.meaning = meaning;\n  }\n}\n\n/**\n * Check if two code objects are equal.\n *\n * @param {DicomCode} code1 The first code.\n * @param {DicomCode} code2 The second code.\n * @returns {boolean} True if both codes are equal.\n */\nexport function isEqualCode(code1, code2) {\n  return Object.keys(code1).length === Object.keys(code2).length &&\n  Object.keys(code1).every(key =>\n    Object.prototype.hasOwnProperty.call(code2, key) &&\n    code1[key] === code2[key]\n  );\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomCode} A code object.\n */\nexport function getCode(dataElements) {\n  // meaning -> CodeMeaning (type1)\n  const code = new DicomCode(dataElements['00080104'].value[0]);\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (dataElements['00080100']) {\n    code.value = dataElements['00080100'].value[0];\n  } else if (dataElements['00080119']) {\n    code.longValue = dataElements['00080119'].value[0];\n  } else if (dataElements['00080120']) {\n    code.urnValue = dataElements['00080120'].value[0];\n  } else {\n    throw new Error(\n      'Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (dataElements['00080102']) {\n      code.schemeDesignator = dataElements['00080102'].value[0];\n    } else {\n      throw new Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a simple dicom element item from a code object.\n *\n * @param {DicomCode} code The code object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomCodeItem(code) {\n  // dicom item (tags are in group/element order)\n  const codeItem = {};\n  // value\n  if (code.value !== undefined) {\n    codeItem.CodeValue = code.value;\n  } else if (code.longValue !== undefined) {\n    codeItem.LongCodeValue = code.longValue;\n  } else if (code.urnValue !== undefined) {\n    codeItem.URNCodeValue = code.urnValue;\n  }\n  // CodingSchemeDesignator\n  if (code.schemeDesignator !== undefined) {\n    codeItem.CodingSchemeDesignator = code.schemeDesignator;\n  }\n  // CodeMeaning\n  codeItem.CodeMeaning = code.meaning;\n  // return\n  return codeItem;\n}","import {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab,\n  labToUintLab,\n  srgbToCielab\n} from '../utils/colour';\nimport {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {RGB} from '../utils/colour';\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM (mask) segment: item of a SegmentSequence (0062,0002).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.8.20.4.html}.\n */\nexport class MaskSegment {\n  /**\n   * Segment number (0062,0004).\n   *\n   * @type {number}\n   */\n  number;\n  /**\n   * Segment label (0062,0005).\n   *\n   * @type {string}\n   */\n  label;\n  /**\n   * Segment algorithm type (0062,0008).\n   *\n   * @type {string}\n   */\n  algorithmType;\n  /**\n   * Segment algorithm name (0062,0009).\n   *\n   * @type {string|undefined}\n   */\n  algorithmName;\n  /**\n   * Segment display value as simple value.\n   *\n   * @type {number|undefined}\n   */\n  displayValue;\n  /**\n   * Segment display value as RGB colour ({r,g,b}).\n   *\n   * @type {RGB|undefined}\n   */\n  displayRGBValue;\n  /**\n   * Segment property code: specific property\n   * the segment represents (0062,000F).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyTypeCode;\n  /**\n   * Segment property category code: general category\n   * of the property the segment represents (0062,0003).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyCategoryCode;\n  /**\n   * Segment tracking UID (0062,0021).\n   *\n   * @type {string|undefined}\n   */\n  trackingUid;\n  /**\n   * Segment tracking id: text label for the UID (0062,0020).\n   *\n   * @type {string|undefined}\n   */\n  trackingId;\n\n  /**\n   * @param {number} number The segment number.\n   * @param {string} label The segment label.\n   * @param {string} algorithmType The segment number.\n   */\n  constructor(number, label, algorithmType) {\n    this.number = number;\n    this.label = label;\n    this.algorithmType = algorithmType;\n  }\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MaskSegment} A segment object.\n */\nexport function getSegment(dataElements) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = new MaskSegment(\n    dataElements['00620004'].value[0],\n    dataElements['00620005'] ? dataElements['00620005'].value[0] : 'n/a',\n    dataElements['00620008'].value[0]\n  );\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (dataElements['00620009']) {\n    segment.algorithmName = dataElements['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof dataElements['0062000C'] !== 'undefined') {\n    segment.displayValue = dataElements['006200C'].value[0];\n  } else if (typeof dataElements['0062000D'] !== 'undefined') {\n    const cielabElement = dataElements['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayRGBValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof dataElements['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(dataElements['00620003'].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof dataElements['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(dataElements['0062000F'].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof dataElements['00620020'] !== 'undefined') {\n    segment.trackingId = dataElements['00620020'].value[0];\n    segment.trackingUid = dataElements['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isEqual = isEqual &&\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isEqual = false;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isSimilar = false;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a dicom simple tag from a segment object.\n *\n * @param {MaskSegment} segment The segment object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentItem(segment) {\n  let algoType = segment.algorithmType;\n  if (algoType === undefined) {\n    algoType = 'MANUAL';\n  }\n  // dicom item (tags are in group/element order)\n  const segmentItem = {\n    SegmentNumber: segment.number,\n    SegmentLabel: segment.label,\n    SegmentAlgorithmType: algoType\n  };\n  // SegmentAlgorithmName\n  if (algoType !== 'MANUAL' && segment.algorithmName !== undefined) {\n    segmentItem.SegmentAlgorithmName = segment.algorithmName;\n  }\n  // RecommendedDisplay value\n  if (segment.displayRGBValue) {\n    const cieLab = labToUintLab(srgbToCielab(segment.displayRGBValue));\n    segmentItem.RecommendedDisplayCIELabValue = [\n      Math.round(cieLab.l),\n      Math.round(cieLab.a),\n      Math.round(cieLab.b)\n    ];\n  } else {\n    segmentItem.RecommendedDisplayGrayscaleValue = segment.displayValue;\n  }\n  // SegmentedPropertyCategoryCodeSequence\n  if (segment.propertyCategoryCode) {\n    segmentItem.SegmentedPropertyCategoryCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyCategoryCode)]\n    };\n  }\n  // SegmentedPropertyTypeCodeSequence\n  if (segment.propertyTypeCode) {\n    segmentItem.SegmentedPropertyTypeCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyTypeCode)]\n    };\n  }\n  // tracking\n  if (segment.trackingId) {\n    segmentItem.TrackingID = segment.trackingId;\n    segmentItem.TrackingUID = segment.trackingUid;\n  }\n  // return\n  return segmentItem;\n}\n","import {getSpacingFromMeasure} from './dicomElementsWrapper';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {Spacing} from '../image/spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM segment frame info: item of a\n *  PerframeFunctionalGroupsSequence (5200,9230).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.16.html}.\n */\nexport class DicomSegmentFrameInfo {\n  /**\n   * The dimension index.\n   *\n   * @type {number[]}\n   */\n  dimIndex;\n  /**\n   * The frame image position patient.\n   *\n   * @type {number[]}\n   */\n  imagePosPat;\n  /**\n   * List of derivation images.\n   *\n   * @type {Array}\n   */\n  derivationImages;\n  /**\n   * The reference segment number.\n   *\n   * @type {number}\n   */\n  refSegmentNumber;\n\n  /**\n   * The frame image orientation.\n   *\n   * @type {number[]|undefined}\n   */\n  imageOrientationPatient;\n  /**\n   * The frame spacing.\n   *\n   * @type {Spacing|undefined}\n   */\n  spacing;\n\n  /**\n   * @param {number[]} dimIndex The dimension index.\n   * @param {number[]} imagePosPat The frame image position patient.\n   * @param {Array} derivationImages List of derivation images.\n   * @param {number} refSegmentNumber The reference segment number.\n   */\n  constructor(dimIndex, imagePosPat, derivationImages, refSegmentNumber) {\n    this.dimIndex = dimIndex;\n    this.imagePosPat = imagePosPat;\n    this.derivationImages = derivationImages;\n    this.refSegmentNumber = refSegmentNumber;\n  }\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSegmentFrameInfo} A frame information object.\n */\nexport function getSegmentFrameInfo(dataElements) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof dataElements['00089124'] !== 'undefined') {\n    const derivationImageSq = dataElements['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push({\n        sourceImages: sourceImages\n      });\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = dataElements['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = dataElements['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = parseInt(segmentIdSq[0]['0062000B'].value[0], 0);\n  // Plane Position Sequence (required, only one)\n  const planePosSq = dataElements['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = new DicomSegmentFrameInfo(\n    dimIndex,\n    imagePosPat,\n    derivationImages,\n    refSegmentNumber\n  );\n  // Plane Orientation Sequence\n  if (typeof dataElements['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = dataElements['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof dataElements['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = dataElements['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Check if two frame info objects are equal.\n *\n * @param {DicomSegmentFrameInfo} dsfi1 The first frame info.\n * @param {DicomSegmentFrameInfo} dsfi2 The second frame info.\n * @returns {boolean} True if both frame info are equal.\n */\nexport function isEqualSegmentFrameInfo(dsfi1, dsfi2) {\n  // basics\n  if (typeof dsfi1 === 'undefined' ||\n    typeof dsfi2 === 'undefined' ||\n    dsfi1 === null ||\n    dsfi2 === null) {\n    return false;\n  }\n  let isEqual =\n    arrayEquals(dsfi1.dimIndex, dsfi2.dimIndex) &&\n    arrayEquals(dsfi1.imagePosPat, dsfi2.imagePosPat) &&\n    dsfi1.refSegmentNumber === dsfi2.refSegmentNumber;\n\n  isEqual = isEqual &&\n    dsfi1.derivationImages.length === dsfi2.derivationImages.length;\n  for (let i = 0; i < dsfi1.derivationImages.length; ++i) {\n    const derivationImage1 = dsfi1.derivationImages[i];\n    const derivationImage2 = dsfi2.derivationImages[i];\n    isEqual = isEqual &&\n      derivationImage1.sourceImages.length ===\n        derivationImage2.sourceImages.length;\n    for (let j = 0; j < derivationImage1.length; ++j) {\n      const sourceImage1 = derivationImage1.sourceImages[j];\n      const sourceImage2 = derivationImage2.sourceImages[j];\n      isEqual = isEqual &&\n        sourceImage1.referencedSOPClassUID ===\n          sourceImage2.referencedSOPClassUID &&\n        sourceImage1.referencedSOPInstanceUID ===\n          sourceImage2.referencedSOPInstanceUID;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Get a dicom item from a frame information object.\n *\n * @param {object} frameInfo The frame information object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentFrameInfoItem(frameInfo) {\n  const item = {\n    FrameContentSequence: {\n      value: [\n        {\n          DimensionIndexValues: frameInfo.dimIndex\n        }\n      ]\n    },\n    PlanePositionSequence: {\n      value: [\n        {\n          ImagePositionPatient: frameInfo.imagePosPat\n        }\n      ]\n    },\n    SegmentIdentificationSequence: {\n      value: [\n        {\n          ReferencedSegmentNumber: frameInfo.refSegmentNumber\n        }\n      ]\n    }\n  };\n  // optional DerivationImageSequence\n  if (frameInfo.derivationImages !== undefined) {\n    const sourceImgPurposeOfReferenceCode = {\n      CodeMeaning: 'Source image for image processing operation',\n      CodeValue: 121_322,\n      CodingSchemeDesignator: 'DCM'\n    };\n    const segDerivationCode = {\n      CodeMeaning: 'Segmentation',\n      CodeValue: 113_076,\n      CodingSchemeDesignator: 'DCM'\n    };\n\n    const derivationImageItems = [];\n    for (const derivationImage of frameInfo.derivationImages) {\n      const sourceImages = [];\n      for (const sourceImage of derivationImage.sourceImages) {\n        sourceImages.push({\n          PurposeOfReferenceCodeSequence: {\n            value: [sourceImgPurposeOfReferenceCode]\n          },\n          ReferencedSOPClassUID: sourceImage.referencedSOPClassUID,\n          ReferencedSOPInstanceUID: sourceImage.referencedSOPInstanceUID\n        });\n      }\n\n      derivationImageItems.push({\n        DerivationCodeSequence: {\n          value: [segDerivationCode]\n        },\n        SourceImageSequence: {\n          value: sourceImages\n        }\n      });\n    }\n\n    item.DerivationImageSequence = {\n      value: derivationImageItems\n    };\n  }\n\n  return item;\n}\n","import {\n  getImage2DSize,\n  getSpacingFromMeasure,\n  getDimensionOrganization,\n  getDicomDate,\n  getDicomTime,\n  getDicomMeasureItem,\n  getDicomPlaneOrientationItem\n} from '../dicom/dicomElementsWrapper';\nimport {Tag} from '../dicom/dicomTag';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {\n  getSegment,\n  getDicomSegmentItem,\n} from '../dicom/dicomSegment';\nimport {\n  getSegmentFrameInfo,\n  getDicomSegmentFrameInfoItem\n} from '../dicom/dicomSegmentFrameInfo';\nimport {transferSyntaxKeywords} from '../dicom/dictionary';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {Point, Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {Size} from './size';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(dataElements, tagDefinition) {\n  const element = dataElements[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * Create ROI slice buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @param {number} sliceOffset The slice offset.\n * @returns {object} The ROI slice image buffers.\n */\nfunction createRoiSliceBuffers(\n  image,\n  segments,\n  sliceOffset\n) {\n  // access functions\n  const numberOfComponents = image.getNumberOfComponents();\n  const isRGB = numberOfComponents === 3;\n  let getPixelValue;\n  let equalValues;\n  if (isRGB) {\n    getPixelValue = function (inputOffset) {\n      return {\n        r: image.getValueAtOffset(inputOffset),\n        g: image.getValueAtOffset(inputOffset + 1),\n        b: image.getValueAtOffset(inputOffset + 2)\n      };\n    };\n    equalValues = function (value, segment) {\n      return (\n        segment.displayRGBValue !== undefined &&\n        value.r === segment.displayRGBValue.r &&\n        value.g === segment.displayRGBValue.g &&\n        value.b === segment.displayRGBValue.b\n      );\n    };\n  } else {\n    getPixelValue = function (inputOffset) {\n      return image.getValueAtOffset(inputOffset);\n    };\n    equalValues = function (value, segment) {\n      return value === segment.displayValue;\n    };\n  }\n\n  // create binary mask buffers\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n  const sliceSize = size.getDimSize(2);\n  const buffers = {};\n  for (let o = 0; o < sliceSize; ++o) {\n    const inputOffset = (sliceOffset + o) * numberOfComponents;\n    const pixelValue = getPixelValue(inputOffset);\n    for (const segment of segments) {\n      const number2 = segment.number - 1;\n      if (equalValues(pixelValue, segment)) {\n        if (buffers[number2] === undefined) {\n          buffers[number2] = new Uint8Array(sliceSize);\n        }\n        buffers[number2][o] = 1;\n      }\n    }\n  }\n  return buffers;\n}\n\n/**\n * Create ROI buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @returns {object} The ROI buffers.\n */\nfunction createRoiBuffers(image, segments) {\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n\n  // image buffer to multi frame\n  const sliceSize = size.getDimSize(2);\n  const roiBuffers = {};\n  for (let k = 0; k < size.get(2); ++k) {\n    const sliceOffset = k * sliceSize;\n    // create slice buffers\n    const buffers = createRoiSliceBuffers(image, segments, sliceOffset);\n    // store slice buffers\n    const keys0 = Object.keys(buffers);\n    for (const key0 of keys0) {\n      if (roiBuffers[key0] === undefined) {\n        roiBuffers[key0] = {};\n      }\n      // ordering by slice index (follows posPat)\n      roiBuffers[key0][k] = buffers[key0];\n    }\n  }\n  return roiBuffers;\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: '00020010',\n    type: '1',\n    enum: [\n      transferSyntaxKeywords.ImplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRBigEndian\n    ]\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: '00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: '00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: '00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: '00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: '00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: '00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: '00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: '00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: '00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: '00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nexport function getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  _warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this._warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {Object<string, DataElement>} _dicomElements The DICOM tags.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n    return;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dataElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dataElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dataElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dataElements);\n\n    // Segment Sequence\n    const segSequence = dataElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayRGBValue !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dataElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dataElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (spacing.length() !== 3) {\n      throw new Error('Incomplete spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n    if (imageOrientationPatient.length !== 6) {\n      throw new Error('Incomplete imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isAboveEpsilon = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isAboveEpsilon(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n    const uids = ['0'];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m.toString());\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = frameSegment.displayRGBValue.r;\n            buffer[offset + 1] = frameSegment.displayRGBValue.g;\n            buffer[offset + 2] = frameSegment.displayRGBValue.b;\n          } else {\n            buffer[offset] = frameSegment.displayValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesDate = safeGet('00080021');\n    meta.SeriesTime = safeGet('00080031');\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // Enhanced General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dataElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dataElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dataElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n  /**\n   * Convert a mask image into a DICOM segmentation object.\n   *\n   * @param {Image} image The mask image.\n   * @param {MaskSegment[]} segments The mask segments.\n   * @param {Image} sourceImage The source image.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(\n    image,\n    segments,\n    sourceImage,\n    extraTags\n  ) {\n    // original image tags\n    const tags = image.getMeta();\n\n    // use image segments if not provided as input\n    if (segments === undefined) {\n      segments = tags.segments;\n    }\n\n    const geometry = image.getGeometry();\n    const size = geometry.getSize();\n\n    // (not in meta)\n    tags.Rows = size.get(1);\n    tags.Columns = size.get(0);\n    // update content tags\n    const now = new Date();\n    tags.ContentDate = getDicomDate(now);\n    tags.ContentTime = getDicomTime(now);\n\n    // keep source image StudyInstanceUID\n    if (sourceImage !== undefined) {\n      tags.StudyInstanceUID = (sourceImage.getMeta()).StudyInstanceUID;\n    }\n\n    // segments\n    const segmentItems = [];\n    for (const segment of segments) {\n      segmentItems.push(getDicomSegmentItem(segment));\n    }\n    tags.SegmentSequence = {\n      value: segmentItems\n    };\n\n    // Shared Functional Groups Sequence\n    tags.SharedFunctionalGroupsSequence = {\n      value: [\n        {\n          PlaneOrientationSequence: {\n            value: [getDicomPlaneOrientationItem(geometry.getOrientation())]\n          },\n          PixelMeasuresSequence: {\n            value: [getDicomMeasureItem(geometry.getSpacing())]\n          }\n        }\n      ]\n    };\n\n    // image buffer to multi frame\n    const roiBuffers = createRoiBuffers(image, segments);\n\n    const frameInfos = [];\n\n    // flatten buffer array\n    const finalBuffers = [];\n    const referencedSOPs = [];\n    for (const segment of segments) {\n      const number40 = segment.number;\n      const number4 = number40 - 1;\n      // check if buffer has values\n      if (roiBuffers[number4] === undefined) {\n        continue;\n      }\n      const keys1 = Object.keys(roiBuffers[number4]);\n      // revert slice order\n      for (let k1 = keys1.length - 1; k1 >= 0; --k1) {\n        const key1 = Number.parseInt(keys1[k1], 10);\n        finalBuffers.push(roiBuffers[number4][key1]);\n        // frame info\n        const posPat = image.getGeometry().getOrigins()[key1];\n        const posPatArray = [posPat.getX(), posPat.getY(), posPat.getZ()];\n        const frameInfo = {\n          dimIndex: [number40, keys1.length - k1],\n          imagePosPat: posPatArray,\n          refSegmentNumber: number40\n        };\n        // derivation image info\n        if (sourceImage !== undefined) {\n          const sourceGeometry = sourceImage.getGeometry();\n          const sourceIndex = sourceGeometry.worldToIndex(\n            new Point([posPat.getX(), posPat.getY(), posPat.getZ()])\n          );\n          frameInfo.derivationImages = [\n            {\n              sourceImages: [\n                {\n                  referencedSOPInstanceUID:\n                    sourceImage.getImageUid(sourceIndex),\n                  referencedSOPClassUID:\n                    (sourceImage.getMeta()).SOPClassUID\n                }\n              ]\n            }\n          ];\n          // store as tag\n          referencedSOPs.push({\n            ReferencedSOPInstanceUID:\n              sourceImage.getImageUid(sourceIndex),\n            ReferencedSOPClassUID:\n              (sourceImage.getMeta()).SOPClassUID\n          });\n        }\n        frameInfos.push(frameInfo);\n      }\n    }\n\n    tags.NumberOfFrames = finalBuffers.length.toString();\n\n    // frame infos\n    const frameInfosTag = [];\n    for (const frameInfo of frameInfos) {\n      frameInfosTag.push(getDicomSegmentFrameInfoItem(frameInfo));\n    }\n    tags.PerFrameFunctionalGroupsSequence = {\n      value: frameInfosTag\n    };\n\n    // also store referenced SOPs in ReferencedSeriesSequence\n    if (sourceImage !== undefined) {\n      const refSeriesTag = [];\n      refSeriesTag.push({\n        ReferencedInstanceSequence: {\n          value: referencedSOPs\n        },\n        SeriesInstanceUID: (sourceImage.getMeta()).SeriesInstanceUID\n      });\n      tags.ReferencedSeriesSequence = {\n        value: refSeriesTag\n      };\n    }\n\n    // merge extra tags if provided\n    if (extraTags !== undefined) {\n      mergeTags(tags, extraTags);\n    }\n\n    // convert JSON to DICOM element object\n    const dicomElements = getElementsFromJSONTags(tags);\n\n    // pixel value length: divide by 8 to trigger binary write\n    const sliceSize = size.getDimSize(2);\n    const pixVl = (finalBuffers.length * sliceSize) / 8;\n    const de = new DataElement('OB');\n    de.tag = new Tag('7FE0', '0010');\n    de.vl = pixVl;\n    de.value = finalBuffers;\n    dicomElements['7FE00010'] = de;\n\n    return dicomElements;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {arrayContains} from '../utils/array';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\nimport {NumberRange} from '../math/stats';\nimport {DataElement} from '../dicom/dataElement';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  _geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  _buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {string[]}\n   */\n  _imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  _rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  _rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  _isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  _isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  _photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (`0:RGBRGBRGBRGB...` or\n   *   `1:RRR...GGG...BBB...`).\n   *\n   * @type {number}\n   */\n  _planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  _numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {Object<string, any>}\n   */\n  _meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {NumberRange}\n   */\n  _dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {NumberRange}\n   */\n  _rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  _histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {string[]} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this._geometry = geometry;\n    this._buffer = buffer;\n    this._imageUids = imageUids;\n\n    this._numberOfComponents = this._buffer.length / (\n      this._geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this._imageUids[0];\n    if (this._imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this._imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Check if this image includes the input uids.\n   *\n   * @param {string[]} uids UIDs to test for presence.\n   * @returns {boolean} True if all uids are in this image uids.\n   */\n  containsImageUids(uids) {\n    return arrayContains(this._imageUids, uids);\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this._geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo Dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this._buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this._meta.numberOfFiles !== 'undefined') {\n      nFiles = this._meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  _getSecondaryOffsetMax() {\n    return this._geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this._geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this._rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this._rsis[offset] !== 'undefined') {\n        res = this._rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  _getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this._rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this._isIdentityRSI = this._isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this._isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this._rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this._rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this._rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this._isConstantRSI = false;\n          // switch to non constant mode\n          this._rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this._getSecondaryOffsetMax(); i < leni; ++i) {\n            this._rsis.push(this._rsi);\n          }\n          // store\n          this._rsi = null;\n          this._rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this._isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this._isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this._photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this._photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this._planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this._planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this._numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {Object<string, any>} The meta information of the image.\n   */\n  getMeta() {\n    return this._meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {Object<string, any>} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this._meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this._buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|RGB} value The value to check.\n   * @returns {number[]} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this._numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for getting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this._numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for getting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this._buffer.length; i = i + this._numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this._numberOfComponents; ++j) {\n        if (this._buffer[i + j] !== bufferValue[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {boolean[]} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this._numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this._numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this._numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this._numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this._buffer.length;\n      i < leni; i = i + this._numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this._numberOfComponents; ++j) {\n          if (this._buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this._buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this._imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this._getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this._getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  _realloc(size) {\n    // save buffer\n    let tmpBuffer = this._buffer;\n    // create new\n    this._buffer = getTypedArray(\n      this._buffer.BYTES_PER_ELEMENT * 8,\n      this._meta.IsSigned ? 1 : 0,\n      size);\n    if (this._buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this._buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   * @fires Image_imagegeometrychange\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this._geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this._geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this._photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this._meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this._meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key +\n          ': ' + this._meta[key] + ' != ' + rhs.getMeta()[key]);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this._dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this._rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this._geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this._geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this._geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this._numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this._meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this._meta.numberOfFiles;\n    if (this._buffer.length !== fullBufferSize) {\n      this._realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this._geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this._geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this._buffer.set(\n        this._buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this._buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this._geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this._imageUids.length;\n\n    // insert sop instance UIDs\n    this._imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this._meta.windowPresets !== 'undefined') {\n      const windowPresets = this._meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n    /**\n     * Image geometry change event.\n     *\n     * @event Image_imagegeometrychange\n     * @type {object}\n     */\n    this._fireEvent({type: 'imagegeometrychange'});\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this._geometry.getSize();\n    const frameSize = this._numberOfComponents * size.getDimSize(2);\n    if (typeof this._meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this._meta.numberOfFiles;\n    if (this._buffer.length !== fullBufferSize) {\n      this._realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this._meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this._meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this._buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this._geometry.appendFrame(origin, time);\n    this._fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {NumberRange} The data range.\n   */\n  getDataRange() {\n    if (!this._dataRange) {\n      this._dataRange = this.calculateDataRange();\n    }\n    return this._dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {NumberRange} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this._rescaledDataRange) {\n      this._rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this._rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this._histogram) {\n      const res = this.calculateHistogram();\n      this._dataRange = res.dataRange;\n      this._rescaledDataRange = res.rescaledDataRange;\n      this._histogram = res.histogram;\n    }\n    return this._histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[]} offsets List of offsets where to set the data.\n   * @param {number|RGB} value The value to set at the given offsets.\n   * @fires Image_imagecontentchange\n   */\n  setAtOffsets(offsets, value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this._numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for setting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this._numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for setting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      for (let j = 0; j < this._numberOfComponents; ++j) {\n        this._buffer[offset + j] = bufferValue[j];\n      }\n    }\n    // fire imagecontentchange\n    this._fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists where\n   *   to set the data.\n   * @param {RGB} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image_imagecontentchange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this._buffer[offset],\n        g: this._buffer[offset + 1],\n        b: this._buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this._buffer[offset],\n          g: this._buffer[offset + 1],\n          b: this._buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this._buffer[offset] = value.r;\n        this._buffer[offset + 1] = value.g;\n        this._buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagecontentchange\n    this._fireEvent({type: 'imagecontentchange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists\n   *   where to set the data.\n   * @param {RGB|Array} value The value to set at the given offsets.\n   * @fires Image_imagecontentchange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (Array.isArray(value)) {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      } else if (typeof value.r !== 'undefined' &&\n        typeof value.g !== 'undefined' &&\n        typeof value.b !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this._buffer[offset] = ival.value.r;\n        this._buffer[offset + 1] = ival.value.g;\n        this._buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image_imagecontentchange\n     * @type {object}\n     */\n    this._fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {View} from './view';\nimport {luts} from './luts';\nimport {\n  WindowLevel,\n  defaultPresets\n} from './windowLevel';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dataElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setColourMap('invPlain');\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      if (typeof luts['palette'] !== 'undefined') {\n        view.setColourMap('palette');\n      } else {\n        logger.warn('Cannot find Palette lut');\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowLevel(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {ModalityLut} from './modalityLut';\nimport {WindowLut} from './windowLut';\nimport {luts} from './luts';\nimport {VoiLut} from './voiLut';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ColourMap} from './luts';\nimport {Matrix33} from '../math/matrix';\nimport {\n  Point,\n  Point3D\n} from '../math/point';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {string[]}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourmapchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  _image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {WindowLut}\n   */\n  _windowLut;\n\n  /**\n   * Flag for image constant RSI.\n   *\n   * @type {boolean}\n   */\n  _isConstantRSI;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  _windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  _currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {WindowLevel}\n   */\n  _currentWl;\n\n  /**\n   * Colour map name.\n   *\n   * @type {string}\n   */\n  _colourMapName = 'plain';\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  _currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {Matrix33}\n   */\n  _orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this._image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this._image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this._image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this._image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this._orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this._orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to the middle position.\n   */\n  setInitialIndex() {\n    const geometry = this._image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {number[]|number} _value The pixel value.\n   *   Can be a number for monochrome data or an array for RGB data.\n   * @param {number} _index The index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  _alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this._alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View_alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this._alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View_alphafuncchange\n     * @type {object}\n     */\n    this._fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View_wlchange\n   */\n  _getCurrentWindowLut() {\n    // special case for 'perslice' presets\n    if (this._currentPresetName &&\n      typeof this._windowPresets[this._currentPresetName] !== 'undefined' &&\n      typeof this._windowPresets[this._currentPresetName].perslice !==\n        'undefined' &&\n      this._windowPresets[this._currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      // get the slice window level\n      const currentIndex = this.getCurrentIndex();\n      const offset = this._image.getSecondaryOffset(currentIndex);\n      const currentPreset = this._windowPresets[this._currentPresetName];\n      const sliceWl = currentPreset.wl[offset];\n      // set window level: will send a change event, mark it as silent as\n      // this change is always triggered by a position change\n      this.setWindowLevel(sliceWl, this._currentPresetName, true);\n    }\n\n    // if no current, use first id\n    if (typeof this._currentWl === 'undefined') {\n      this.setWindowLevelPresetById(0, true);\n    }\n\n    // get the window lut\n    if (typeof this._isConstantRSI === 'undefined' ||\n      this._image.isConstantRSI() !== this._isConstantRSI) {\n      this._isConstantRSI = this._image.isConstantRSI();\n      // set or update windowLut if isConstantRSI has changed\n      // (can be different at first slice and after having loaded\n      //  the full volume...)\n      let rsi;\n      let isDiscrete;\n      if (this._isConstantRSI) {\n        rsi = this._image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const modalityLut = new ModalityLut(\n        rsi,\n        this._image.getMeta().BitsStored);\n      // create the window lookup table\n      this._windowLut = new WindowLut(\n        modalityLut,\n        this._image.getMeta().IsSigned,\n        isDiscrete);\n    }\n\n    // update VOI lut if not present or its window level\n    // is different from the current one\n    const voiLut = this._windowLut.getVoiLut();\n    let voiLutWl;\n    if (typeof voiLut !== 'undefined') {\n      voiLutWl = voiLut.getWindowLevel();\n    }\n    if (typeof voiLut === 'undefined' ||\n      !this._currentWl.equals(voiLutWl)) {\n      // set lut window level\n      const voiLut = new VoiLut(this._currentWl);\n      this._windowLut.setVoiLut(voiLut);\n    }\n\n    // return\n    return this._windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this._windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {string[]} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this._windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this._windowPresets = presets;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this._windowPresets[key] !== 'undefined') {\n        if (typeof this._windowPresets[key].perslice !== 'undefined' &&\n          this._windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this._windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this._windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View_wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this._fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this._currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this._colourMapName;\n  }\n\n  /**\n   * Get the colour map object.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  _getColourMapLut() {\n    return luts[this._colourMapName];\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {string} name The colour map name.\n   * @fires View_colourmapchange\n   */\n  setColourMap(name) {\n    // check if we have it\n    if (!luts[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n\n    this._colourMapName = name;\n\n    /**\n     * Color change event.\n     *\n     * @event View_colourmapchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this._fireEvent({\n      type: 'colourmapchange',\n      value: [name]\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this._currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    if (typeof position === 'undefined') {\n      position = this._currentPosition;\n    }\n    const geometry = this._image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this._image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View_positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this._image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this._currentPosition = position;\n        // fire event with valid: false\n        this._fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View_positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this._image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this._currentPosition = position;\n        // fire event with valid: false\n        this._fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this._currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View_positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {number[]} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this._image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this._image.canQuantify()) {\n        const pixValue = this._image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this._fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View_wlchange\n   */\n  setWindowLevel(wl, name, silent) {\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (name !== 'manual' &&\n      typeof this._windowPresets[name] === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // check if new wl\n    const isNewWl = !wl.equals(this._currentWl);\n    // check if new name\n    const isNewName = this._currentPresetName !== name;\n\n    // compare to previous if present\n    if (isNewWl || isNewName) {\n      // assign\n      this._currentWl = wl;\n      this._currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this._windowPresets[name] !== 'undefined') {\n          this._windowPresets[name].wl[0] = wl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [wl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      /**\n       * Window/level change event.\n       *\n       * @event View_wlchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       * @property {number} wc The new window center value.\n       * @property {number} ww The new window wdth value.\n       * @property {boolean} skipGenerate Flag to skip view generation.\n       */\n      this._fireEvent({\n        type: 'wlchange',\n        value: [wl.center, wl.width, name],\n        wc: wl.center,\n        ww: wl.width,\n        skipGenerate: silent\n      });\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    // same as _currentWl...\n    const windowLut = this._getCurrentWindowLut();\n    return windowLut.getVoiLut().getWindowLevel();\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this._image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(wl, name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowLevel} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl, 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this._getCurrentWindowLut(),\n        this._getColourMapLut()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this._getColourMapLut(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class View\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLut} from './windowLut';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {WindowLut} windowLut The window/level LUT.\n * @param {ColourMap} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {ColourMap} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  _spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  _imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  _viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  _targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this._spacing = spacing;\n    this._imageOrientation = imageOrientation;\n    this._viewOrientation = viewOrientation;\n\n    this._targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this._spacing.get(0),\n      pixelOffset.getY() * this._spacing.get(1),\n      pixelOffset.getZ() * this._spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {Scalar3D} offset3D The 3D offset as {x,y,z}.\n   * @returns {Scalar2D} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this._spacing.get(0),\n      offset3D.y / this._spacing.get(1),\n      offset3D.z / this._spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this._targetOrientation !== 'undefined') {\n      planeVector =\n        this._targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this._targetOrientation !== 'undefined') {\n      vector = this._targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this._targetOrientation !== 'undefined') {\n      point = this._targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this._viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this._viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this._viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this._viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this._viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this._viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this._viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this._viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {Scalar3D} values Values as {x,y,z}.\n   * @returns {Scalar3D} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this._targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this._viewOrientation !== 'undefined') {\n      index = this._viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this._imageOrientation !== 'undefined') {\n      index = this._imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33} from '../math/matrix';\nimport {getCoronalMat33} from '../math/orientation';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {precisionRound} from '../utils/string';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point2D, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {Scalar2D} offset The previous offset as {x,y}.\n * @param {Scalar2D} scale The previous scale as {x,y}.\n * @param {Scalar2D} newScale The new scale as {x,y}.\n * @param {Scalar2D} center The scale center as {x,y}.\n * @returns {Scalar2D} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * - Display position: {x,y},\n * - Plane position: Index (access: get(i)),\n * - (world) Position: Point3D (access: getX, getY, getZ).\n *\n * Display -> World:\n * - planePos = viewLayer.displayToPlanePos(displayPos)\n *   -> compensate for layer scale and offset,\n * - pos = viewController.getPositionFromPlanePoint(planePos).\n *\n * World -> Display:\n * - planePos = viewController.getOffset3DFromPlaneOffset(pos)\n *   no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  _containerDiv;\n\n  // jsdoc does not like\n  // @type {(ViewLayer|DrawLayer)[]}\n\n  /**\n   * List of layers.\n   *\n   * @type {Array<ViewLayer|DrawLayer>}\n   */\n  _layers = [];\n\n  /**\n   * The layer scale as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  _scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y,z}: all posterior scale will be on top of this one.\n   *\n   * @type {Scalar3D}\n   */\n  _baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  _offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  _activeViewLayerIndex = undefined;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  _activeDrawLayerIndex = undefined;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  _showCrosshair = false;\n\n  /**\n   * Crosshair HTML elements.\n   *\n   * @type {HTMLElement[]}\n   */\n  _crosshairHtmlElements = [];\n\n  /**\n   * Tooltip HTML element.\n   *\n   * @type {HTMLElement}\n   */\n  _tooltipHtmlElement;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  _currentPosition;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  _imageSmoothing = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this._containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this._showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this._showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this._updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this._updateCrosshairOnChange);\n      // show crosshair div\n      this._showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this._updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this._updateCrosshairOnChange);\n      // remove crosshair div\n      this._removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this._imageSmoothing = flag;\n    // set for existing layers\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        layer.setImageSmoothing(flag);\n      }\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  _updateCrosshairOnChange = (_event) => {\n    this._showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this._containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this._scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this._baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this._scale.x / this._baseScale.x,\n      y: this._scale.y / this._baseScale.y,\n      z: this._scale.z / this._baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this._offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    let count = 0;\n    this._layers.forEach(item => {\n      if (typeof item !== 'undefined') {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Check if this layerGroup contains a layer with the input id.\n   *\n   * @param {string} id The layer id to look for.\n   * @returns {boolean} True if this group contains\n   *   a layer with the input id.\n   */\n  includes(id) {\n    if (typeof id === 'undefined') {\n      return false;\n    }\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getId() === id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the number of view layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfViewLayers() {\n    let count = 0;\n    this._layers.forEach(item => {\n      if (typeof item !== 'undefined' &&\n        item instanceof ViewLayer) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getActiveViewLayer() {\n    let layer;\n    if (typeof this._activeViewLayerIndex !== 'undefined') {\n      const tmpLayer = this._layers[this._activeViewLayerIndex];\n      if (tmpLayer instanceof ViewLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active view layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the base view layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getBaseViewLayer() {\n    let layer;\n    if (this._layers[0] instanceof ViewLayer) {\n      layer = this._layers[0];\n    }\n    return layer;\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        if (layer.getViewController().equalImageMeta(meta)) {\n          res.push(layer);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {string[]} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        res.push(layer.getDataId());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getActiveDrawLayer() {\n    let layer;\n    if (typeof this._activeDrawLayerIndex !== 'undefined') {\n      const tmpLayer = this._layers[this._activeDrawLayerIndex];\n      if (tmpLayer instanceof DrawLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active draw layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this._layers) {\n      if (layer instanceof DrawLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    if (this._layers[index] instanceof ViewLayer) {\n      this._activeViewLayerIndex = index;\n      /**\n       * Active view layer change event.\n       *\n       * @event LayerGroup_activeviewlayerchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       */\n      this._fireEvent({\n        type: 'activelayerchange',\n        value: [this._layers[index]]\n      });\n    } else {\n      logger.warn('No view layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active view layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveViewLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this._layers.length; ++i) {\n      if (this._layers[i] instanceof ViewLayer &&\n        this._layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveViewLayer(index);\n    } else {\n      logger.warn('No view layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    if (this._layers[index] instanceof DrawLayer) {\n      this._activeDrawLayerIndex = index;\n      this._fireEvent({\n        type: 'activelayerchange',\n        value: [this._layers[index]]\n      });\n    } else {\n      logger.warn('No draw layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active draw layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveDrawLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this._layers.length; ++i) {\n      if (this._layers[i] instanceof DrawLayer &&\n        this._layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveDrawLayer(index);\n    } else {\n      logger.warn('No draw layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * The new layer will be marked as the active view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this._layers.length;\n    // create div\n    const div = this._getNextLayerDiv();\n    // prepend to container\n    this._containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    layer.setImageSmoothing(this._imageSmoothing);\n    // add layer\n    this._layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this._bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * The new layer will be marked as the active draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this._activeDrawLayerIndex = this._layers.length;\n    // create div\n    const div = this._getNextLayerDiv();\n    // prepend to container\n    this._containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this._layers.push(layer);\n    // bind draw layer events\n    this._bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  _bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.addEventListener(eventName, this._fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this._fireEvent);\n    viewLayer.addEventListener('renderend', this._fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  _unbindViewLayer(viewLayer) {\n    // stop listening to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // stop propagating view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.removeEventListener(eventName, this._fireEvent);\n    }\n    // stop propagating viewLayer events\n    viewLayer.removeEventListener('renderstart', this._fireEvent);\n    viewLayer.removeEventListener('renderend', this._fireEvent);\n\n    // stop view layer - image binding\n    // (binding is done in layer.setView)\n    viewLayer.unbindImage();\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  _bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this._fireEvent);\n    drawLayer.addEventListener('drawdelete', this._fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  _unbindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.removeEventListener('drawcreate', this._fireEvent);\n    drawLayer.removeEventListener('drawdelete', this._fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  _getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this._layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this._layers = [];\n    // reset active indices\n    this._activeViewLayerIndex = undefined;\n    this._activeDrawLayerIndex = undefined;\n    // remove possible crosshair\n    this._removeCrosshairDiv();\n    // clean container div\n    const previous = this._containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getDataId() === dataId) {\n        this.removeLayer(layer);\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   * Warning: if current active layer, the index will\n   *   be set to `undefined`. Call one of the setActive\n   *   methods to define the active index.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this._layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer to remove');\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this._unbindViewLayer(layer);\n      if (this._activeViewLayerIndex === index) {\n        if (index - 2 >= 0) {\n          this.setActiveViewLayer(index - 2);\n        } else {\n          this._activeViewLayerIndex = undefined;\n        }\n      }\n    } else {\n      // delete layer draws\n      const numberOfDraws = layer.getNumberOfDraws();\n      if (typeof numberOfDraws !== 'undefined') {\n        let count = 0;\n        layer.addEventListener('drawdelete', (_event) => {\n          ++count;\n          // unbind when all draw are deleted\n          if (count === numberOfDraws) {\n            this._unbindDrawLayer(layer);\n          }\n        });\n      }\n      layer.deleteDraws();\n      if (typeof numberOfDraws === 'undefined') {\n        this._unbindDrawLayer(layer);\n      }\n      // reset active index\n      if (this._activeDrawLayerIndex === index) {\n        if (index - 2 >= 0) {\n          this.setActiveDrawLayer(index - 2);\n        } else {\n          this._activeDrawLayerIndex = undefined;\n        }\n      }\n    }\n    // reset in storage\n    this._layers[index] = undefined;\n    // update html\n    layer.removeFromDOM();\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  _showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this._currentPosition;\n    }\n\n    // remove previous\n    this._removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer to show crosshair');\n      return;\n    }\n\n    const vc = baseLayer.getViewController();\n    const planePos = vc.getPlanePositionFromPosition(position);\n    const displayPos = baseLayer.planePosToDisplay(planePos);\n\n    // horizontal line\n    if (typeof displayPos.getY() !== 'undefined') {\n      const lineH = document.createElement('hr');\n      lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n      lineH.className = 'horizontal';\n      lineH.style.width = this._containerDiv.offsetWidth + 'px';\n      lineH.style.left = '0px';\n      lineH.style.top = displayPos.getY() + 'px';\n      // add to local array\n      this._crosshairHtmlElements.push(lineH);\n      // add to html\n      this._containerDiv.appendChild(lineH);\n    }\n\n    // vertical line\n    if (typeof displayPos.getX() !== 'undefined') {\n      const lineV = document.createElement('hr');\n      lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n      lineV.className = 'vertical';\n      lineV.style.width = this._containerDiv.offsetHeight + 'px';\n      lineV.style.left = (displayPos.getX()) + 'px';\n      lineV.style.top = '0px';\n      // add to local array\n      this._crosshairHtmlElements.push(lineV);\n      // add to html\n      this._containerDiv.appendChild(lineV);\n    }\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  _removeCrosshairDiv() {\n    for (const element of this._crosshairHtmlElements) {\n      element.remove();\n    }\n    this._crosshairHtmlElements = [];\n  }\n\n  /**\n   * Displays a tooltip in a temporary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {Point2D} point The update point.\n   */\n  showTooltip(point) {\n    // remove previous div\n    this.removeTooltipDiv();\n\n    const viewLayer = this.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // tooltip position\n      span.style.left = (point.getX() + 10) + 'px';\n      span.style.top = (point.getY() + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n      // add to local var\n      this._tooltipHtmlElement = span;\n      // add to html\n      this._containerDiv.appendChild(span);\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  removeTooltipDiv() {\n    if (typeof this._tooltipHtmlElement !== 'undefined') {\n      this._tooltipHtmlElement.remove();\n      this._tooltipHtmlElement = undefined;\n    }\n  }\n\n\n  /**\n   * Test if one of the view layers satisfies an input callbackFn.\n   *\n   * @param {Function} callbackFn A function that takes a ViewLayer as input\n   *   and returns a boolean.\n   * @returns {boolean} True if one of the ViewLayers satisfies the callbackFn.\n   */\n  someViewLayer(callbackFn) {\n    let hasOne = false;\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        hasOne = true;\n        break;\n      }\n    }\n    return hasOne;\n  }\n\n  /**\n   * Can the input position be set on one of the view layers.\n   *\n   * @param {Point} position The input position.\n   * @returns {boolean} True if one view layer accepts the input position.\n   */\n  isPositionInBounds(position) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().isPositionInBounds(position);\n    });\n  }\n\n  /**\n   * Can one of the view layers be scrolled.\n   *\n   * @returns {boolean} True if one view layer can be scrolled.\n   */\n  canScroll() {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().canScroll();\n    });\n  }\n\n  /**\n   * Does one of the view layer have more than one slice in the\n   *   given dimension.\n   *\n   * @param {number} dim The input dimension.\n   * @returns {boolean} True if one view layer has more than one slice.\n   */\n  moreThanOne(dim) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().moreThanOne(dim);\n    });\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   * @function\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        layer.removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.removeEventListener('positionchange', this._fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this._currentPosition = position;\n\n    if (this._showCrosshair) {\n      this._showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0;\n    let baseViewLayerOrigin;\n    let scrollOffset;\n    let planeOffset;\n    // update position for all layers except the source one\n    for (const layer of this._layers) {\n      if (typeof layer === 'undefined') {\n        continue;\n      }\n\n      // update base offset (does not trigger redraw)\n      let hasSetOffset = false;\n      if (layer instanceof ViewLayer) {\n        const vc = layer.getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (typeof baseViewLayerOrigin === 'undefined') {\n          // first view layer, store origins\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n          // no offset\n          scrollOffset = new Vector3D(0, 0, 0);\n          planeOffset = new Vector3D(0, 0, 0);\n        } else {\n          if (vc.isPositionInBounds(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n          }\n        }\n      }\n\n      // also set for draw layers\n      // (should be next after a view layer)\n      if (typeof scrollOffset !== 'undefined' &&\n        typeof planeOffset !== 'undefined') {\n        hasSetOffset =\n          layer.setBaseOffset(\n            scrollOffset, planeOffset,\n            baseViewLayerOrigin, baseViewLayerOrigin0\n          );\n      }\n\n      // reset to not propagate after draw layer\n      // TODO: revise, could be unstable...\n      if (layer instanceof DrawLayer) {\n        scrollOffset = undefined;\n        planeOffset = undefined;\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (layer.getId() !== event.srclayerid) {\n        hasSetPos = layer.setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        layer.draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        layer.addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.addEventListener('positionchange', this._fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the div to world size ratio needed to fit\n   *   the largest data.\n   *\n   * @returns {number|undefined} The ratio.\n   */\n  getDivToWorldSizeRatio() {\n    // check container\n    if (this._containerDiv.offsetWidth === 0 &&\n      this._containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max world size\n    const maxWorldSize = this.getMaxWorldSize();\n    if (typeof maxWorldSize === 'undefined') {\n      return undefined;\n    }\n    // if the container has a width but no height,\n    // resize it to follow the same ratio to completely\n    // fill the div with the image\n    if (this._containerDiv.offsetHeight === 0) {\n      const ratioX = this._containerDiv.offsetWidth / maxWorldSize.x;\n      const height = maxWorldSize.y * ratioX;\n      this._containerDiv.style.height = height + 'px';\n    }\n    // return best fit\n    return Math.min(\n      this._containerDiv.offsetWidth / maxWorldSize.x,\n      this._containerDiv.offsetHeight / maxWorldSize.y\n    );\n  }\n\n  /**\n   * Fit to container: set the layers div to world size ratio.\n   *\n   * @param {number} divToWorldSizeRatio The ratio.\n   */\n  fitToContainer(divToWorldSizeRatio) {\n    // get maximum world size\n    const maxWorldSize = this.getMaxWorldSize();\n    // exit if none\n    if (typeof maxWorldSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this._containerDiv.offsetWidth,\n      y: this._containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 *\n        (containerSize.x - Math.floor(maxWorldSize.x * divToWorldSizeRatio)),\n      y: -0.5 *\n        (containerSize.y - Math.floor(maxWorldSize.y * divToWorldSizeRatio))\n    };\n\n    // apply to layers\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined') {\n        layer.fitToContainer(containerSize, divToWorldSizeRatio, fitOffset);\n      }\n    }\n\n    // update crosshair\n    if (this._showCrosshair) {\n      this._showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data world (mm) size.\n   *\n   * @returns {Scalar2D|undefined} The largest size as {x,y}.\n   */\n  getMaxWorldSize() {\n    let maxSize = {x: 0, y: 0};\n    for (const layer of this._layers) {\n      if (layer instanceof ViewLayer) {\n        const size = layer.getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this._baseScale.z *= -1;\n    this.setScale(this._baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this._scale.x * (1 + scaleStep),\n      y: this._scale.y * (1 + scaleStep),\n      z: this._scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {Scalar3D} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup_zoomchange\n   */\n  setScale(newScale, center) {\n    this._scale = newScale;\n    // apply to layers\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setScale(this._scale, center);\n      }\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup_zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this._fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {Scalar3D} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this._offset.x - translation.x,\n      y: this._offset.y - translation.y,\n      z: this._offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup_offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this._offset = newOffset;\n    // apply to layers\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setOffset(this._offset);\n      }\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup_offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this._fireEvent({\n      type: 'offsetchange',\n      value: [\n        this._offset.x,\n        this._offset.y,\n        this._offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this._baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined') {\n        layer.draw();\n      }\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (const layer of this._layers) {\n      if (typeof layer !== 'undefined') {\n        layer.display(flag);\n      }\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {WindowLevel} from '../image/windowLevel';\nimport {Point, Point2D} from '../math/point';\nimport {Scalar2D} from '../math/scalar';\nimport {Matrix33} from '../math/matrix';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  _view;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  _planeHelper;\n\n  /**\n   * Third dimension player ID (created by setInterval).\n   *\n   * @type {number|undefined}\n   */\n  _playerID;\n\n  /**\n   * Is DICOM seg mask flag.\n   *\n   * @type {boolean}\n   */\n  _isMask = false;\n\n  /**\n   * @param {View} view The associated view.\n   */\n  constructor(view) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this._view = view;\n\n    // setup the plane helper\n    this._planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this._isMask = true;\n    }\n  }\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {PlaneHelper} The helper.\n   */\n  getPlaneHelper() {\n    return this._planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return this._isMask;\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(\n      new Point2D(0, 0)\n    ));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this._view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {string[]} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this._view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this._view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this._view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this._view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (typeof this._playerID !== 'undefined');\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this._view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this._view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this._view.getCurrentIndex();\n    if (typeof this._view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this._planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this._view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this._view.getCurrentIndex().get(this._view.getScrollIndex());\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Opitonal position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    return this._view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this._view.getScrollIndex();\n    return this._view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} [index] Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this._view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setImage(img) {\n    this._view.setImage(img);\n  }\n\n  /**\n   * Get the current view (2D) spacing.\n   *\n   * @returns {Scalar2D} The spacing as a 2D array.\n   */\n  get2DSpacing() {\n    const spacing = this._view.getImage().getGeometry().getSpacing(\n      this._view.getOrientation());\n    return spacing.get2D();\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position The input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this._view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit.\n   */\n  getPixelUnit() {\n    return this._view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Extract a slice from an image at the given index and orientation.\n   *\n   * @param {Image} image The image to parse.\n   * @param {Index} index The current index.\n   * @param {boolean} isRescaled Flag for rescaled values (default false).\n   * @param {Matrix33} orientation The desired orientation.\n   * @returns {Image} The extracted slice.\n   */\n  _getSlice(image, index, isRescaled, orientation) {\n    // generate slice values\n    const sliceIter = getSliceIterator(\n      image,\n      index,\n      isRescaled,\n      orientation\n    );\n    const sliceValues = getIteratorValues(sliceIter);\n    // oriented geometry\n    const orientedSize = image.getGeometry().getSize(orientation);\n    const sizeValues = orientedSize.getValues();\n    sizeValues[2] = 1;\n    const sliceSize = new Size(sizeValues);\n    const orientedSpacing = image.getGeometry().getSpacing(orientation);\n    const spacingValues = orientedSpacing.getValues();\n    spacingValues[2] = 1;\n    const sliceSpacing = new Spacing(spacingValues);\n    const sliceOrigin = new Point3D(0, 0, 0);\n    const sliceGeometry =\n      new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n    // slice image\n    // @ts-ignore\n    return new Image(sliceGeometry, sliceValues);\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this._view.getImage();\n    const orientation = this._view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this._getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, currentIndex, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {number[][][]} regions A list of [x, y] pairs (min, max).\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    let image = this._view.getImage();\n    const orientation = this._view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this._getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getVariableRegionSliceIterator(\n      image, currentIndex, rescaled, regions);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this._view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this._view.getImage().isMonochrome();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this._view.getImage().canScroll(this._view.getOrientation());\n  }\n\n  /**\n   * Get the oriented image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this._view.getImage().getGeometry().getSize(\n      this._view.getOrientation());\n  }\n\n\n  /**\n   * Is the data size larger than one in the given dimension?\n   *\n   * @param {number} dim The dimension.\n   * @returns {boolean} True if the image size is larger than one\n   *   in the given dimension.\n   */\n  moreThanOne(dim) {\n    return this.getImageSize().moreThanOne(dim);\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this._view.getImage().getGeometry();\n    const size = geometry.getSize(this._view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this._view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this._view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this._view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    return this._view.isPositionInBounds(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this._view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this._planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this._view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D plane position from a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Point2D} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this._view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this._planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return new Point2D(\n      planePoint.getX(),\n      planePoint.getY(),\n    );\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this._view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {Point2D} point2D The 2D position.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this._planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this._view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this._planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Get the current index incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Index} The resulting index.\n   */\n  _getIncrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Index} The resulting index.\n   */\n  _getDecrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index incremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  _getIncrementScrollIndex() {\n    return this._getIncrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current index decremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  _getDecrementScrollIndex() {\n    return this._getDecrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current position incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Point} The resulting point.\n   */\n  getIncrementPosition(dim) {\n    const geometry = this._view.getImage().getGeometry();\n    return geometry.indexToWorld(this._getIncrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Point} The resulting point.\n   */\n  getDecrementPosition(dim) {\n    const geometry = this._view.getImage().getGeometry();\n    return geometry.indexToWorld(this._getDecrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getIncrementScrollPosition() {\n    const geometry = this._view.getImage().getGeometry();\n    return geometry.indexToWorld(this._getIncrementScrollIndex());\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getDecrementScrollPosition() {\n    const geometry = this._view.getImage().getGeometry();\n    return geometry.indexToWorld(this._getDecrementScrollIndex());\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.setCurrentIndex(this._getIncrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.setCurrentIndex(this._getDecrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.setCurrentIndex(this._getDecrementScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.setCurrentIndex(this._getIncrementScrollIndex(), silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (typeof this._playerID === 'undefined') {\n      const image = this._view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this._view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this._playerID = window.setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this._view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this._view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (typeof this._playerID !== 'undefined') {\n      clearInterval(this._playerID);\n      this._playerID = undefined;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    return this._view.getWindowLevel();\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this._view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window and level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   */\n  setWindowLevel(wl) {\n    this._view.setWindowLevel(wl);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this._view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    this._view.setColourMap(name);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this._view.setAlphaFunction(func);\n  }\n\n  /**\n   * Bind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  bindImageAndLayer(viewLayer) {\n    const image = this._view.getImage();\n    image.addEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.addEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n  /**\n   * Unbind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  unbindImageAndLayer(viewLayer) {\n    const image = this._view.getImage();\n    image.removeEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.removeEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n} // class ViewController\n","import {logger} from '../utils/logger';\nimport {Point2D} from '../math/point';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Overridalbe custom UI object for client defined UI.\n */\nexport const customUI = {\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {object} data The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog(data, callback) {\n    const textExpr = prompt('Label', data.textExpr);\n    if (textExpr !== null) {\n      data.textExpr = textExpr;\n      callback(data);\n    }\n  }\n};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Point2D[]} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push(new Point2D(\n      touches[i].pageX - offsetLeft,\n      touches[i].pageY - offsetTop\n    ));\n  }\n  return positions;\n}\n\n/**\n * Get the offsets of an input touch event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D[]} The array of points.\n */\nexport function getTouchPoints(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input mouse event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D} The 2D point.\n */\nexport function getMousePoint(event) {\n  // offsetX/Y: the offset in the X coordinate of the mouse pointer\n  // between that event and the padding edge of the target node\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n  // https://caniuse.com/mdn-api_mouseevent_offsetx\n  return new Point2D(\n    event.offsetX,\n    event.offsetY\n  );\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * Ref:\n * - {@link https://github.com/ivmartel/dwv/issues/902},\n * - {@link https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js}.\n *\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {Point2D} from '../math/point';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  _containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {ViewController}\n   */\n  _viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  _canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  _offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  _context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  _isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  _imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  _baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  _baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  _opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {Scalar2D}\n   */\n  _scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  _fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  _flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  _offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  _baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  _viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  _zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  _flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  _needsDataUpdate = null;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  _dataId;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   *\n   * See: {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled}.\n   *\n   * @type {boolean}\n   */\n  _imageSmoothing = false;\n\n  /**\n   * Layer group origin.\n   *\n   * @type {Point3D}\n   */\n  _layerGroupOrigin;\n\n  /**\n   * Layer group first origin.\n   *\n   * @type {Point3D}\n   */\n  _layerGroupOrigin0;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this._containerDiv = containerDiv;\n    // specific css class name\n    this._containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The data id.\n   */\n  getDataId() {\n    return this._dataId;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getScale() {\n    return this._scale;\n  }\n\n  /**\n   * Get the layer zoom offset without the fit scale.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getAbsoluteZoomOffset() {\n    return {\n      x: this._zoomOffset.x * this._fitScale.x,\n      y: this._zoomOffset.y * this._fitScale.y\n    };\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this._imageSmoothing = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {string} dataId The associated data id.\n   */\n  setView(view, dataId) {\n    this._dataId = dataId;\n    // local listeners\n    view.addEventListener('wlchange', this._onWLChange);\n    view.addEventListener('colourmapchange', this._onColourMapChange);\n    view.addEventListener('positionchange', this._onPositionChange);\n    view.addEventListener('alphafuncchange', this._onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this._fireEvent);\n    }\n    // create view controller\n    this._viewController = new ViewController(view);\n    // bind layer and image\n    this.bindImage();\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this._viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this._imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this._dataId === event.dataid) {\n      this._viewController.setImage(event.value[0]);\n      this._setBaseSize(this._viewController.getImageSize().get2D());\n      this._needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Bind this layer to the view image.\n   */\n  bindImage() {\n    if (this._viewController) {\n      this._viewController.bindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Unbind this layer to the view image.\n   */\n  unbindImage() {\n    if (this._viewController) {\n      this._viewController.unbindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Handle an image content change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagecontentchange = (event) => {\n    // event.value = [index]\n    if (this._dataId === event.dataid) {\n      this._isValidPosition = this._viewController.isPositionInBounds();\n      // flag update and draw\n      this._needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagegeometrychange = (event) => {\n    // event.value = [index]\n    if (this._dataId === event.dataid) {\n      const vcSize = this._viewController.getImageSize().get2D();\n      if (this._baseSize.x !== vcSize.x ||\n        this._baseSize.y !== vcSize.y) {\n        // size changed, recalculate base offset\n        // in case origin changed\n        if (typeof this._layerGroupOrigin !== 'undefined' &&\n          typeof this._layerGroupOrigin0 !== 'undefined') {\n          const origin0 = this._viewController.getOrigin();\n          const scrollOffset = this._layerGroupOrigin0.minus(origin0);\n          const origin = this._viewController.getOrigin(\n            this._viewController.getCurrentPosition()\n          );\n          const planeOffset = this._layerGroupOrigin.minus(origin);\n          this.setBaseOffset(scrollOffset, planeOffset);\n        }\n        // update base size\n        this._setBaseSize(vcSize);\n        // flag update and draw\n        this._needsDataUpdate = true;\n        this.draw();\n      }\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this._containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this._containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this._baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this._viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this._opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this._opacity) {\n      return;\n    }\n\n    this._opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App_opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this._opacity]\n    };\n    this._fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    this._flipOffset.x += this._canvas.width / this._scale.x;\n    this._offset.x += this._flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    this._flipOffset.y += this._canvas.height / this._scale.y;\n    this._offset.y += this._flipOffset.y;\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this._flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this._flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this._flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this._viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this._flipScale.x,\n      y: newScale.y * this._flipScale.y,\n      z: newScale.z * this._flipScale.z,\n    });\n    const finalNewScale = {\n      x: this._fitScale.x * orientedNewScale.x,\n      y: this._fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this._offset.x - this._zoomOffset.x,\n        y: this._offset.y - this._zoomOffset.y\n      };\n      // store new offset\n      this._zoomOffset = {x: 0, y: 0};\n      this._offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this._baseOffset.x,\n          y: worldCenter.y + this._baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this._offset, this._scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this._zoomOffset.x + newOffset.x - this._offset.x,\n          y: this._zoomOffset.y + newOffset.y - this._offset.y\n        };\n        // store new offset\n        this._zoomOffset = newZoomOffset;\n        this._offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this._scale = finalNewScale;\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const helper = this._viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this._flipScale.x,\n      y: newScale.y * this._flipScale.y,\n      z: newScale.z * this._flipScale.z,\n    });\n    const finalNewScale = {\n      x: this._fitScale.x * orientedNewScale.x,\n      y: this._fitScale.y * orientedNewScale.y\n    };\n    this._scale = finalNewScale;\n\n    this._zoomOffset = {\n      x: absoluteZoomOffset.x / this._fitScale.x,\n      y: absoluteZoomOffset.y / this._fitScale.y\n    };\n    this._offset = {\n      x: this._offset.x + this._zoomOffset.x,\n      y: this._offset.y + this._zoomOffset.y\n    };\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @param {Point3D} [layerGroupOrigin] The layer group origin.\n   * @param {Point3D} [layerGroupOrigin0] The layer group first origin.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(\n    scrollOffset, planeOffset,\n    layerGroupOrigin, layerGroupOrigin0) {\n    const helper = this._viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this._baseOffset.x !== newOffset.x ||\n      this._baseOffset.y !== newOffset.y;\n    // store layer group origins\n    if (typeof layerGroupOrigin !== 'undefined' &&\n      typeof layerGroupOrigin0 !== 'undefined') {\n      this._layerGroupOrigin = layerGroupOrigin;\n      this._layerGroupOrigin0 = layerGroupOrigin0;\n    }\n    // reset offset if needed\n    if (needsUpdate) {\n      this._offset = {\n        x: this._offset.x - this._baseOffset.x + newOffset.x,\n        y: this._offset.y - this._baseOffset.y + newOffset.y\n      };\n      this._baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const helper = this._viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this._offset = {\n      x: planeNewOffset.x +\n        this._viewOffset.x +\n        this._baseOffset.x +\n        this._zoomOffset.x +\n        this._flipOffset.x,\n      y: planeNewOffset.y +\n        this._viewOffset.y +\n        this._baseOffset.y +\n        this._zoomOffset.y +\n        this._flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to a 2D index.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Index} The equivalent 2D index.\n   */\n  displayToPlaneIndex(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Index([\n      Math.floor(planePos.getX()),\n      Math.floor(planePos.getY())\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The de-scaled point.\n   */\n  displayToPlaneScale(point2D) {\n    return new Point2D(\n      point2D.getX() / this._scale.x,\n      point2D.getY() / this._scale.y\n    );\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The plane position.\n   */\n  displayToPlanePos(point2D) {\n    const deScaled = this.displayToPlaneScale(point2D);\n    return new Point2D(\n      deScaled.getX() + this._offset.x,\n      deScaled.getY() + this._offset.y\n    );\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The display position, can be individually\n   *   undefined if out of bounds.\n   */\n  planePosToDisplay(point2D) {\n    let posX =\n      (point2D.getX() - this._offset.x + this._baseOffset.x) * this._scale.x;\n    let posY =\n      (point2D.getY() - this._offset.y + this._baseOffset.y) * this._scale.y;\n    // check if in bounds\n    if (posX < 0 || posX >= this._canvas.width) {\n      posX = undefined;\n    }\n    if (posY < 0 || posY >= this._canvas.height) {\n      posY = undefined;\n    }\n    return new Point2D(posX, posY);\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The main plane position.\n   */\n  displayToMainPlanePos(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Point2D(\n      planePos.getX() - this._baseOffset.x,\n      planePos.getY() - this._baseOffset.y\n    );\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this._containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this._containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   *\n   * @fires App_renderstart\n   * @fires App_renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this._isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App_renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this._fireEvent(event);\n\n    // update data if needed\n    if (this._needsDataUpdate) {\n      this._updateImageData();\n    }\n\n    // context opacity\n    this._context.globalAlpha = this._opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this._context.setTransform(\n      this._scale.x,\n      0,\n      0,\n      this._scale.y,\n      -1 * this._offset.x * this._scale.x,\n      -1 * this._offset.y * this._scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this._context.imageSmoothingEnabled = this._imageSmoothing;\n    // draw image\n    this._context.drawImage(this._offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App_renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this._fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this._baseSpacing = spacing;\n    this._opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this._canvas = document.createElement('canvas');\n    this._containerDiv.appendChild(this._canvas);\n\n    // check that the getContext method exists\n    if (!this._canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this._context = this._canvas.getContext('2d');\n    if (!this._context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this._offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this._setBaseSize(size);\n\n    // update data on first draw\n    this._needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {Scalar2D} size The size as {x,y}.\n   */\n  _setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this._baseSize = size;\n\n    // off screen canvas\n    this._offscreenCanvas.width = this._baseSize.x;\n    this._offscreenCanvas.height = this._baseSize.y;\n    // original empty image data array\n    this._context.clearRect(0, 0, this._baseSize.x, this._baseSize.y);\n    this._imageData = this._context.createImageData(\n      this._baseSize.x, this._baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The fit size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    let needsDraw = false;\n\n    // set canvas size if different from previous\n    if (this._canvas.width !== containerSize.x ||\n      this._canvas.height !== containerSize.y) {\n      if (!canCreateCanvas(containerSize.x, containerSize.y)) {\n        throw new Error('Cannot resize canvas ' +\n          containerSize.x + ', ' + containerSize.y);\n      }\n      // canvas size change triggers canvas reset\n      this._canvas.width = containerSize.x;\n      this._canvas.height = containerSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this._baseSpacing.x,\n      y: divToWorldSizeRatio * this._baseSpacing.y\n    };\n    // _scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (_scale / fitScale) * newFitScale\n    const newScale = {\n      x: this._scale.x * divToImageSizeRatio.x / this._fitScale.x,\n      y: this._scale.y * divToImageSizeRatio.y / this._fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this._scale.x !== newScale.x ||\n      this._scale.y !== newScale.y) {\n      this._fitScale = divToImageSizeRatio;\n      this._scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this._flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this._flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this._viewOffset.x !== newViewOffset.x ||\n      this._viewOffset.y !== newViewOffset.y ||\n      this._flipOffset.x !== newFlipOffset.x ||\n      this._flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this._offset = {\n        x: this._offset.x +\n          newViewOffset.x - this._viewOffset.x +\n          newFlipOffset.x - this._flipOffset.x,\n        y: this._offset.y +\n          newViewOffset.y - this._viewOffset.y +\n          newFlipOffset.y - this._flipOffset.y,\n      };\n      // update private local offsets\n      this._flipOffset = newFlipOffset;\n      this._viewOffset = newViewOffset;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this._containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      const eventName = names[i];\n      const passive = eventName !== 'wheel';\n      this._containerDiv.addEventListener(\n        eventName, this._fireEvent, {passive: passive});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this._containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this._containerDiv.removeEventListener(names[i], this._fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this._dataId;\n    this._listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  _updateImageData() {\n    // generate image data\n    this._viewController.generateImageData(this._imageData);\n    // pass the data to the off screen canvas\n    this._offscreenCanvas.getContext('2d').putImageData(this._imageData, 0, 0);\n    // update data flag\n    this._needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  _onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this._needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  _onColourMapChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this._needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  _onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this._isValidPosition) {\n          this._isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this._viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this._isValidPosition) {\n          // reset valid flag\n          this._isValidPosition = true;\n          // reset update flag\n          this._needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  _onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this._needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this._viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this._context.save();\n    // use the identity matrix while clearing the canvas\n    this._context.setTransform(1, 0, 0, 1, 0, 0);\n    this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    // restore the transform\n    this._context.restore();\n  }\n\n} // ViewLayer class\n","import {getShadowColour} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  _fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  _fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  _textColour = '_fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  _lineColour = '_ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {Scalar2D}\n   */\n  _baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {Scalar2D}\n   */\n  _zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  _strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {Scalar2D}\n   */\n  _shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  _tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  _textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this._fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this._fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this._strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this._textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this._lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this._lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this._baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this._zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this._baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this._zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this._baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {Scalar2D} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this._zoomScale.x,\n      y: 2 * value / this._zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this._shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this._tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this._textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {Konva.Shape} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  _group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  _name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  _layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  _isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  _parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this._group = group;\n    this._name = name;\n    this._layer = layer;\n    this._isSilent = (typeof silent === 'undefined') ? false : silent;\n    this._parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this._name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand_drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this._parent.add(this._group);\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    if (!this._isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand_drawcreate\n       * @type {object}\n       * @property {string} id The id of the created draw.\n       * @property {string} srclayerid The id of the layer of the draw.\n       * @property {string} dataid The associated data id.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this._group.id(),\n        srclayerid: this._layer.getId(),\n        dataid: this._layer.getDataId()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand_drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this._group.remove();\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this._group.id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  _group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  _name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  _translation;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  _layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {DrawLayer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this._group = group;\n    this._name = name;\n    this._translation = translation;\n    this._layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this._name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand_drawmove\n   */\n  execute() {\n    // translate group\n    this._group.move(this._translation);\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand_drawmove\n     * @type {object}\n     * @property {string} id The id of the create draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this._group.id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand_drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this._translation.x,\n      y: -this._translation.y\n    };\n    this._group.move(minusTrans);\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this._group.id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  _name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  _factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  _startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  _endAnchor;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  _layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  _viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  _style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {DrawLayer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this._name = name;\n    this._factory = factory;\n    this._startAnchor = startAnchor;\n    this._endAnchor = endAnchor;\n    this._layer = layer;\n    this._viewController = viewController;\n    this._style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this._name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand_drawchange\n   */\n  execute() {\n    // change shape\n    this._factory.update(\n      this._endAnchor,\n      this._style,\n      this._viewController\n    );\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand_drawchange\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this._endAnchor.getParent().id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand_drawchange\n   */\n  undo() {\n    // invert change shape\n    this._factory.update(\n      this._startAnchor,\n      this._style,\n      this._viewController\n    );\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this._startAnchor.getParent().id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  _group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  _name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  _layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {Konva.Container}\n   */\n  _parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this._group = group;\n    this._name = name;\n    this._layer = layer;\n    this._parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this._name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand_drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this._group.remove();\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand_drawdelete\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this._group.id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand_drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this._parent.add(this._group);\n    // draw\n    this._layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this._group.id(),\n      srclayerid: this._layer.getId(),\n      dataid: this._layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from '../math/index';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Konva.\n *\n * Ref: {@link https://konvajs.org/}.\n *\n * @external Konva\n */\nimport Konva from 'konva';\n\n/**\n * Draw meta data.\n */\nexport class DrawMeta {\n  /**\n   * Draw quantification.\n   *\n   * @type {object}\n   */\n  quantification;\n\n  /**\n   * Draw text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string}\n   */\n  textExpr;\n}\n\n/**\n * Draw details.\n */\nexport class DrawDetails {\n  /**\n   * The draw ID.\n   *\n   * @type {number}\n   */\n  id;\n\n  /**\n   * The draw position: an Index converted to string.\n   *\n   * @type {string}\n   */\n  position;\n\n  /**\n   * The draw type.\n   *\n   * @type {string}\n   */\n  type;\n\n  /**\n   * The draw color: for example 'green', '_00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string}\n   */\n  color;\n\n  /**\n   * The draw meta.\n   *\n   * @type {DrawMeta}\n   */\n  meta;\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {Konva.Node} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  _drawLayer;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  _konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  _currentPosGroupId = null;\n\n  /**\n   * @param {DrawLayer} drawLayer The draw layer.\n   */\n  constructor(drawLayer) {\n    this._drawLayer = drawLayer;\n    this._konvaLayer = drawLayer.getKonvaLayer();\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {Konva.Group|undefined} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this._konvaLayer.getChildren((node) => {\n      return node.id() === this._currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup;\n    if (posGroups.length === 1) {\n      if (posGroups[0] instanceof Konva.Group) {\n        posGroup = posGroups[0];\n      }\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this._currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this._konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this._konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this._konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this._currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this._konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this._currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this._konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {DrawDetails[]} A list of draw details.\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this._konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      // @ts-ignore\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this._konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      // @ts-ignore\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {DrawDetails[]} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this._konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this._konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        // @ts-ignore\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup,\n          shape.className,\n          this._drawLayer\n        );\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {DrawDetails} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this._konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    // @ts-ignore\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    // @ts-ignore\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    // @ts-ignore\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this._konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {Konva.Group} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group,\n      shapeDisplayName,\n      this._drawLayer\n    );\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    if (typeof exeCallback !== 'undefined') {\n      exeCallback(delcmd);\n    }\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const posGroups = this._konvaLayer.getChildren();\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        const shapeGroups = posGroup.getChildren();\n        while (shapeGroups.length) {\n          if (shapeGroups[0] instanceof Konva.Group) {\n            this.deleteDrawGroup(shapeGroups[0], cmdCallback, exeCallback);\n          }\n        }\n      } else {\n        logger.warn('Found non group in layer while deleting');\n      }\n    }\n  }\n\n  /**\n   * Get the total number of draws\n   * (at all positions).\n   *\n   * @returns {number} The total number of draws.\n   */\n  getNumberOfDraws() {\n    const posGroups = this._konvaLayer.getChildren();\n    let count = 0;\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        count += posGroup.getChildren().length;\n      }\n    }\n    return count;\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\nimport {PlaneHelper} from '../image/planeHelper';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  _containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  _konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  _baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  _baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  _fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  _flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  _baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  _viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  _zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  _flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  _drawController;\n\n  /**\n   * The plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  _planeHelper;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  _dataId;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this._containerDiv = containerDiv;\n    // specific css class name\n    this._containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The id.\n   */\n  getDataId() {\n    return this._dataId;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {Konva.Stage} The stage.\n   */\n  getKonvaStage() {\n    return this._konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {Konva.Layer} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this._konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this._drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {PlaneHelper} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this._planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this._containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this._containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this._baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this._konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this._konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip offset\n    const scale = this._konvaStage.scale();\n    const size = this._konvaStage.size();\n    this._flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this._konvaStage.offset();\n    offset.x += this._flipOffset.x;\n    this._konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip offset\n    const scale = this._konvaStage.scale();\n    const size = this._konvaStage.size();\n    this._flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this._konvaStage.offset();\n    offset.y += this._flipOffset.y;\n    this._konvaStage.offset(offset);\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this._flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this._flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this._flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this._planeHelper.getTargetOrientedPositiveXYZ({\n        x: newScale.x * this._flipScale.x,\n        y: newScale.y * this._flipScale.y,\n        z: newScale.z * this._flipScale.z,\n      });\n    const finalNewScale = {\n      x: this._fitScale.x * orientedNewScale.x,\n      y: this._fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this._konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this._zoomOffset.x,\n        y: offset.y - this._zoomOffset.y\n      };\n      // store new offset\n      this._zoomOffset = {x: 0, y: 0};\n      this._konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this._planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this._baseOffset.x,\n          y: worldCenter.y + this._baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this._konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this._zoomOffset.x + newOffset.x - offset.x,\n          y: this._zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this._zoomOffset = newZoomOffset;\n        this._konvaStage.offset(newOffset);\n      }\n    }\n\n    this._konvaStage.scale(finalNewScale);\n    // update labels\n    this._updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this._planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this._konvaStage.offset({\n      x: planeNewOffset.x +\n        this._viewOffset.x +\n        this._baseOffset.x +\n        this._zoomOffset.x +\n        this._flipOffset.x,\n      y: planeNewOffset.y +\n        this._viewOffset.y +\n        this._baseOffset.y +\n        this._zoomOffset.y +\n        this._flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this._planeHelper.getNativeScrollIndex();\n    const newOffset = this._planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this._baseOffset.x !== newOffset.x ||\n      this._baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this._konvaStage.offset();\n      this._konvaStage.offset({\n        x: offset.x - this._baseOffset.x + newOffset.x,\n        y: offset.y - this._baseOffset.y + newOffset.y\n      });\n      this._baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this._containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this._containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   */\n  draw() {\n    this._konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {string} dataId The associated data id.\n   */\n  initialise(size, spacing, dataId) {\n    // set locals\n    this._baseSize = size;\n    this._baseSpacing = spacing;\n    this._dataId = dataId;\n\n    // create stage\n    this._konvaStage = new Konva.Stage({\n      container: this._containerDiv,\n      width: this._baseSize.x,\n      height: this._baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this._konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this._konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this._drawController = new DrawController(this);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The container size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    // update konva\n    this._konvaStage.width(containerSize.x);\n    this._konvaStage.height(containerSize.y);\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this._baseSpacing.x,\n      y: divToWorldSizeRatio * this._baseSpacing.y\n    };\n    // _scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (_scale / fitScale) * newFitScale\n    const newScale = {\n      x: this._konvaStage.scale().x * divToImageSizeRatio.x / this._fitScale.x,\n      y: this._konvaStage.scale().y * divToImageSizeRatio.y / this._fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this._konvaStage.scale().x !== newScale.x ||\n      this._konvaStage.scale().y !== newScale.y) {\n      this._fitScale = divToImageSizeRatio;\n      this._konvaStage.scale(newScale);\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this._flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this._flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this._viewOffset.x !== newViewOffset.x ||\n      this._viewOffset.y !== newViewOffset.y ||\n      this._flipOffset.x !== newFlipOffset.x ||\n      this._flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this._konvaStage.offset({\n        x: this._konvaStage.offset().x +\n          newViewOffset.x - this._viewOffset.x +\n          newFlipOffset.x - this._flipOffset.x,\n        y: this._konvaStage.offset().y +\n          newViewOffset.y - this._viewOffset.y +\n          newFlipOffset.y - this._flipOffset.y,\n      });\n      // update private local offsets\n      this._flipOffset = newFlipOffset;\n      this._viewOffset = newViewOffset;\n    }\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this._drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toggleGroupVisibility(id) {\n    // get the group\n    const group = this._drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    if (typeof this._drawController !== 'undefined') {\n      this._drawController.deleteDraw(id, this._fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    if (typeof this._drawController !== 'undefined') {\n      this._drawController.deleteDraws(this._fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Get the total number of draws of this layer\n   * (at all positions).\n   *\n   * @returns {number|undefined} The total number of draws.\n   */\n  getNumberOfDraws() {\n    let res;\n    if (typeof this._drawController !== 'undefined') {\n      res = this._drawController.getNumberOfDraws();\n    }\n    return res;\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this._konvaStage.listening(true);\n    // allow pointer events\n    this._containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this._containerDiv.addEventListener(names[i], this._fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this._konvaStage.listening(false);\n    // disable pointer events\n    this._containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this._containerDiv.removeEventListener(names[i], this._fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this._planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this._dataId;\n    this._listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {Scalar2D} scale The scale to compensate for as {x,y}.\n   */\n  _updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this._konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {WindowLevel} from '../image/windowLevel';\nimport {LayerGroup} from './layerGroup';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        if (event.value.length === 2) {\n          const wl = new WindowLevel(event.value[0], event.value[1]);\n          vc.setWindowLevel(wl);\n        }\n        if (event.value.length === 3) {\n          vc.setWindowLevelPreset(event.value[2]);\n        }\n      }\n    };\n  };\n}\n\n/**\n * Colour map binder.\n */\nexport class ColourMapBinder {\n  getEventType = function () {\n    return 'colourmapchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setColourMap(event.value[0]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data id\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder,\n  ColourMapBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  /**\n   * Associated layer groups.\n   *\n   * @type {LayerGroup[]}\n   */\n  _layerGroups = [];\n\n  /**\n   * Active layer group index.\n   *\n   * @type {number|undefined}\n   */\n  _activeLayerGroupIndex;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  _imageSmoothing = false;\n\n  // layer group binders\n  _binders = [];\n  // binder callbacks\n  _callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroup(index) {\n    return this._layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this._layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this._activeLayerGroupIndex);\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    if (typeof this.getLayerGroup(index) !== 'undefined') {\n      this._activeLayerGroupIndex = index;\n    } else {\n      logger.warn('No layer group to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      res = res.concat(this._layerGroups[i].getViewLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      res = res.concat(this._layerGroups[i].getDrawLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * The new layer group will be marked as the active layer group.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this._activeLayerGroupIndex = this._layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    layerGroup.setImageSmoothing(this._imageSmoothing);\n    // add to storage\n    const isBound = this._callbackStore && this._callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this._layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this._layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this._binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this._binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      this._layerGroups[i].empty();\n    }\n    this._layerGroups = [];\n    this._activeLayerGroupIndex = undefined;\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layerGroup of this._layerGroups) {\n      layerGroup.removeLayersByDataId(dataId);\n    }\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this._layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup to remove');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this._layerGroups.splice(index, 1);\n    // update active index\n    if (this._activeLayerGroupIndex === index) {\n      this._activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      this._layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      this._layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Fit to container: synchronise the div to world size ratio\n   *   of the group layers.\n   */\n  fitToContainer() {\n    // find the minimum ratio\n    let minRatio;\n    const hasRatio = [];\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      const ratio = this._layerGroups[i].getDivToWorldSizeRatio();\n      if (typeof ratio !== 'undefined') {\n        hasRatio.push(i);\n        if (typeof minRatio === 'undefined' || ratio < minRatio) {\n          minRatio = ratio;\n        }\n      }\n    }\n    // exit if no ratio\n    if (typeof minRatio === 'undefined') {\n      return;\n    }\n    // apply min ratio to layers\n    for (let j = 0; j < this._layerGroups.length; ++j) {\n      if (hasRatio.includes(j)) {\n        this._layerGroups[j].fitToContainer(minRatio);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this._layerGroups.length === 0 ||\n      this._layerGroups.length === 1 ||\n      this._binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this._callbackStore = new Array(this._layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      for (let j = 0; j < this._binders.length; ++j) {\n        this._addEventListeners(i, this._binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this._layerGroups.length === 0 ||\n      this._layerGroups.length === 1 ||\n      this._binders.length === 0 ||\n      !this._callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      for (let j = 0; j < this._binders.length; ++j) {\n        this._removeEventListeners(i, this._binders[j]);\n      }\n    }\n    // clear callback store\n    this._callbackStore = null;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this._imageSmoothing = flag;\n    // set for existing layer groups\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      this._layerGroups[i].setImageSmoothing(flag);\n    }\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  _getBinderCallback(binder, index) {\n    if (typeof this._callbackStore[index] === 'undefined') {\n      this._callbackStore[index] = [];\n    }\n    const store = this._callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this._removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this._layerGroups[index])(event);\n          // re-start listeners\n          this._addEventListeners(index, binder);\n        }\n      };\n      this._callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  _addEventListeners(index, binder) {\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      if (i !== index) {\n        this._layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this._getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  _removeEventListeners(index, binder) {\n    for (let i = 0; i < this._layerGroups.length; ++i) {\n      if (i !== index) {\n        this._layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this._getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {WindowLevel} from '../image/windowLevel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021):\n *   - store position as array,\n *   - new draw position group key.\n * - v0.4 (dwv 0.29.0, 06/2021):\n *   - move drawing details into meta property,\n *   - remove scale center and translation, add offset.\n * - v0.3 (dwv v0.23.0, 03/2018):\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation,\n *   - new details structure: simple array of objects referenced by draw ids.\n * - v0.2 (dwv v0.17.0, 12/2016):\n *   - adds draw details: array [nslices][nframes] of detail objects.\n * - v0.1 (dwv v0.15.0, 07/2016):\n *   - adds version,\n *   - drawings: array [nslices][nframes] with all groups.\n * - initial release (dwv v0.10.0, 05/2015), no version number:\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings,\n *   - drawings: array [nslices] with all groups.\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {App} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    const wl = viewController.getWindowLevel();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': wl.center,\n      'window-width': wl.width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this._readV01(data);\n    } else if (data.version === '0.2') {\n      res = this._readV02(data);\n    } else if (data.version === '0.3') {\n      res = this._readV03(data);\n    } else if (data.version === '0.4') {\n      res = this._readV04(data);\n    } else if (data.version === '0.5') {\n      res = this._readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    const wl = new WindowLevel(data['window-center'], data['window-width']);\n    viewController.setWindowLevel(wl);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(app.getDataIds()[0]); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  _readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  _readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  _readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  _readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  _readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3:\n * - v0.2: one layer per slice/frame,\n * - v0.3: one layer, one group per slice. `setDrawing` expects the full stage.\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2:\n * - v0.1: text on its own,\n * - v0.2: text as part of label.\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3:\n * - v0.2: array [nslices][nframes] with all,\n * - v0.3: simple array of objects referenced by draw ids.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4:\n * - v0.3: properties at group root,\n * - v0.4: properties in group meta object.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: position as object,\n * - v0.5: position as array.\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: draw id as 'slice-0_frame-1',\n * - v0.5: draw id as '_2-0__3-1'.\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '_2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: `base?query_fragment`.\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   `[dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest`.\n * Or encoded URI with base and key value/pairs:\n *   `[dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)`.\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n *   be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode. Can be:\n * - key (default): keep the key\n * - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {string[]} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {string[]} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  _stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  _curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this._stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this._curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack_undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this._stack = this._stack.slice(0, this._curCmdIndex);\n    // store command\n    this._stack.push(cmd);\n    // increment index\n    ++this._curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack_undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this._fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack_undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this._curCmdIndex > 0) {\n      // decrement command index\n      --this._curCmdIndex;\n      // undo last command\n      this._stack[this._curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack_undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this._fireEvent({\n        type: 'undo',\n        command: this._stack[this._curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack_redo\n   */\n  redo() {\n    if (this._curCmdIndex < this._stack.length) {\n      // run last command\n      this._stack[this._curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack_redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this._fireEvent({\n        type: 'redo',\n        command: this._stack[this._curCmdIndex].getName()\n      });\n      // increment command index\n      ++this._curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  _toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  _selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  _callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  _boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this._toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this._toolList) {\n      this._toolList[key].init();\n    }\n    // enable shortcuts\n    this.enableShortcuts(true);\n  }\n\n  /**\n   * Enable or disable shortcuts. The 'init' methods enables shortcuts\n   *  by default. Call this method after init to disable shortcuts.\n   *\n   * @param {boolean} flag True to enable shortcuts.\n   */\n  enableShortcuts(flag) {\n    if (flag) {\n      window.addEventListener('keydown',\n        this._getCallback('window', 'keydown'), true);\n    } else {\n      window.removeEventListener('keydown',\n        this._getCallback('window', 'keydown'), true);\n    }\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this._toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this._selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this._selectedTool) {\n      this._selectedTool.activate(false);\n    }\n    // set internal var\n    this._selectedTool = this._toolList[name];\n    // activate new tool\n    this._selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {LayerGroup} layerGroup The associated layer group.\n   * @param {ViewLayer|DrawLayer} layer The layer to listen to.\n   */\n  bindLayerGroup(layerGroup, layer) {\n    const divId = layerGroup.getDivId();\n    // listen to active layer changes\n    layerGroup.addEventListener(\n      'activelayerchange', this._getActiveLayerChangeHandler(divId));\n    // bind the layer\n    this._internalBindLayerGroup(divId, layer);\n  }\n\n  /**\n   * Bind a layer group to this controller.\n   *\n   * @param {string} layerGroupDivId The layer group div id.\n   * @param {ViewLayer|DrawLayer} layer The layer.\n   */\n  _internalBindLayerGroup(layerGroupDivId, layer) {\n    // remove from local list if preset\n    if (typeof this._boundLayers[layerGroupDivId] !== 'undefined') {\n      this._unbindLayer(this._boundLayers[layerGroupDivId]);\n    }\n    // replace layer in local list\n    this._boundLayers[layerGroupDivId] = layer;\n    // bind layer\n    this._bindLayer(layer);\n  }\n\n  /**\n   * Get an active layer change handler.\n   *\n   * @param {string} divId The associated layer group div id.\n   * @returns {Function} The event handler.\n   */\n  _getActiveLayerChangeHandler(divId) {\n    return (event) => {\n      const layer = event.value[0];\n      this._internalBindLayerGroup(divId, layer);\n    };\n  }\n\n  /**\n   * Add canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to start listening to.\n   */\n  _bindLayer(layer) {\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this._getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to stop listening to.\n   */\n  _unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this._getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  _getCallback(layerId, eventType) {\n    if (typeof this._callbackStore[layerId] === 'undefined') {\n      this._callbackStore[layerId] = [];\n    }\n\n    if (typeof this._callbackStore[layerId][eventType] === 'undefined') {\n      const applySelectedTool = (event) => {\n        // make sure we have a tool\n        if (this._selectedTool) {\n          const func = this._selectedTool[event.type];\n          if (func) {\n            func(event);\n          }\n        }\n      };\n      // store callback\n      this._callbackStore[layerId][eventType] = applySelectedTool;\n    }\n\n    return this._callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  _progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  _numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  _callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this._callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this._numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this._progresses[i] = [];\n      for (let j = 0; j < this._numberOfDimensions; ++j) {\n        this._progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this._progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this._getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this._callback({\n      lengthComputable: true,\n      loaded: this._getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  _getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this._numberOfDimensions; ++j) {\n      sum += this._progresses[index][j];\n    }\n    return sum / this._numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  _getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this._progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this._getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {string[]}\n   */\n  _inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {XMLHttpRequest[]}\n   */\n  _requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  _runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  _nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  _nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  _aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  _defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this._defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this._defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {string[]} data The input data.\n   */\n  _storeInputData(data) {\n    this._inputData = data;\n    // reset counters\n    this._nLoad = 0;\n    this._nLoadend = 0;\n    // reset flag\n    this._aborting = false;\n    // clear storage\n    this._clearStoredRequests();\n    this._clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {XMLHttpRequest} request The launched request.\n   */\n  _storeRequest(request) {\n    this._requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  _clearStoredRequests() {\n    this._requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  _storeLoader(loader) {\n    this._runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  _clearStoredLoader() {\n    this._runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  _addLoad = (_event) => {\n    this._nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this._nLoad === this._inputData.length) {\n      this.onload({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  _addLoadend = (_event) => {\n    this._nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this._nLoadend === this._inputData.length) {\n      this.onloadend({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  _augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this._loadDicomDir(data[0], options);\n    } else {\n      this._loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {string} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  _getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this._addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass\n   *   to the request,\n   * - batchSize: the size of the request url batch.\n   */\n  _loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this._storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this._addLoad;\n        loader.onloadend = this._addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this._storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      // launch next in queue\n      if (lastRunRequestIndex < this._requests.length - 1 && !this._aborting) {\n        ++lastRunRequestIndex;\n        this._requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest}.\n       *\n       * @external XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this._augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this._getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      const errorCallback =\n        this._augmentCallbackEvent(this.onerror, dataElement);\n      request.onerror = (event) => {\n        this._addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this._augmentCallbackEvent(this.onabort, dataElement);\n      request.onabort = (event) => {\n        this._addLoadend();\n        abortCallback(event);\n      };\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this._storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this._requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this._requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this._aborting) {\n        lastRunRequestIndex = r;\n        this._requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  _loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this._loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this._augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this._augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this._aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this._requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this._requests[i].readyState !== 4) {\n        this._requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this._runningLoader && this._runningLoader.isLoading()) {\n      this._runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n *\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this._stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this._stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  _stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/Worker}.\n *\n * @external Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task.\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * Ref: {@link https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js}.\n *\n * @external JpegImage\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * Ref: {@link https://github.com/rii-mango/JPEGLosslessDecoderJS}.\n *\n * @external jpeg\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * Ref: {@link https://github.com/jpambrun/jpx-medical/blob/master/jpx.js}.\n *\n * @external JpxImage\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  _script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  _pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  _areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this._script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this._areCallbacksSet) {\n      this._areCallbacksSet = true;\n      // set event handlers\n      this._pool.onworkstart = this.ondecodestart;\n      this._pool.onworkitem = this.ondecodeditem;\n      this._pool.onwork = this.ondecoded;\n      this._pool.onworkend = this.ondecodeend;\n      this._pool.onerror = this.onerror;\n      this._pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this._script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this._pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this._pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  _algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  _numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this._algoName = algoName;\n    this._numberOfData = numberOfData;\n  }\n\n  // decode count\n  _decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this._decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this._algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this._algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this._algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this._algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      index: info.index,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this._decodeCount === this._numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  _areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  _pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this._pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this._pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this._areCallbacksSet) {\n      this._areCallbacksSet = true;\n      // set callbacks\n      this._pixelDecoder.ondecodestart = this.ondecodestart;\n      this._pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this._pixelDecoder.ondecoded = this.ondecoded;\n      this._pixelDecoder.ondecodeend = this.ondecodeend;\n      this._pixelDecoder.onerror = this.onerror;\n      this._pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this._pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this._pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  _options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this._options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  _pixelDecoder = null;\n\n  // local tmp storage\n  _dicomParserStore = [];\n  _finalBufferStore = [];\n  _decompressedSizes = [];\n  _factories = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory|undefined} The associated factory.\n   */\n  _getFactory(elements) {\n    let factory;\n    // mask factory for DICOM SEG\n    const modalityElement = elements['00080060'];\n    if (typeof modalityElement !== 'undefined') {\n      const modality = modalityElement.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n    // image factory for pixel data\n    if (typeof factory === 'undefined') {\n      const pixelElement = elements['7FE00010'];\n      if (typeof pixelElement !== 'undefined') {\n        factory = new ImageFactory();\n      }\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  _generateImage(index, origin) {\n    const dataElements = this._dicomParserStore[index].getDicomElements();\n    const factory = this._factories[index];\n    // exit if no factory\n    if (typeof factory === 'undefined') {\n      return;\n    }\n    // create the image\n    try {\n      const image = factory.create(\n        dataElements,\n        this._finalBufferStore[index],\n        this._options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: dataElements\n        },\n        source: origin,\n        warn: factory.getWarning()\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Generate the image object from an uncompressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  _generateImageUncompressed(index, origin) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: 100,\n      total: 100,\n      index: index,\n      source: origin\n    });\n    // generate image\n    this._generateImage(index, origin);\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Generate the image object from an compressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {Array} pixelBuffer The dicom parser.\n   * @param {string} algoName The compression algorithm name.\n   */\n  _generateImageCompressed(index, pixelBuffer, algoName) {\n    const dicomParser = this._dicomParserStore[index];\n\n    // gather pixel buffer meta data\n    const bitsAllocated =\n      dicomParser.getDicomElements()['00280100'].value[0];\n    const pixelRepresentation =\n      dicomParser.getDicomElements()['00280103'].value[0];\n    const pixelMeta = {\n      bitsAllocated: bitsAllocated,\n      isSigned: (pixelRepresentation === 1)\n    };\n    const columnsElement = dicomParser.getDicomElements()['00280011'];\n    const rowsElement = dicomParser.getDicomElements()['00280010'];\n    if (typeof columnsElement !== 'undefined' &&\n      typeof rowsElement !== 'undefined') {\n      pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n    }\n    const samplesPerPixelElement =\n      dicomParser.getDicomElements()['00280002'];\n    if (typeof samplesPerPixelElement !== 'undefined') {\n      pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n    }\n    const planarConfigurationElement =\n      dicomParser.getDicomElements()['00280006'];\n    if (typeof planarConfigurationElement !== 'undefined') {\n      pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n    }\n\n    const numberOfItems = pixelBuffer.length;\n\n    // setup the decoder (one decoder per all converts)\n    if (this._pixelDecoder === null) {\n      this._pixelDecoder = new PixelBufferDecoder(\n        algoName, numberOfItems);\n      // callbacks\n      // pixelDecoder.ondecodestart: nothing to do\n      this._pixelDecoder.ondecodeditem = (event) => {\n        this._onDecodedItem(event);\n        // send onload and onloadend when all items have been decoded\n        if (event.itemNumber + 1 === event.numberOfItems) {\n          this.onload(event);\n          this.onloadend(event);\n        }\n      };\n      // pixelDecoder.ondecoded: nothing to do\n      // pixelDecoder.ondecodeend: nothing to do\n      this._pixelDecoder.onerror = this.onerror;\n      this._pixelDecoder.onabort = this.onabort;\n    }\n\n    // launch decode\n    for (let i = 0; i < numberOfItems; ++i) {\n      this._pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n        {\n          itemNumber: i,\n          numberOfItems: numberOfItems,\n          index: index\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  _onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.index,\n      source: origin\n    });\n\n    const dataIndex = event.index;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this._decompressedSizes[dataIndex] === 'undefined') {\n        this._decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this._decompressedSizes[dataIndex];\n        try {\n          this._finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this._pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this._decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this._decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this._finalBufferStore[dataIndex].set(\n        decodedData, this._decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this._finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this._generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Handle non image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  _handleNonImageData(index, origin) {\n    const dicomParser = this._dicomParserStore[index];\n    this.onloaditem({\n      data: {\n        info: dicomParser.getDicomElements()\n      },\n      source: origin,\n    });\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Handle image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  _handleImageData(index, origin) {\n    const dicomParser = this._dicomParserStore[index];\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    this._finalBufferStore[index] = pixelBuffer[0];\n\n    // transfer syntax (always there)\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = typeof algoName !== 'undefined';\n\n    if (needDecompression) {\n      // generate image\n      this._generateImageCompressed(\n        index,\n        pixelBuffer,\n        algoName);\n    } else {\n      this._generateImageUncompressed(index, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n    // start event\n    this.onloadstart({\n      source: origin,\n      index: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this._options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this._options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let factory;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      factory = this._getFactory(dicomParser.getDicomElements());\n      if (typeof factory !== 'undefined') {\n        factory.checkElements(dicomParser.getDicomElements());\n      }\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n    // store\n    this._dicomParserStore[dataIndex] = dicomParser;\n    this._factories[dataIndex] = factory;\n\n    // handle parsed data\n    if (typeof factory === 'undefined') {\n      this._handleNonImageData(dataIndex, origin);\n    } else {\n      this._handleImageData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this._pixelDecoder) {\n      this._pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  _inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  _runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  _nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  _nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  _defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this._defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this._defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  _storeInputData(data) {\n    this._inputData = data;\n    // reset counters\n    this._nLoad = 0;\n    this._nLoadend = 0;\n    // clear storage\n    this._clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  _storeLoader(loader) {\n    this._runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  _clearStoredLoader() {\n    this._runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  _addLoad = (_event) => {\n    this._nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this._nLoad === this._inputData.length) {\n      this.onload({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  _addLoadend = (_event) => {\n    this._nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this._nLoadend === this._inputData.length) {\n      this.onloadend({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this._storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this._addLoad;\n        loader.onloadend = this._addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this._storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this._runningLoader && this._runningLoader.isLoading()) {\n      this._runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame.\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event.\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  _options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  _isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this._options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this._isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous).\n   *\n   */\n  _db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this._isLoading) {\n      // pass options\n      this._db2v.setOptions(this._options);\n      // connect handlers\n      this._db2v.onloadstart = this.onloadstart;\n      this._db2v.onprogress = this.onprogress;\n      this._db2v.onloaditem = this.onloaditem;\n      this._db2v.onload = this.onload;\n      this._db2v.onloadend = (event) => {\n        // reset loading flag\n        this._isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this._db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this._db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this._isLoading = true;\n    // convert\n    this._db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this._isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this._db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if one of the folowing conditions is true:\n   * - the file has a 'dcm' extension,\n   * - the file has no extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'dicom',\n   * - the `options.requestHeaders` contains a 'Accept: application/dicom',\n   * - the url has a 'contentType' and it is 'application/dicom'\n   *   (as in wado urls),\n   * - the url has no 'contentType' and no extension or the extension is 'dcm'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'dicom') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/dicom' and no '+'\n          const acceptValue = 'application/dicom';\n          return startsWith(acceptHeader.value, acceptValue) &&\n            acceptHeader.value[acceptValue.length] !== '+';\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/dicom')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  _isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this._isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this._isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this._isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this._isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'json' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'json',\n   * - the `options.requestHeaders` contains a 'Accept: application/json' or\n   *   'Accept: application/dicom+json',\n   * - the url has a 'json' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'json') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/json' or 'application/dicom+json\n          return startsWith(acceptHeader.value, 'application/json') ||\n            startsWith(acceptHeader.value, 'application/dicom+json');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/json')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  _isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this._isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this._isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this._isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this._isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * Always returns false.\n   *\n   * @param {File} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'multipart',\n   * - the `options.requestHeaders` contains a 'Accept: multipart/related'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'multipart') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'multipart/related'\n          return startsWith(acceptHeader.value, 'multipart/related');\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * If abort is triggered, all image.onload callbacks have to be cancelled.\n   *\n   * @type {boolean}\n   */\n  _aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  _createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this._aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this._aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this._createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this._aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'image.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawimage',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: image/'.\n   * - the url has a 'contentType' and it is 'image/jpeg', 'image/png'\n   *   or 'image/gif' (as in wado urls),\n   * - the url has no 'contentType' and the extension is 'jpeg', 'jpg',\n   *   'png' or 'gif'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawimage') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'image/'\n          return startsWith(acceptHeader.value, 'image/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n *\n * Url example (cors enabled):\n *   {@link https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4}.\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  _createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this._createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'video.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawvideo',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: video/'.\n   * - the url has a 'mp4', 'ogg' or 'webm' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawvideo') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'video/'\n          return startsWith(acceptHeader.value, 'video/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * Ref: {@link https://github.com/Stuk/jszip}.\n *\n * @external JSZip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  _isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this._isLoading;\n  }\n\n  _filename = '';\n  _files = [];\n  _zobjs = null;\n\n  /**\n   * JSZip.async callback.\n   *\n   * @param {ArrayBuffer} content Unzipped file image.\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  _zipAsyncCallback(content, origin, index) {\n    this._files.push({filename: this._filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this._files.length * 100 / this._zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this._files.length < this._zobjs.length) {\n      const num = this._files.length;\n      this._filename = this._zobjs[num].name;\n      this._zobjs[num].async('arrayBuffer').then((content) => {\n        this._zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this._isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this._files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this._isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this._files = [];\n      this._zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this._files.length;\n      this._filename = this._zobjs[num].name;\n      this._zobjs[num].async('arrayBuffer').then((content) => {\n        this._zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this._isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'zip' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'zip',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: application/zip'.\n   * - the url has a 'zip' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'zip') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/zip'\n          return startsWith(acceptHeader.value, 'application/zip');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/zip')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class ZipLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {File[]}\n   */\n  _inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {FileReader[]}\n   */\n  _readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  _runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  _nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  _nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  _defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this._defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this._defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {File[]} data The input data.\n   */\n  _storeInputData(data) {\n    this._inputData = data;\n    // reset counters\n    this._nLoad = 0;\n    this._nLoadend = 0;\n    // clear storage\n    this._clearStoredReaders();\n    this._clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {FileReader} reader The launched reader.\n   */\n  _storeReader(reader) {\n    this._readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  _clearStoredReaders() {\n    this._readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  _storeLoader(loader) {\n    this._runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  _clearStoredLoader() {\n    this._runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  _addLoad = (_event) => {\n    this._nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this._nLoad === this._inputData.length) {\n      this.onload({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  _addLoadend = (_event) => {\n    this._nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this._nLoadend === this._inputData.length) {\n      this.onloadend({\n        source: this._inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  _augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {File} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  _getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {File[]} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this._storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this._addLoad;\n        loader.onloadend = this._addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this._storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/FileReader}.\n       *\n       * @external FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this._storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this._augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this._getLoadHandler(loader, dataElement, i);\n      // reader.onloadend: nothing to do\n      const errorCallback =\n        this._augmentCallbackEvent(this.onerror, dataElement);\n      reader.onerror = (event) => {\n        this._addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this._augmentCallbackEvent(this.onabort, dataElement);\n      reader.onabort = (event) => {\n        this._addLoadend();\n        abortCallback(event);\n      };\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this._readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this._readers[i].readyState === 1) {\n        this._readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this._runningLoader && this._runningLoader.isLoading()) {\n      this._runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  _defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  _currentLoaders = {};\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this._defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @param {string} dataId The data Id.\n   */\n  loadFiles(files, dataId) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this._loadStateFile(files[0], dataId);\n    } else {\n      this._loadImageFiles(files, dataId);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} dataId The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n\n  loadURLs(urls, dataId, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this._loadStateUrl(urls[0], dataId, options);\n    } else {\n      this._loadImageUrls(urls, dataId, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: '', filename: '', data: data}].\n   * @param {string} dataId The data Id.\n   */\n  loadImageObject(data, dataId) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this._loadData(data, memoryIO, 'image', dataId);\n  }\n\n  /**\n   * Get the currently loaded data ids.\n   *\n   * @returns {string[]} The data ids.\n   */\n  getLoadingDataIds() {\n    return Object.keys(this._currentLoaders);\n  }\n\n  /**\n   * Abort an individual current loader.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abort(dataId) {\n    if (typeof this._currentLoaders[dataId] !== 'undefined') {\n      this._currentLoaders[dataId].loader.abort();\n      delete this._currentLoaders[dataId];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {File[]} files The list of image files to load.\n   * @param {string} dataId The data Id.\n   */\n  _loadImageFiles(files, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this._defaultCharacterSet);\n    // load data\n    this._loadData(files, fileIO, 'image', dataId);\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  _loadImageUrls(urls, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this._defaultCharacterSet);\n    // load data\n    this._loadData(urls, urlIO, 'image', dataId, options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   * @param {string} dataId The data Id.\n   */\n  _loadStateFile(file, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this._loadData([file], fileIO, 'state', dataId);\n  }\n\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  _loadStateUrl(url, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this._loadData([url], urlIO, 'state', dataId, options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {string[]|File[]|Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {string} dataId The data id.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  _loadData(data, loader, loadType, dataId, options) {\n    const eventInfo = {\n      loadtype: loadType,\n      dataid: dataId\n    };\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this._currentLoaders[dataId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this._augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this._augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        dataid: dataId\n      };\n      if (typeof this._currentLoaders[dataId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this._currentLoaders[dataId].isFirstItem;\n      }\n      // callback\n      this._augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this._currentLoaders[dataId] !== 'undefined' &&\n        this._currentLoaders[dataId].isFirstItem) {\n        this._currentLoaders[dataId].isFirstItem = false;\n      }\n    };\n    loader.onload = this._augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this._currentLoaders[dataId];\n      // callback\n      this._augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this._augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this._augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        dataid: dataId\n      });\n      this.onloadend({\n        dataid: dataId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  _augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data: meta and possible image.\n */\nclass DicomData {\n  /**\n   * DICOM meta data.\n   *\n   * @type {object}\n   */\n  meta;\n  /**\n   * DICOM image.\n   *\n   * @type {Image|undefined}\n   */\n  image;\n\n  /**\n   * @param {object} meta The DICOM meta data.\n   * @param {Image} image The DICOM image.\n   */\n  constructor(meta, image) {\n    this.meta = meta;\n    this.image = image;\n  }\n}\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of DICOM data.\n   *\n   * @type {Object<string, DicomData>}\n   */\n  _dataList = {};\n\n  /**\n   * Distinct data loaded counter.\n   *\n   * @type {number}\n   */\n  _dataIdCounter = -1;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the next data id.\n   *\n   * @returns {string} The data id.\n   */\n  getNextDataId() {\n    ++this._dataIdCounter;\n    return this._dataIdCounter.toString();\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return Object.keys(this._dataList);\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this._dataList = {};\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The DICOM data.\n   */\n  get(dataId) {\n    return this._dataList[dataId];\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    const res = [];\n    // check input\n    if (typeof uids === 'undefined' ||\n      uids.length === 0) {\n      return res;\n    }\n    const keys = Object.keys(this._dataList);\n    for (const key of keys) {\n      if (this._dataList[key].image.containsImageUids(uids)) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image to set.\n   */\n  setImage(dataId, image) {\n    this._dataList[dataId].image = image;\n    // fire image set\n    this._fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: dataId\n    });\n    // listen to image change\n    image.addEventListener('imagecontentchange', this._getFireEvent(dataId));\n    image.addEventListener('imagegeometrychange', this._getFireEvent(dataId));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(dataId, image, meta) {\n    if (typeof this._dataList[dataId] !== 'undefined') {\n      throw new Error('Data id already used in storage: ' + dataId);\n    }\n    // store the new image\n    this._dataList[dataId] = new DicomData(meta, image);\n    // listen to image change\n    if (typeof image !== 'undefined') {\n      image.addEventListener('imagecontentchange', this._getFireEvent(dataId));\n      image.addEventListener('imagegeometrychange', this._getFireEvent(dataId));\n    }\n  }\n\n  /**\n   * Remove a data from the list.\n   *\n   * @param {string} dataId The data id.\n   */\n  remove(dataId) {\n    if (typeof this._dataList[dataId] !== 'undefined') {\n      // stop listeners\n      const image = this._dataList[dataId].image;\n      if (typeof image !== 'undefined') {\n        image.removeEventListener(\n          'imagecontentchange', this._getFireEvent(dataId));\n        image.removeEventListener(\n          'imagegeometrychange', this._getFireEvent(dataId));\n      }\n      // fire a data remove event\n      this._fireEvent({\n        type: 'imageremove',\n        dataid: dataId\n      });\n      // remove data from list\n      delete this._dataList[dataId];\n    }\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(dataId, image, meta) {\n    if (typeof this._dataList[dataId] === 'undefined') {\n      throw new Error('Cannot find data to update: ' + dataId);\n    }\n    const dataToUpdate = this._dataList[dataId];\n\n    // add slice to current image\n    if (typeof dataToUpdate.image !== 'undefined' &&\n      typeof image !== 'undefined'\n    ) {\n      dataToUpdate.image.appendSlice(image);\n    }\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input data id\n   * to the event value.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Function} A fireEvent function.\n   */\n  _getFireEvent(dataId) {\n    return (event) => {\n      event.dataid = dataId;\n      this._fireEvent(event);\n    };\n  }\n\n} // DataController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n *\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>.\n *\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>.\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {string[]} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  _dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  _configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {string[]}\n   */\n  _eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  _isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  _data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  _currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {string} dataId The associated data id.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this._app = app;\n    this._dataId = dataId;\n    this._configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this._configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this._configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this._eventNames.includes(eventType)) {\n            this._eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this._data = [];\n    this._currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this._data[dataUid] = createOverlayData(data, this._configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this._data[dataUid] = createOverlayDataForDom(data, this._configs);\n    }\n    // store uid\n    this._currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  _onSliceChange = (event) => {\n    if (event.dataid !== this._dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this._currentDataUid !== event.data.imageUid) {\n      this._currentDataUid = event.data.imageUid;\n      this._updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data.\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners.\n   */\n  _updateData = (event) => {\n    if (event.dataid !== this._dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this._data[this._currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this._currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    // fire valuechange for listeners\n    this._fireEvent({type: 'valuechange', data: sliceOverlayData});\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this._isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this._app.addEventListener('positionchange', this._onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this._eventNames.length; ++i) {\n      this._app.addEventListener(this._eventNames[i], this._updateData);\n    }\n    // update flag\n    this._isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this._app.removeEventListener('positionchange', this._onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this._eventNames.length; ++i) {\n      this._app.removeEventListener(this._eventNames[i], this._updateData);\n    }\n    // update flag\n    this._isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent(event) {\n    this._listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a normalised spin speed in the Y direction to try to support\n * trackpads (small and large deltaY) and mouse wheel (large deltaY).\n * Should return 1 or -1 for a single mouse wheel tick.\n *\n * @param {object} event The wheel event.\n * @returns {number} The normalised spin Y.\n */\nfunction getSpinY(event) {\n  // (notes of 03/2024)\n\n  // firefox seems to change the value of deltaY\n  // if you ask for deltaMode before (?????)\n\n  // deltaY (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 4\n  // - firefox: [linux] 132, [mac]: 16\n\n  // wheelDelta (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 240\n  // - firefox: [linux] 120, [mac]: 48\n\n  // -> using wheelDelta for mouse wheel detection as\n  //    it is consistently larger than trackpad scroll\n\n  // wheelDeltaY and deltaY do not go in the same direction,\n  // using -deltaY so that they do...\n\n  if (typeof event.wheelDeltaY === 'undefined') {\n    //logger.warn('No wheel delta, scroll could be tricky...);\n    return -event.deltaY;\n  } else {\n    const threshold = 45;\n    if (event.wheelDeltaY > threshold) {\n      return 1;\n    } else if (event.wheelDeltaY < -threshold) {\n      return -1;\n    } else {\n      return -event.deltaY / 60;\n    }\n  }\n}\n\n/**\n * Class to sum wheel events and know if that sum\n * corresponds to a 'tick'.\n */\nclass ScrollSum {\n  /**\n   * The scroll sum.\n   *\n   * @type {number}\n   */\n  _sum = 0;\n\n  /**\n   * Get the scroll sum.\n   *\n   * @returns {number} The scroll sum.\n   */\n  getSum() {\n    return this._sum;\n  }\n\n  /**\n   * Add scroll.\n   *\n   * @param {object} event The wheel event.\n   */\n  add(event) {\n    this._sum += getSpinY(event);\n  }\n\n  /**\n   * Clear the scroll sum.\n   */\n  clear() {\n    this._sum = 0;\n  }\n\n  /**\n   * Does the accumulated scroll correspond to a 'tick'.\n   *\n   * @returns {boolean} True if the sum corresponds to a 'tick'.\n   */\n  isTick() {\n    return Math.abs(this._sum) >= 1;\n  }\n}\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Accumulated scroll.\n   *\n   * @type {ScrollSum}\n   */\n  _scrollSum = new ScrollSum();\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel(event) {\n    this._scrollSum.add(event);\n    const up = this._scrollSum.getSum() >= 0;\n\n    // exit if no tick\n    if (!this._scrollSum.isTick()) {\n      return;\n    } else {\n      this._scrollSum.clear();\n    }\n\n    // prevent default page scroll\n    event.preventDefault();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    let newPosition;\n    if (layerGroup.canScroll()) {\n      if (up) {\n        newPosition = viewController.getIncrementScrollPosition();\n      } else {\n        newPosition = viewController.getDecrementScrollPosition();\n      }\n    } else if (layerGroup.moreThanOne(3)) {\n      if (up) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n  }\n\n} // ScrollWheel class\n","/**\n * Namespace for translation function\n *   (in a namespace to allow for override from client).\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    // defaut expects something like 'unit.cm2'\n    const unit = {\n      mm: 'mm',\n      cm2: 'cm²',\n      degree: '°'\n    };\n    const props = key.split('.');\n    if (props.length !== 2) {\n      throw new Error('Unexpected translation key length.');\n    }\n    if (props[0] !== 'unit') {\n      throw new Error('Unexpected translation key prefix.');\n    }\n    return unit[props[1]];\n  }\n\n};\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  _begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  _end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this._begin = begin;\n    this._end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this._begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this._end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacing2D) {\n    let wlen = null;\n    if (spacing2D !== null) {\n      const dxs = this.getDeltaX() * spacing2D.x;\n      const dys = this.getDeltaY() * spacing2D.y;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing2D = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing2D);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {ViewController} from '../app/viewController';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {Style} style The application style.\n * @returns {Konva.Ellipse} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '_999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  _shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  _currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {Konva.Shape}\n   */\n  _shape = null;\n\n  /**\n   * Associated draw layer. Used to bound anchor move.\n   *\n   * @type {DrawLayer}\n   */\n  _drawLayer;\n\n  /**\n   * Associated view controller. Used for quantification update.\n   *\n   * @type {ViewController}\n   */\n  _viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  _isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Draw event callback.\n   *\n   * @type {eventFn}\n   */\n  _drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this._shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {Konva.Shape} inshape The shape to edit.\n   * @param {DrawLayer} drawLayer The associated draw layer.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  setShape(inshape, drawLayer, viewController) {\n    this._shape = inshape;\n    this._drawLayer = drawLayer;\n    this._viewController = viewController;\n    if (this._shape) {\n      // remove old anchors\n      this._removeAnchors();\n      // find a factory for the input shape\n      const group = this._shape.getParent();\n      const keys = Object.keys(this._shapeFactoryList);\n      this._currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this._shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this._currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this._currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this._addAnchors();\n    }\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {Konva.Shape} The edited shape.\n   */\n  getShape() {\n    return this._shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this._isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {eventFn} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this._drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this._isActive = true;\n    if (this._shape) {\n      this._setAnchorsVisible(true);\n      if (this._shape.getLayer()) {\n        this._shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this._isActive = false;\n    if (this._shape) {\n      this._setAnchorsVisible(false);\n      if (this._shape.getLayer()) {\n        this._shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the editor.\n   */\n  reset() {\n    this._shape = undefined;\n    this._drawLayer = undefined;\n    this._viewController = undefined;\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this._removeAnchors();\n    // add anchors\n    this._addAnchors();\n    // set them visible\n    this._setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  _applyFuncToAnchors(func) {\n    if (this._shape && this._shape.getParent()) {\n      const anchors = this._shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  _setAnchorsVisible(flag) {\n    this._applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this._setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this._setAnchorOff(anchor);\n      };\n    }\n    this._applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  _removeAnchors() {\n    this._applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  _addAnchors() {\n    // exit if no shape or no layer\n    if (!this._shape || !this._shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this._shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this._currentFactory.getAnchors(this._shape, this._app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this._setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {Konva.Shape} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  _getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set on.\n   */\n  _setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this._shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      startAnchor = this._getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // validate the anchor position\n      validateAnchorPosition(this._drawLayer.getBaseSize(), anchor);\n      // update shape\n      this._currentFactory.update(\n        anchor, this._app.getStyle(), this._viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      const endAnchor = this._getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this._currentFactory,\n        startAnchor,\n        endAnchor,\n        this._drawLayer,\n        this._viewController,\n        this._app.getStyle()\n      );\n      chgcmd.onExecute = this._drawEventCallback;\n      chgcmd.onUndo = this._drawEventCallback;\n      chgcmd.execute();\n      this._app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('_ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('_999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set off.\n   */\n  _setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {DrawTrash} from './drawTrash';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw of layer group structure.\n *\n * ```\n * drawLayer\n * |_ positionGroup: {name=\"position-group\", id=\"_2-0___3-1\"}\n *    |_ shapeGroup: {name=\"{shape name}-group\", id=\"#\"}\n *       |_ shape: {name=\"shape\"},\n *       |_ label: {name=\"label\"},\n *       |_ extra: line tick, protractor arc...\n * ```\n *\n * Discussion:\n * - posGroup > shapeGroup:\n *   (pro) slice/frame display: 1 loop -\n *   (cons) multi-slice shape splitted in positionGroups.\n * - shapeGroup > posGroup:\n *   (pros) more logical -\n *   (cons) slice/frame display: 2 loops.\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  _scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {ShapeEditor}\n   */\n  _shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {DrawTrash}\n   */\n  _trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  _style;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  _callbackStore = [];\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n    this._scrollWhell = new ScrollWheel(app);\n    this._shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this._shapeEditor.setDrawEventCallback(this._fireEvent);\n\n    this._style = app.getStyle();\n    this._trash = new DrawTrash();\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _isDrawing = false;\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  _shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  _currentFactory = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  _tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  _shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  _points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {Point2D}\n   */\n  _lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {Konva.Group}\n   */\n  _activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  _originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  _mouseOverCursor = 'pointer';\n\n  /**\n   * With scroll flag.\n   *\n   * @type {boolean}\n   */\n  _withScroll = true;\n\n  /**\n   * Auto shape colour: will use defaults colours and\n   * vary them according to the layer.\n   *\n   * @type {boolean}\n   */\n  _autoShapeColour = true;\n\n  /**\n   * Event listeners.\n   */\n  _listeners = {};\n\n  /**\n   * Flag to know if the last added point was made by mouse move.\n   *\n   * @type {boolean}\n   */\n  _lastIsMouseMovePoint = false;\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  _switchEditOrCreateShapeGroup(point, divId) {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n\n    // determine if the click happened in an existing shape\n    const kshape = stage.getIntersection({\n      x: point.getX(),\n      y: point.getY()\n    });\n\n    // update scale\n    this._style.setZoomScale(stage.scale());\n\n    // If shape exists, let user to edit\n    if (kshape) {\n      this._selectShapeGroup(layerGroup, drawLayer, kshape);\n      return;\n    }\n    // Else, is a new shape creation\n    this._startShapeGroupCreation(layerGroup, point);\n  }\n\n  /**\n   * Initializes the new shape creation:\n   * - Updates the started variable,\n   * - Gets the factory,\n   * - Initializes the points array.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {Point2D} point The start point where the user clicks.\n   */\n  _startShapeGroupCreation(layerGroup, point) {\n    // disable edition\n    this._shapeEditor.disable();\n    this._shapeEditor.reset();\n    this._setToDrawingState();\n    // store point\n    const viewLayer = layerGroup.getActiveViewLayer();\n    this._lastPoint = viewLayer.displayToPlanePos(point);\n    this._points.push(this._lastPoint);\n  }\n\n  /**\n   * Sets the variables to drawing state:\n   * - Updates is drawing variable,\n   * - Initializes the current factory,\n   * - Resets points.\n   */\n  _setToDrawingState() {\n    // start storing points\n    this._isDrawing = true;\n    // set factory\n    this._currentFactory = new this._shapeFactoryList[this._shapeName]();\n    // clear array\n    this._points = [];\n  }\n\n  /**\n   * Resets the variables to not drawing state:\n   * - Destroys tmp shape group,\n   * - Updates is drawing variable,\n   * - Resets points.\n   */\n  _setToNotDrawingState() {\n    this._isDrawing = false;\n    this._points = [];\n  }\n\n  /**\n   * Selects a shape group.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   * @param {Konva.Shape} kshape The shape that has been selected.\n   */\n  _selectShapeGroup(layerGroup, drawLayer, kshape) {\n    const group = kshape.getParent();\n    const selectedShape = group.find('.shape')[0];\n    // reset editor if click on other shape\n    // (and avoid anchors mouse down)\n    if (selectedShape &&\n        selectedShape instanceof Konva.Shape &&\n        selectedShape !== this._shapeEditor.getShape()) {\n      this._shapeEditor.disable();\n      const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n      this._shapeEditor.setShape(selectedShape, drawLayer, viewController);\n      this._shapeEditor.enable();\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _updateShapeGroupCreation(point, divId) {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(point);\n\n    // draw line to current pos\n    if (Math.abs(pos.getX() - this._lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this._lastPoint.getY()) > 0) {\n      // clear last mouse move point\n      if (this._lastIsMouseMovePoint) {\n        this._points.pop();\n      }\n      // current point\n      this._lastPoint = pos;\n      // mark it as temporary\n      this._lastIsMouseMovePoint = true;\n      // add it to the list\n      this._points.push(this._lastPoint);\n      // update points\n      this._onNewPoints(this._points, layerGroup);\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   *\n   * @param {string} divId The layer group divId.\n   */\n  _finishShapeGroupCreation(divId) {\n    // exit if no points\n    if (this._points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this._points.length === this._currentFactory.getNPoints()) {\n      // store points\n      const layerGroup =\n        this._app.getLayerGroupByDivId(divId);\n      this._onFinalPoints(this._points, layerGroup);\n      this._setToNotDrawingState();\n    }\n\n    // reset mouse move point flag\n    this._lastIsMouseMovePoint = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if not started draw\n    if (this._isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._switchEditOrCreateShapeGroup(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this._isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._updateShapeGroupCreation(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this._isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this._currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this._isDrawing) {\n      return;\n    }\n    // exit if no points\n    if (this._points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this._onFinalPoints(this._points, layerGroup);\n    this._setToNotDrawingState();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // exit if not started draw\n    if (!this._isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // exit if not started draw\n    if (this._isDrawing) {\n      return;\n    }\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._switchEditOrCreateShapeGroup(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this._isDrawing) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const touchPoints = getTouchPoints(event);\n\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(touchPoints[0]);\n\n    if (Math.abs(pos.getX() - this._lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this._lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this._points.length !== 1) {\n        this._points.pop();\n      }\n      // current point\n      this._lastPoint = pos;\n      // add current one to the list\n      this._points.push(this._lastPoint);\n      // allow for anchor points\n      if (this._points.length < this._currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this._points.push(this._lastPoint);\n        }, this._currentFactory.getTimeout());\n      }\n      // update points\n      this._onNewPoints(this._points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    if (this._withScroll) {\n      this._scrollWhell.wheel(event);\n    }\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this._isDrawing) {\n      event.context = 'Draw';\n      this._app.onKeydown(event);\n    }\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this._shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this._shapeEditor.getShape().getParent();\n      if (!(shapeGroup instanceof Konva.Group)) {\n        return;\n      }\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      // delete command\n      const drawLayer = this._app.getActiveLayerGroup().getActiveDrawLayer();\n      this._emitDeleteCommand(drawLayer, shapeGroup, shape);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this._tmpShapeGroup !== null) {\n      const konvaLayer = this._tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this._tmpShapeGroup.destroy();\n      this._tmpShapeGroup = null;\n      // set state\n      this._setToNotDrawingState();\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Point2D[]} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  _onNewPoints(tmpPoints, layerGroup) {\n    // remove temporary shape draw\n    if (this._tmpShapeGroup) {\n      this._tmpShapeGroup.destroy();\n      this._tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const viewLayer = layerGroup.getActiveViewLayer();\n\n    // auto mode: vary shape colour with layer id\n    if (this._autoShapeColour) {\n      const colours = [\n        '_ffff80', '_ff80ff', '_80ffff', '_80ff80', '8080ff', 'ff8080'\n      ];\n      // warning: depends on layer id nomenclature\n      const viewLayerId = viewLayer.getId();\n      const layerId = viewLayerId.substring(viewLayerId.length - 1);\n      // expecting one draw layer per view layer\n      const layerIndex = parseInt(layerId, 10) / 2;\n      const colour = colours[layerIndex];\n      if (typeof colour !== 'undefined') {\n        this._style.setLineColour(colour);\n      }\n    }\n\n    // create shape group\n    const viewController = viewLayer.getViewController();\n    this._tmpShapeGroup = this._currentFactory.create(\n      tmpPoints, this._style, viewController);\n    // do not listen during creation\n    const shape = this._tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this._tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Point2D[]} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  _onFinalPoints(finalPoints, layerGroup) {\n    // remove temporary shape draw\n    // (has to be done before sending drawcreate event)\n    if (this._tmpShapeGroup) {\n      this._tmpShapeGroup.destroy();\n      this._tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const drawController = drawLayer.getDrawController();\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // create final shape\n    const finalShapeGroup = this._currentFactory.create(\n      finalPoints, this._style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    this._emitDrawGroupCommand(drawLayer, finalShapeGroup);\n\n    // activate shape listeners\n    this._addShapeListeners(layerGroup, finalShapeGroup);\n  }\n\n  /**\n   * Create a draw group command, execute it and add\n   *   it to the undo stack.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to draw.\n   */\n  _emitDrawGroupCommand(drawLayer, shapeGroup) {\n    // draw shape command\n    const command = new DrawGroupCommand(\n      shapeGroup,\n      this._shapeName,\n      drawLayer\n    );\n    command.onExecute = this._fireEvent;\n    command.onUndo = this._fireEvent;\n    // execute it\n    command.execute();\n    // add it to undo stack\n    this._app.addToUndoStack(command);\n  }\n\n  /**\n   * Create a delete group command, execute it and add\n   *   it to the undo stack.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to delete.\n   * @param {Konva.Shape} shape The shape to delete.\n   */\n  _emitDeleteCommand(drawLayer, shapeGroup, shape) {\n    const shapeDisplayName = getShapeDisplayName(shape);\n    // delete command\n    const delcmd = new DeleteGroupCommand(\n      shapeGroup,\n      shapeDisplayName,\n      drawLayer\n    );\n    delcmd.onExecute = this._fireEvent;\n    delcmd.onUndo = this._fireEvent;\n    // execute it\n    delcmd.execute();\n    // add it to undo stack\n    this._app.addToUndoStack(delcmd);\n  }\n\n  /**\n   * Create a move group command and add\n   *   it to the undo stack. To no execute it.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to move.\n   * @param {Konva.Shape} shape The shape to move.\n   * @param {object} translation The move translation as {x,y}.\n   */\n  _storeMoveCommand(drawLayer, shapeGroup, shape, translation) {\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const mvcmd = new MoveGroupCommand(\n      shapeGroup,\n      shapeDisplayName,\n      translation,\n      drawLayer\n    );\n    mvcmd.onExecute = this._fireEvent;\n    mvcmd.onUndo = this._fireEvent;\n    // add it to undo stack\n    this._app.addToUndoStack(mvcmd);\n  }\n\n  /**\n   * Get a layerGroup position callback.\n   *\n   * TODO: check needo for store item removal.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {Function} The layerGroup position callback.\n   */\n  _getPositionCallback(layerGroup) {\n    const divId = layerGroup.getDivId();\n    if (typeof this._callbackStore[divId] === 'undefined') {\n      this._callbackStore[divId] = () => {\n        this._updateDrawLayer(layerGroup);\n      };\n    }\n    return this._callbackStore[divId];\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this._shapeEditor.disable();\n    this._shapeEditor.reset();\n    // get the current draw layer\n    const layerGroup = this._app.getActiveLayerGroup();\n    if (typeof layerGroup === 'undefined') {\n      throw new Error('No active layerGroup to activate draw on');\n    }\n    this._activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this._originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this._app.addEventListener('positionchange',\n        this._getPositionCallback(layerGroup)\n      );\n    } else {\n      // reset shape and cursor\n      this._resetActiveShapeGroup();\n      // reset local var\n      this._originalCursor = undefined;\n      // remove listeners\n      this._app.removeEventListener('positionchange',\n        this._getPositionCallback(layerGroup)\n      );\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  _updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this._activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  _activateCurrentPositionShapes(visible, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      return;\n    }\n    const drawController = drawLayer.getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this._addShapeListeners(layerGroup, group);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this._removeShapeListeners(group);\n      });\n    }\n    // draw\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Remove shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set off.\n   */\n  _removeShapeListeners(shapeGroup) {\n    // mouse over\n    this._removeShapeOverListeners(shapeGroup);\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {Scalar2D} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {Scalar2D} The real position in the image as {x,y}.\n   */\n  _getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  _resetActiveShapeGroup() {\n    if (typeof this._originalCursor !== 'undefined') {\n      document.body.style.cursor = this._originalCursor;\n    }\n    if (typeof this._activeShapeGroup !== 'undefined') {\n      this._activeShapeGroup.opacity(1);\n    }\n  }\n\n  /**\n   * Add shape group mouse over and out listeners: updates\n   *   shape group opacity and cursor.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  _addShapeOverListeners(shapeGroup) {\n    // handle mouse over\n    shapeGroup.on('mouseover', () => {\n      // store locally\n      this._activeShapeGroup = shapeGroup;\n      // change cursor and opacity\n      document.body.style.cursor = this._mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    });\n\n    // handle mouse out\n    shapeGroup.on('mouseout', () => {\n      // reset cursor and opacity\n      this._resetActiveShapeGroup();\n      // reset local var\n      this._activeShapeGroup = undefined;\n    });\n  }\n\n  /**\n   * Remove shape group mouse over and out listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  _removeShapeOverListeners(shapeGroup) {\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n  }\n\n  /**\n   * Get a groups' shape factory.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   * @returns {object} The corresponding factory.\n   */\n  _getShapeFactory(shapeGroup) {\n    let factory;\n    const keys = Object.keys(this._shapeFactoryList);\n    for (let i = 0; i < keys.length; ++i) {\n      factory = new this._shapeFactoryList[keys[i]];\n      if (factory.isFactoryGroup(shapeGroup)) {\n        // stop at first find\n        break;\n      }\n    }\n    if (typeof factory === 'undefined') {\n      throw new Error('Cannot find factory to update quantification.');\n    }\n    return factory;\n  }\n\n  /**\n   * Add shape group listeners.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   */\n  _addShapeListeners(layerGroup, shapeGroup) {\n    // shape mouse over\n    this._addShapeOverListeners(shapeGroup);\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      colour = shape.stroke();\n      // display trash\n      this._trash.activate(drawLayer);\n      // deactivate anchors to avoid events on null shape\n      this._shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      const factory = this._getShapeFactory(shapeGroup);\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this._getRealPosition(offset, layerGroup);\n      this._trash.changeChildrenColourOnTrashHover(eventPos,\n        shapeGroup, colour);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // remove trash\n      this._trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this._getRealPosition(offset, layerGroup);\n      if (this._trash.isOverTrash(eventPos)) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this._shapeEditor.disable();\n        this._shapeEditor.reset();\n        this._trash.changeGroupChildrenColour(shapeGroup, colour);\n        this._emitDeleteCommand(drawLayer, shapeGroup, shape);\n        // reset cursor\n        document.body.style.cursor = this._originalCursor;\n      } else {\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          // the move is handled by Konva, create a command but\n          // do not execute it\n          this._storeMoveCommand(drawLayer, group, shape, translation);\n          // manually trigger a move event\n          this._fireEvent({\n            type: 'drawmove',\n            id: group.id(),\n            srclayerid: drawLayer.getId(),\n            dataid: drawLayer.getDataId()\n          });\n        }\n        // reset anchors\n        this._shapeEditor.setAnchorsActive(true);\n        this._shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.currentTarget;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      if (!(label instanceof Konva.Label)) {\n        return;\n      }\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = (meta) => {\n        // store meta\n        // @ts-expect-error\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          meta.textExpr, meta.quantification));\n        // hide label if no text\n        label.visible(meta.textExpr.length !== 0);\n\n        // trigger event\n        this._fireEvent({\n          type: 'drawchange',\n          id: groupId,\n          srclayerid: drawLayer.getId(),\n          dataid: drawLayer.getDataId()\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call roi dialog\n      // @ts-expect-error\n      customUI.openRoiDialog(ktext.meta, onSaveCallback);\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this._shapeFactoryList = options;\n    // pass them to the editor\n    this._shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.autoShapeColour !== 'undefined') {\n      this._autoShapeColour = features.autoShapeColour;\n    }\n    if (typeof features.shapeColour !== 'undefined') {\n      this._style.setLineColour(features.shapeColour);\n      this._autoShapeColour = false;\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this._shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this._mouseOverCursor = features.mouseOverCursor;\n    }\n    if (typeof features.withScroll !== 'undefined') {\n      this._withScroll = features.withScroll;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this._listeners[type] === 'undefined') {\n      this._listeners[type] = [];\n    }\n    this._listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this._listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this._listeners[type].length; ++i) {\n      if (this._listeners[type][i] === listener) {\n        this._listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    if (typeof this._listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this._listeners[event.type].length; ++i) {\n      this._listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this._shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {Konva.Group} group The group that contains anchors.\n * @returns {Point2D|undefined} The minimum position.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return new Point2D(minX, minY);\n}\n\n/**\n * Bound a node position.\n *\n * @param {Konva.Node} node The node to bound the position.\n * @param {Point2D} min The minimum position.\n * @param {Point2D} max The maximum position.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.getX()) {\n    node.x(min.getX());\n    changed = true;\n  } else if (node.x() > max.getX()) {\n    node.x(max.getX());\n    changed = true;\n  }\n  if (node.y() < min.getY()) {\n    node.y(min.getY());\n    changed = true;\n  } else if (node.y() > max.getY()) {\n    node.y(max.getY());\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Group} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = new Point2D(\n    -anchorMin.getX(),\n    -anchorMin.getY()\n  );\n  const max = new Point2D(\n    stageSize.x - (anchorMin.getX() + Math.abs(shape.width())),\n    stageSize.y - (anchorMin.getY() + Math.abs(shape.height()))\n  );\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Shape} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = new Point2D(\n    -group.x(),\n    -group.y()\n  );\n  const max = new Point2D(\n    stageSize.x - group.x(),\n    stageSize.y - group.y()\n  );\n\n  return boundNodePosition(anchor, min, max);\n}\n","import Konva from 'konva';\n\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\nexport class DrawTrash {\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {Konva.Group}\n   */\n  _trash;\n\n  constructor() {\n    this.createTrashIcon();\n\n  }\n\n  /**\n   * Creates the trash icon o positionates it.\n   */\n  createTrashIcon() {\n    this._trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this._trash.width(20);\n    this._trash.height(20);\n    this._trash.add(trashLine1);\n    this._trash.add(trashLine2);\n  }\n\n  /**\n   *\n   * Activates the trash, by showing the icon into the layer draw layer.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   */\n  activate(drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    const scale = stage.scale();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n    this._trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n    this._trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n    this._trash.scale(invscale);\n    konvaLayer.add(this._trash);\n    // draw\n    konvaLayer.draw();\n  }\n\n  /**\n   *\n   * Change colour on trash over.\n   *\n   * @param {Scalar2D} eventPosition The event drag move position.\n   * @param {Konva.Group} shapeGroup The shape group whose colour\n   *   must be change.\n   * @param {string} originalShapeColour The original shape colour.\n   */\n  changeChildrenColourOnTrashHover(eventPosition,\n    shapeGroup, originalShapeColour) {\n    if (this.isOverTrash(eventPosition)) {\n      this.changeGroupChildrenColour(this._trash, 'orange');\n      this.changeGroupChildrenColour(shapeGroup, 'red');\n      return;\n\n    }\n    this.changeGroupChildrenColour(this._trash, 'red');\n    this.changeGroupChildrenColour(shapeGroup, originalShapeColour);\n  }\n\n  /**\n   * Change colour on trash out.\n   *\n   * @param {Konva.Group} group The group whose colour must be change.\n   * @param {string} colour The new colour to be set.\n   */\n  changeGroupChildrenColour(group, colour) {\n    group.getChildren().forEach(function (tshape) {\n      if (tshape instanceof Konva.Shape &&\n        typeof tshape.stroke !== 'undefined') {\n        tshape.stroke(colour);\n      }\n    });\n  }\n\n  /**\n   * Removes the trash from the draw layer.\n   */\n  remove() {\n    this._trash.remove();\n  }\n\n  /**\n   * Determines if the event is over trash.\n   *\n   * @param {Scalar2D} eventPosition The event position.\n   * @returns {boolean} True if the event is over trash.\n   */\n  isOverTrash(eventPosition) {\n    const trashHalfWidth =\n        this._trash.width() * Math.abs(this._trash.scaleX()) / 2;\n    const trashHalfHeight =\n        this._trash.height() * Math.abs(this._trash.scaleY()) / 2;\n    return Math.abs(eventPosition.x - this._trash.x()) < trashHalfWidth &&\n        Math.abs(eventPosition.y - this._trash.y()) < trashHalfHeight;\n  }\n\n}","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  _points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this._points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this._points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this._points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Point2D[]} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this._points = this._points.concat(rhs);\n  }\n\n} // ROI class\n","// linting 'type {Object.<bla, bla>}' will give:\n// warning  Use object shorthand or index signatures instead of `Object`,\n//   e.g., `{[key: string]: string}` jsdoc/check-types\n// pb: jsdoc does not support the object shorthand\n//   and ignoring will give vscode warning since the doc linting is not\n//   activated by default.\n\n// Overridable default object.\nexport const defaults = {\n  /**\n   * List of default window level presets.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelText: {\n    arrow: {\n      '*': ''\n    },\n    circle: {\n      '*': '{surface}'\n    },\n    ellipse: {\n      '*': '{surface}'\n    },\n    freeHand: {\n      '*': ''\n    },\n    protractor: {\n      '*': '{angle}'\n    },\n    rectangle: {\n      '*': '{surface}'\n    },\n    roi: {\n      '*': ''\n    },\n    ruler: {\n      '*': '{length}'\n    }\n  }\n};\n","import {ROI} from '../math/roi';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} [viewController] The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    if (typeof viewController !== 'undefined') {\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.roi[modality] !== 'undefined') {\n        textExpr = defaults.labelText.roi[modality];\n      } else {\n        textExpr = defaults.labelText.roi['*'];\n      }\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kroi instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kroi.x();\n    points[index + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Point2D[]} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {number[]} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Point2D[]}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {number[]}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Point2D[]} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * Compute grey scale.\n *\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object.\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * Compute gradient.\n *\n * @param {object} greyscale The input greyscale.\n * @returns {object} A gradient object.\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors.\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * See: {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}.\n *\n * Highly inspired from: {@link http://code.google.com/p/livewire-javascript/}.\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  _costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this._costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  _centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  _radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this._centre = centre;\n    this._radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this._centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this._radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Circle_Equations}.\n   *\n   * Circle formula: `x*x + y*y = r*r`.\n   *\n   * Implies: `y = (+-) sqrt(r*r - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.radius = {\n      value: this.getRadius() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  _centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  _a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  _b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this._centre = centre;\n    this._a = a;\n    this._b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this._centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this._a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this._b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Ellipse_Standard_equation}.\n   *\n   * Ellipse formula: `x*x / a*a + y*y / b*b = 1`.\n   *\n   * Implies: `y = (+-)(b/a) * sqrt(a*a - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.a = {\n      value: this.getA() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    quant.b = {\n      value: this.getB() * spacing2D.y,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {number[]} radius The 2 ellipse radiuses.\n * @param {number[]} dir The 2 ellipse directions.\n * @returns {Index[]} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  _begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  _end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this._begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this._end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle.\n   */\n  getBegin() {\n    return this._begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle.\n   */\n  getEnd() {\n    return this._end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits as {min, max} (Point2D).\n   */\n  getRound() {\n    const roundBegin = new Point2D(\n      Math.round(this.getBegin().getX()),\n      Math.round(this.getBegin().getY())\n    );\n    const roundEnd = new Point2D(\n      Math.round(this.getEnd().getX()),\n      Math.round(this.getEnd().getY())\n    );\n    return {\n      min: roundBegin,\n      max: roundEnd\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.width = {\n      value: this.getWidth() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    quant.height = {\n      value: this.getHeight() * spacing2D.y,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const unit = viewController.getPixelUnit();\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: unit};\n      quant.max = {value: quantif.max, unit: unit};\n      quant.mean = {value: quantif.mean, unit: unit};\n      quant.stdDev = {value: quantif.stdDev, unit: unit};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: unit};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: unit};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: unit};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  _min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  _max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this._min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this._min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this._max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this._max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  _originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this._originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this._originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  _originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this._originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this._originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  _originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this._originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this._originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Filter list.\n   *\n   * @type {object}\n   */\n  _filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  _selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this._filterList) {\n      if (bool) {\n        this._filterList[key].addEventListener('filterrun', this._fireEvent);\n        this._filterList[key].addEventListener('filter-undo', this._fireEvent);\n      } else {\n        this._filterList[key].removeEventListener(\n          'filterrun', this._fireEvent);\n        this._filterList[key].removeEventListener(\n          'filter-undo', this._fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this._filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this._filterList[key] = new options[key](this._app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this._filterList) {\n      this._filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this._selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this._selectedFilter) {\n        this._selectedFilter.activate(false);\n      }\n      // enable new one\n      this._selectedFilter = this._filterList[features.filterName];\n      // activate the selected filter\n      this._selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this._filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this._filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  _filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  _resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this._resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run threshod filter on.');\n    }\n    this._filter.setMin(args.min);\n    this._filter.setMax(args.max);\n    // reset the image if asked\n    if (this._resetImage) {\n      this._filter.setOriginalImage(this._app.getImage(args.dataId));\n      this._resetImage = false;\n    }\n    const command = new RunFilterCommand(this._filter, args.dataId, this._app);\n    command.onExecute = this._fireEvent;\n    command.onUndo = this._fireEvent;\n    command.execute();\n    // save command in undo stack\n    this._app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sharpen filter on.');\n    }\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this._app.getImage(args.dataId));\n    const command = new RunFilterCommand(filter, args.dataId, this._app);\n    command.onExecute = this._fireEvent;\n    command.onUndo = this._fireEvent;\n    command.execute();\n    // save command in undo stack\n    this._app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sobel filter on.');\n    }\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this._app.getImage(args.dataId));\n    const command = new RunFilterCommand(filter, args.dataId, this._app);\n    command.onExecute = this._fireEvent;\n    command.onUndo = this._fireEvent;\n    command.execute();\n    // save command in undo stack\n    this._app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  _filter;\n\n  /**\n   * Data id.\n   *\n   * @type {string}\n   */\n  _dataId;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {string} dataId The data to filter.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, dataId, app) {\n    this._filter = filter;\n    this._dataId = dataId;\n    this._app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this._filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand_filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this._app.setImage(this._dataId, this._filter.update());\n    // update display\n    this._app.render(this._dataId);\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand_filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName(),\n      dataId: this._dataId\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand_filterundo\n   */\n  undo() {\n    // reset the image\n    this._app.setImage(this._dataId, this._filter.getOriginalImage());\n    // update display\n    this._app.render(this._dataId);\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand_filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName(),\n      dataid: this._dataId\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\n/**\n * List of client provided tools to be added to\n * the default ones.\n *\n * @type {Object<string, any>}\n */\nexport const toolList = {};\n\nexport const defaultToolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  validateWindowWidth,\n  WindowLevel as WindowLevelValues\n} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  _startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  _scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n    this._scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  _start(point) {\n    this._started = true;\n    this._startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    // check start flag\n    if (!this._started) {\n      return;\n    }\n\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = point.getX() - this._startPoint.getX();\n    const diffY = this._startPoint.getY() - point.getY();\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = viewController.getWindowLevel().center;\n    const width = viewController.getWindowLevel().width;\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    const wl = new WindowLevelValues(windowCenter, windowWidth);\n    viewController.setWindowLevel(wl);\n\n    // store position\n    this._startPoint = point;\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  _finish() {\n    if (this._started) {\n      this._started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this._start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this._start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(mousePoint);\n    const viewController = viewLayer.getViewController();\n    const image = this._app.getImage(viewLayer.getDataId());\n\n    // update view controller\n    const wl = new WindowLevelValues(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      viewController.getWindowLevel().width\n    );\n    viewController.setWindowLevel(wl);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this._scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new dwv.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  _startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  _scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  _touchTimerID;\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  _displayTooltip = false;\n\n  /**\n   * Current layer group div id.\n   *\n   * @type {string}\n   */\n  _currentDivId;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n    this._scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  _start(point, divId) {\n    // optional tooltip\n    this._removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n\n    // start flag\n    this._started = true;\n    this._startPoint = point;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    if (!this._started) {\n      // optional tooltip\n      if (this._displayTooltip) {\n        this._showTooltip(point, divId);\n      }\n      return;\n    }\n\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    let newPosition;\n\n    // difference to last Y position\n    const diffY = point.getY() - this._startPoint.getY();\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && layerGroup.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        newPosition = viewController.getDecrementScrollPosition();\n      } else {\n        newPosition = viewController.getIncrementScrollPosition();\n      }\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this._startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove && layerGroup.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n\n    // reset origin point\n    if (xMove || yMove) {\n      this._startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  _finish() {\n    if (this._started) {\n      this._started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this._finish();\n    // remove possible tooltip div\n    this._removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this._touchTimerID = setTimeout(() => {\n      this.dblclick(event);\n    }, 500);\n    // call start\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this._touchTimerID !== null) {\n      clearTimeout(this._touchTimerID);\n      this._touchTimerID = null;\n    }\n    // call update\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // abort timer\n    if (this._touchTimerID !== null) {\n      clearTimeout(this._touchTimerID);\n      this._touchTimerID = null;\n    }\n    // call mouse equivalent\n    this._finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this._scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Display a tooltip at the given point.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _showTooltip(point, divId) {\n    // get layer group\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    this._currentDivId = divId;\n    // show new tooltip\n    layerGroup.showTooltip(point);\n  }\n\n  /**\n   * Remove the last tooltip html div.\n   */\n  _removeTooltipDiv() {\n    if (typeof this._currentDivId !== 'undefined') {\n      const layerGroup = this._app.getLayerGroupByDivId(this._currentDivId);\n      layerGroup.removeTooltipDiv();\n      this._currentDivId = undefined;\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this._removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this._displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  _startPoint;\n\n  /**\n   * Move flag: true if mouse or touch move.\n   *\n   * @type {boolean}\n   */\n  _hasMoved;\n\n  /**\n   * Line between input points.\n   *\n   * @type {Line}\n   */\n  _pointsLine;\n\n  /**\n   * PointsLine midpoint.\n   *\n   * @type {Point2D}\n   */\n  _midPoint;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  _start(point) {\n    this._started = true;\n    this._startPoint = point;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Two touch start.\n   *\n   * @param {Point2D[]} points The start points.\n   */\n  _twoTouchStart = (points) => {\n    this._started = true;\n    this._startPoint = points[0];\n    this._hasMoved = false;\n    // points line\n    this._pointsLine = new Line(points[0], points[1]);\n    this._midPoint = this._pointsLine.getMidpoint();\n  };\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    if (!this._started) {\n      return;\n    }\n    this._hasMoved = true;\n\n    // calculate translation\n    const tx = point.getX() - this._startPoint.getX();\n    const ty = point.getY() - this._startPoint.getY();\n    // apply translation\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(\n      new Point2D(tx, ty)\n    );\n    const offset3D = viewController.getOffset3DFromPlaneOffset({\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    });\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this._startPoint = point;\n  }\n\n  /**\n   * Two touch update.\n   *\n   * @param {Point2D[]} points The update points.\n   * @param {string} divId The layer group divId.\n   */\n  _twoTouchUpdate = (points, divId) => {\n    if (!this._started) {\n      return;\n    }\n    this._hasMoved = true;\n\n    const newLine = new Line(points[0], points[1]);\n    const lineRatio = newLine.getLength() / this._pointsLine.getLength();\n\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = points[0].getY() - this._startPoint.getY();\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (layerGroup.canScroll()) {\n        let newPosition;\n        if (diffY > 0) {\n          newPosition = viewController.getIncrementScrollPosition();\n        } else {\n          newPosition = viewController.getDecrementScrollPosition();\n        }\n        // set all layers if at least one can be set\n        if (typeof newPosition !== 'undefined' &&\n          layerGroup.isPositionInBounds(newPosition)) {\n          viewController.setCurrentPosition(newPosition);\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05 &&\n        typeof this._midPoint !== 'undefined') {\n        const planePos = viewLayer.displayToMainPlanePos(this._midPoint);\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _setCurrentPosition(point, divId) {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  _finish() {\n    if (this._started) {\n      this._started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this._start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // update position if no move\n    if (!this._hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this._setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this._finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    if (touchPoints.length === 1) {\n      this._start(touchPoints[0]);\n    } else if (touchPoints.length === 2) {\n      this._twoTouchStart(touchPoints);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    if (touchPoints.length === 1) {\n      this._update(touchPoints[0], layerDetails.groupDivId);\n    } else if (touchPoints.length === 2) {\n      this._twoTouchUpdate(touchPoints, layerDetails.groupDivId);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // update position if no move\n    if (!this._hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this._setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this._finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    // prevent default page scroll\n    event.preventDefault();\n\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(mousePoint);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Opacity: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  _startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  _scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n    this._scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  _start(point) {\n    this._started = true;\n    this._startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    if (!this._started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this._startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerGroup = this._app.getLayerGroupByDivId(divId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this._startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  _finish() {\n    if (this._started) {\n      this._started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this._start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this._start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this._scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // Opacity class\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * Ref: {@link https://github.com/Tamersoul/magic-wand-js}.\n *\n * @external MagicWand\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  _blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  _simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  _simplifyCount = 2000;\n\n  /**\n   * Canvas info.\n   *\n   * @type {object}\n   */\n  _imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points.\n   *\n   * @type {object}\n   */\n  _mask = null;\n\n  /**\n   * Threshold default tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  _initialthreshold = 10;\n\n  /**\n   * Threshold tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  _currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  _command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  _shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  _initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  _border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  _parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  _extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  _painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  _style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set.\n   */\n  setExtend(bool) {\n    this._extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this._extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   * @returns {Scalar2D} The coordinates as a {x,y}.\n   */\n  _getIndex = (point, divId) => {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  _calcBorder(points, threshold, simple) {\n\n    this._parentPoints = [];\n    const image = {\n      data: this._imageInfo.data,\n      width: this._imageInfo.width,\n      height: this._imageInfo.height,\n      bytes: 4\n    };\n\n    this._mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this._mask = MagicWand.gaussBlurOnlyBorder(this._mask, this._blurRadius);\n\n    let cs = MagicWand.traceContours(this._mask);\n    cs = MagicWand.simplifyContours(\n      cs, this._simplifyTolerant, this._simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this._parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this._parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  _paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this._border = this._calcBorder(point, threshold, false);\n    // Paint the border\n    if (this._border) {\n      const factory = new RoiFactory();\n      this._shapeGroup = factory.create(this._border, this._style);\n      this._shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this._shapeGroup);\n\n      // draw shape command\n      this._command = new DrawGroupCommand(\n        this._shapeGroup,\n        'floodfill',\n        drawLayer\n      );\n      this._command.onExecute = this._fireEvent;\n      this._command.onUndo = this._fireEvent;\n      // // draw\n      this._command.execute();\n      // save it in undo stack\n      this._app.addToUndoStack(this._command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found.\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this._initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this._shapeGroup) {\n      this._shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this._currentthreshold || this._initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this._paintBorder(this._initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this._paintBorder(this._initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this._shapeGroup) {\n      shape = this._shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this._painterTimeout);\n    this._painterTimeout = setTimeout(() => {\n      this._border = this._calcBorder(\n        this._initialpoint, modifyThreshold, true);\n      if (!this._border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this._border.length; i < bl; ++i) {\n        arr.push(this._border[i].x);\n        arr.push(this._border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change.\n   *\n   * @param {number} _value Current threshold.\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  _start(point, divId) {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this._imageInfo = viewLayer.getImageData();\n    if (!this._imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this._style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this._started = true;\n    this._initialpoint = this._getIndex(point, divId);\n    this._paintBorder(this._initialpoint, this._initialthreshold, layerGroup);\n    this.onThresholdChange(this._initialthreshold);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    if (!this._started) {\n      return;\n    }\n\n    const movedpoint = this._getIndex(point, divId);\n    this._currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this._initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this._initialpoint.y - movedpoint.y), 2)) / 2);\n    this._currentthreshold = this._currentthreshold < this._initialthreshold\n      ? this._initialthreshold\n      : this._currentthreshold - this._initialthreshold;\n    this.modifyThreshold(this._currentthreshold);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  _finish() {\n    if (this._started) {\n      this._started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this._finish();\n    // TODO: re-activate\n    // if (this._extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this._app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this._finish();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this._style.setBaseScale(this._app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this._style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this._style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  _app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this._app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  _started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  _startPoint;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  _command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  _shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  _style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  _path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  _currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  _parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  _tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  _clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this._parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  _clearPaths() {\n    this._path = new Path();\n    this._currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  _scissors = new Scissors();\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  _start(point, divId) {\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // first time\n    if (!this._started) {\n      this._started = true;\n      this._startPoint = new Point2D(index.get(0), index.get(1));\n      // clear vars\n      this._clearPaths();\n      this._clearParentPoints(imageSize);\n      this._shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this._style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this._scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this._path.addPoint(p0);\n      this._path.addControlPoint(p0);\n    } else {\n      const diffX = Math.abs(index.get(0) - this._startPoint.getX());\n      const diffY = Math.abs(index.get(1) - this._startPoint.getY());\n      // final point: at 'tolerance' of the initial point\n      if (diffX < this._tolerance &&\n        diffY < this._tolerance) {\n        // finish\n        this._finishShape();\n      } else {\n        // anchor point\n        this._path = this._currentPath;\n        this._clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this._scissors.doTraining(pn);\n        this._path.addControlPoint(this._currentPath.getPoint(0));\n      }\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  _update(point, divId) {\n    if (!this._started) {\n      return;\n    }\n    const layerGroup = this._app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this._scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this._parentPoints[p.y][p.x] && !stop) {\n      results = this._scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this._parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this._currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this._currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this._parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this._parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this._parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this._currentPath.appenPath(this._path);\n\n    // remove previous draw\n    if (this._shapeGroup) {\n      this._shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this._shapeGroup = factory.create(\n      this._currentPath.pointArray, this._style);\n    this._shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this._shapeGroup);\n\n    // draw shape command\n    this._command = new DrawGroupCommand(\n      this._shapeGroup,\n      'livewire',\n      drawLayer\n    );\n    // draw\n    this._command.execute();\n  }\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  _finishShape() {\n    // fire creation event (was not propagated during draw)\n    this._fireEvent({\n      type: 'drawcreate',\n      id: this._shapeGroup.id()\n    });\n    // listen\n    this._command.onExecute = this._fireEvent;\n    this._command.onUndo = this._fireEvent;\n    // save command in undo stack\n    this._app.addToUndoStack(this._command);\n    // set flag\n    this._started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this._finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this._update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this._app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this._app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this._scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this._scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this._style.setBaseScale(this._app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this._style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this._style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const tickLen = style.applyZoomScale(10).x;\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = Math.abs(style.applyZoomScale(8).x);\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.arrow[modality] !== 'undefined') {\n      textExpr = defaults.labelText.arrow[modality];\n    } else {\n      textExpr = defaults.labelText.arrow['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n    if (!(ktriangle instanceof Konva.RegularPolygon)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const tickLen = style.applyZoomScale(10).x;\n    const linePerp0 = getPerpendicularLine(line, p2b, tickLen);\n    const linePerp1 = getPerpendicularLine(line, p2e, tickLen);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Calculates the mathematical circle.\n   *\n   * @param {Point2D[]} points The points that define the circle.\n   * @returns {Circle} The mathematical circle.\n   */\n  _calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    return new Circle(points[0], radius);\n  }\n\n  /**\n   * Creates the konva circle shape.\n   *\n   * @param {Circle} circle The mathematical circle.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Circle} The konva circle shape.\n   */\n  _createShape(circle, style) {\n    return new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Creates the konva label.\n   *\n   * @param {Circle} circle The mathematical circle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Label} The Konva label.\n   */\n  _createLabel(circle, style, viewController) {\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.circle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.circle[modality];\n    } else {\n      textExpr = defaults.labelText.circle['*'];\n    }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta data\n    // @ts-expect-error\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX() - circle.getRadius(),\n      y: circle.getCenter().getY() + circle.getRadius(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    return klabel;\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the circle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // Create group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n\n    // Create and add shape\n    const mathShape = this._calculateMathShape(points);\n    const kShape = this._createShape(mathShape, style);\n    group.add(kShape);\n    // Create and add label\n    const kLabel = this._createLabel(mathShape, style, viewController);\n    group.add(kLabel);\n    // Add shadow (if debug)\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this._getShadowCircle(mathShape);\n      group.add(kshadow);\n    }\n\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // update self (while blocking y)\n      left.x(anchor.x());\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y + radius);\n      top.y(center.y - radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // update self (while blocking y)\n      right.x(anchor.x());\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y + radius);\n      top.y(center.y - radius);\n      break;\n    case 'bottom':\n      radius = anchor.y() - center.y;\n      // update self (while blocking x)\n      bottom.x(top.x());\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y - radius);\n      break;\n    case 'top':\n      radius = center.y - anchor.y();\n      // update self (while blocking x)\n      top.x(bottom.x());\n      top.y(anchor.y());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y + radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this._getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {\n      x: center.x - Math.abs(radius),\n      y: center.y + Math.abs(radius)\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this._updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this._updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  _updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  _getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the ellipse.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ellipse[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ellipse[modality];\n    } else {\n      textExpr = defaults.labelText.ellipse['*'];\n    }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX() - ellipse.getA(),\n      y: ellipse.getCenter().getY() + ellipse.getB(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this._getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX, ellipseY + radius.y, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX, ellipseY - radius.y, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // ellipse center\n    const center = {\n      x: kellipse.x(),\n      y: kellipse.y()\n    };\n\n    let radiusX;\n    let radiusY;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radiusX = center.x - anchor.x();\n      radiusY = top.y() - center.y;\n      // update self (while blocking y)\n      left.x(anchor.x());\n      left.y(right.y());\n      // update others\n      right.x(center.x + radiusX);\n      break;\n    case 'right':\n      radiusX = anchor.x() - center.x;\n      radiusY = top.y() - center.y;\n      // update self (while blocking y)\n      right.x(anchor.x());\n      right.y(left.y());\n      // update others\n      left.x(center.x - radiusX);\n      break;\n    case 'bottom':\n      radiusX = center.x - left.x();\n      radiusY = anchor.y() - center.y;\n      // update self (while blocking x)\n      bottom.x(top.x());\n      bottom.y(anchor.y());\n      // update others\n      top.y(center.y - radiusY);\n      break;\n    case 'top':\n      radiusX = center.x - left.x();\n      radiusY = center.y - anchor.y();\n      // update self (while blocking x)\n      top.x(bottom.x());\n      top.y(anchor.y());\n      // update others\n      bottom.y(center.y + radiusY);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    kellipse.position(center);\n    const radiusAbs = {\n      x: Math.abs(radiusX),\n      y: Math.abs(radiusY)\n    };\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this._getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {\n      x: center.x - radiusAbs.x,\n      y: center.y + radiusAbs.y\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this._updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this._updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  _updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  _getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.freeHand[modality] !== 'undefined') {\n      textExpr = defaults.labelText.freeHand[modality];\n    } else {\n      textExpr = defaults.labelText.freeHand['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kline.x();\n    points[index + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the protractor.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.protractor[modality] !== 'undefined') {\n        textExpr = defaults.labelText.protractor[modality];\n      } else {\n        textExpr = defaults.labelText.protractor['*'];\n      }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n.t('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // augment text with meta\n      // @ts-ignore\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n    if (!(karc instanceof Konva.Arc)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = {\n      angle: {value: angle, unit: i18n.t('unit.degree')}\n    };\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the rectangle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.rectangle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.rectangle[modality];\n    } else {\n      textExpr = defaults.labelText.rectangle['*'];\n    }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this._getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {Konva.Shape} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this._updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this._updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  _updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Rectangle} rectangle The rectangle to shadow.\n   * @returns {Konva.Rect} The shadow konva shape.\n   */\n  _getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.applyZoomScale(10).x;\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ruler[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ruler[modality];\n    } else {\n      textExpr = defaults.labelText.ruler['*'];\n    }\n    const quant = line.quantify(viewController);\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * style.applyZoomScale(ktext.width()).x,\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n    if (!(ktick0 instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n    if (!(ktick1 instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const tickLen = style.applyZoomScale(10).x;\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, tickLen);\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, tickLen);\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = line.quantify(viewController);\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * style.applyZoomScale(ktext.width()).x,\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {\n  getMatrixFromName,\n  getOrientationStringLPS,\n  Orientation\n} from '../math/orientation';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {\n  getViewOrientation,\n  getLayerDetailsFromLayerDivId\n} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {toolList, defaultToolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\nimport {WindowLevel} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Image} from '../image/image';\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from '../dicom/dataElement';\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View configuration: mainly defines the ´divId´\n * of the associated HTML div.\n */\nexport class ViewConfig {\n  /**\n   * Associated HTML div id.\n   *\n   * @type {string}\n   */\n  divId;\n  /**\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\n   * If undefined, will use the data aquisition plane.\n   *\n   * @type {string|undefined}\n   */\n  orientation;\n  /**\n   * Optional view colour map name.\n   *\n   * @type {string|undefined}\n   */\n  colourMap;\n  /**\n   * Optional layer opacity; in [0, 1] range.\n   *\n   * @type {number|undefined}\n   */\n  opacity;\n  /**\n   * Optional layer window level preset name.\n   * If present, the preset name will be used and\n   * the window centre and width ignored.\n   *\n   * @type {string|undefined}\n   */\n  wlPresetName;\n  /**\n   * Optional layer window center.\n   *\n   * @type {number|undefined}\n   */\n  windowCenter;\n  /**\n   * Optional layer window width.\n   *\n   * @type {number|undefined}\n   */\n  windowWidth;\n\n  /**\n   * @param {string} divId The associated HTML div id.\n   */\n  constructor(divId) {\n    this.divId = divId;\n  }\n}\n\n/**\n * Tool configuration.\n */\nexport class ToolConfig {\n  /**\n   * Optional tool options.\n   * For Draw: list of shape names.\n   * For Filter: list of filter names.\n   *\n   * @type {string[]|undefined}\n   */\n  options;\n\n  /**\n   * @param {string[]} [options] Optional tool options.\n   */\n  constructor(options) {\n    this.options = options;\n  }\n}\n\n/**\n * Application options.\n */\nexport class AppOptions {\n  /**\n   * DataId indexed object containing the data view configurations.\n   *\n   * @type {Object<string, ViewConfig[]>|undefined}\n   */\n  dataViewConfigs;\n  /**\n   * Tool name indexed object containing individual tool configurations.\n   *\n   * @type {Object<string, ToolConfig>|undefined}\n   */\n  tools;\n  /**\n   * Optional array of layerGroup binder names.\n   *\n   * @type {string[]|undefined}\n   */\n  binders;\n  /**\n   * Optional boolean flag to trigger the first data render\n   *   after the first loaded data or not. Defaults to true.\n   *\n   * @type {boolean|undefined}\n   */\n  viewOnFirstLoadItem;\n  /**\n   * Optional default chraracterset string used for DICOM parsing if\n   *   not passed in DICOM file.\n   *\n   * Valid values: {@link https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings}.\n   *\n   * @type {string|undefined}\n   */\n  defaultCharacterSet;\n  /**\n   * Optional overlay config.\n   *\n   * @type {object|undefined}\n   */\n  overlayConfig;\n  /**\n   * DOM root document.\n   *\n   * @type {DocumentFragment}\n   */\n  rootDocument;\n\n  /**\n   * @param {Object<string, ViewConfig[]>} [dataViewConfigs] Optional dataId\n   *   indexed object containing the data view configurations.\n   */\n  constructor(dataViewConfigs) {\n    this.dataViewConfigs = dataViewConfigs;\n  }\n}\n\n/**\n * List of ViewConfigs indexed by dataIds.\n *\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\n */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * app.init(options);\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  /**\n   * App options.\n   *\n   * @type {AppOptions}\n   */\n  _options = null;\n\n  /**\n   * Data controller.\n   *\n   * @type {DataController}\n   */\n  _dataController = null;\n\n  /**\n   * Toolbox controller.\n   *\n   * @type {ToolboxController}\n   */\n  _toolboxController = null;\n\n  /**\n   * Load controller.\n   *\n   * @type {LoadController}\n   */\n  _loadController = null;\n\n  /**\n   * Stage.\n   *\n   * @type {Stage}\n   */\n  _stage = null;\n\n  /**\n   * Undo stack.\n   *\n   * @type {UndoStack}\n   */\n  _undoStack = null;\n\n  /**\n   * Style.\n   *\n   * @type {Style}\n   */\n  _style = new Style();\n\n  // overlay datas\n  _overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  _listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Image|undefined} The associated image.\n   */\n  getImage(dataId) {\n    let res;\n    if (typeof this._dataController.get(dataId) !== 'undefined') {\n      res = this._dataController.get(dataId).image;\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at the given id.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} img The associated image.\n   */\n  setImage(dataId, img) {\n    this._dataController.setImage(dataId, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @param {string} source The source of the new image,\n   *   will be passed with load events.\n   * @returns {string} The new image data id.\n   */\n  addNewImage(image, meta, source) {\n    const dataId = this._dataController.getNextDataId();\n\n    // load start event\n    this._fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n\n    // add image to data controller\n    this._dataController.addNew(dataId, image, meta);\n\n    // load item event\n    this._fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: source,\n      dataid: dataId,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this._options.viewOnFirstLoadItem) {\n      this.render(dataId);\n    }\n\n    // load events\n    this._fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n    this._fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n\n    return dataId;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Object<string, DataElement>|undefined} The list of meta data.\n   */\n  getMetaData(dataId) {\n    let res;\n    if (typeof this._dataController.get(dataId) !== 'undefined') {\n      res = this._dataController.get(dataId).meta;\n    }\n    return res;\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return this._dataController.getDataIds();\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    return this._dataController.getDataIdsFromSopUids(uids);\n  }\n\n  /**\n   * Can the data (of the active view of the active layer) be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canScroll() {\n    const viewLayer = this._stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data\n   * (of the active view of the active layer)?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canWindowLevel() {\n    const viewLayer = this._stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the active layer group scale on top of the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return this._stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale of the active layer group.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this._stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset of the active layer group.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this._stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {ToolboxController} The controller.\n   */\n  getToolboxController() {\n    return this._toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this._stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    this._stage.setActiveLayerGroup(index);\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    return this._stage.getViewLayersByDataId(dataId);\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    return this._stage.getDrawLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this._stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this._stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this._style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack_undoadd\n   * @function\n   */\n  addToUndoStack = (cmd) => {\n    if (this._undoStack !== null) {\n      this._undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {AppOptions} opt The application options.\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n   * const viewConfigs = {'*': [viewConfig0]};\n   * const options = new dwv.AppOptions(viewConfigs);\n   * options.viewOnFirstLoadItem = false;\n   * app.init(options);\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data _0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this._options = opt;\n    // defaults\n    if (typeof this._options.viewOnFirstLoadItem === 'undefined') {\n      this._options.viewOnFirstLoadItem = true;\n    }\n    if (typeof this._options.dataViewConfigs === 'undefined') {\n      this._options.dataViewConfigs = {};\n    }\n    if (typeof this._options.rootDocument === 'undefined') {\n      this._options.rootDocument = document;\n    }\n\n    // undo stack\n    this._undoStack = new UndoStack();\n    this._undoStack.addEventListener('undoadd', this._fireEvent);\n    this._undoStack.addEventListener('undo', this._fireEvent);\n    this._undoStack.addEventListener('redo', this._fireEvent);\n\n    // tools\n    if (typeof this._options.tools !== 'undefined') {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this._options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the default tool list\n        let toolConstructor = defaultToolList[toolName];\n        // or use external one\n        if (typeof toolConstructor === 'undefined') {\n          toolConstructor = toolList[toolName];\n        }\n        if (typeof toolConstructor !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolConstructor(this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this._fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this._options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined' &&\n            toolParams.options.length !== 0) {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            } else {\n              appToolOptions = toolParams.options;\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this._toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this._loadController =\n      new LoadController(this._options.defaultCharacterSet);\n    this._loadController.onloadstart = this._onloadstart;\n    this._loadController.onprogress = this._onloadprogress;\n    this._loadController.onloaditem = this._onloaditem;\n    this._loadController.onload = this._onload;\n    this._loadController.onloadend = this._onloadend;\n    this._loadController.onerror = this._onloaderror;\n    this._loadController.onabort = this._onloadabort;\n\n    // create data controller\n    this._dataController = new DataController();\n    // create stage\n    this._stage = new Stage();\n    if (typeof this._options.binders !== 'undefined') {\n      this._stage.setBinders(this._options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this._dataController.reset();\n    this._stage.empty();\n    this._overlayDatas = {};\n    // reset undo/redo\n    if (this._undoStack) {\n      this._undoStack = new UndoStack();\n      this._undoStack.addEventListener('undoadd', this._fireEvent);\n      this._undoStack.addEventListener('undo', this._fireEvent);\n      this._undoStack.addEventListener('redo', this._fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this._stage.reset();\n    this._stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this._listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this._listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @fires App_loadstart\n   * @fires App_loadprogress\n   * @fires App_loaditem\n   * @fires App_loadend\n   * @fires App_error\n   * @fires App_abort\n   * @function\n   */\n  loadFiles = (files) => {\n    // Get new data id\n    const dataId = this._dataController.getNextDataId();\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this._loadController.loadFiles(files, dataId);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass to the request,\n   * - batchSize: the size of the request url batch.\n   * @fires App_loadstart\n   * @fires App_loadprogress\n   * @fires App_loaditem\n   * @fires App_loadend\n   * @fires App_error\n   * @fires App_abort\n   * @function\n   */\n  loadURLs = (urls, options) => {\n    // Get new data id\n    const dataId = this._dataController.getNextDataId();\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this._loadController.loadURLs(urls, dataId, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   * @function\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App_loadstart\n   * @fires App_loadprogress\n   * @fires App_loaditem\n   * @fires App_loadend\n   * @fires App_error\n   * @fires App_abort\n   * @function\n   */\n  loadImageObject = (data) => {\n    // Get new data id\n    const dataId = this._dataController.getNextDataId();\n    this._loadController.loadImageObject(data, dataId);\n  };\n\n  /**\n   * Abort all the current loads.\n   */\n  abortAllLoads() {\n    const ids = this._loadController.getLoadingDataIds();\n    for (const id of ids) {\n      this.abortLoad(id);\n    }\n  }\n\n  /**\n   * Abort an individual data load.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abortLoad(dataId) {\n    // abort load\n    this._loadController.abort(dataId);\n    // remove data\n    this._dataController.remove(dataId);\n    // clean up stage\n    this._stage.removeLayersByDataId(dataId);\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this._stage.fitToContainer();\n  }\n\n  /**\n   * Init the Window/Level display\n   * (of the active layer of the active layer group).\n   *\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  initWLDisplay() {\n    const viewLayer = this._stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Set the imageSmoothing flag value. Default is false.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this._stage.setImageSmoothing(flag);\n    this._stage.draw();\n  }\n\n  /**\n   * Get the layer group configuration from a data id.\n   *\n   * @param {string} dataId The data id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig[]} The list of associated configs.\n   */\n  getViewConfigs(dataId, excludeStarConfig) {\n    // check options\n    if (this._options.dataViewConfigs === null ||\n      typeof this._options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this._options.dataViewConfigs[dataId] !== 'undefined') {\n      configs = this._options.dataViewConfigs[dataId];\n    } else if (!excludeStarConfig &&\n      typeof this._options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this._options.dataViewConfigs['*'];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the layer group configuration for a data id and group\n   * div id.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} groupDivId The layer group div id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig|undefined} The associated config.\n   */\n  getViewConfig(dataId, groupDivId, excludeStarConfig) {\n    const configs = this.getViewConfigs(dataId, excludeStarConfig);\n    return configs.find(function (item) {\n      return item.divId === groupDivId;\n    });\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\n   */\n  getDataViewConfigs() {\n    return this._options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration.\n   * Resets the stage and recreates all the views.\n   *\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\n   */\n  setDataViewConfigs(configs) {\n    // clean up\n    this._stage.empty();\n    // set new\n    this._options.dataViewConfigs = configs;\n    // create layer groups\n    this._createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this._options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this._options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view config for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // add layer group if not done\n    if (typeof this._stage.getLayerGroupByDivId(config.divId) === 'undefined') {\n      this._createLayerGroup(config);\n    }\n\n    // render (will create layers)\n    if (typeof this._dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [config]);\n    }\n  }\n\n  /**\n   * Remove a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   */\n  removeDataViewConfig(dataId, divId) {\n    // remove from list\n    const configs = this._options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n    configs[dataId].splice(itemIndex, 1);\n    if (configs[dataId].length === 0) {\n      delete configs[dataId];\n    }\n\n    // data is loaded, remove view\n    if (typeof this._dataController.get(dataId) !== 'undefined') {\n      const lg = this._stage.getLayerGroupByDivId(divId);\n      if (typeof lg !== 'undefined') {\n        const vls = lg.getViewLayersByDataId(dataId);\n        if (vls.length === 1) {\n          lg.removeLayer(vls[0]);\n        } else {\n          throw new Error('Expected one view layer, got ' + vls.length);\n        }\n        const dls = lg.getDrawLayersByDataId(dataId);\n        if (dls.length === 1) {\n          lg.removeLayer(dls[0]);\n        } else {\n          throw new Error('Expected one draw layer, got ' + dls.length);\n        }\n        if (lg.getNumberOfLayers() === 0) {\n          this._stage.removeLayerGroup(lg);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update an existing data view config.\n   * Removes and re-creates the layer if found.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  updateDataViewConfig(dataId, divId, config) {\n    const configs = this._options.dataViewConfigs;\n    // check data id\n    if (typeof configs[dataId] === 'undefined') {\n      throw new Error('No config for dataId: ' + dataId);\n    }\n    // check div id\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      throw new Error('No config for dataId: ' +\n        dataId + ' and divId: ' + divId);\n    }\n    // update config\n    const configToUpdate = configs[dataId][itemIndex];\n    for (const prop in config) {\n      configToUpdate[prop] = config[prop];\n    }\n\n    // remove previous layers\n    const lg = this._stage.getLayerGroupByDivId(configToUpdate.divId);\n    if (typeof lg !== 'undefined') {\n      const vls = lg.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        lg.removeLayer(vls[0]);\n      } else {\n        throw new Error('Expected one view layer, got ' + vls.length);\n      }\n      const dls = lg.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        lg.removeLayer(dls[0]);\n      } else {\n        throw new Error('Expected one draw layer, got ' + dls.length);\n      }\n    }\n\n    // render (will create layer)\n    if (typeof this._dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [configToUpdate]);\n    }\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\n   */\n  _createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < viewConfigs.length; ++j) {\n        const viewConfig = viewConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this._createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {ViewConfig} viewConfig The view config.\n   */\n  _createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = this._options.rootDocument.getElementById(viewConfig.divId);\n    const layerGroup = this._stage.addLayerGroup(element);\n    // bind events\n    this._bindLayerGroupToApp(layerGroup);\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {string[]} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this._stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {string} dataId The data id to render.\n   * @param {ViewConfig[]} [viewConfigs] The list of configs to render.\n   */\n  render(dataId, viewConfigs) {\n    if (typeof dataId === 'undefined' || dataId === null) {\n      throw new Error('Cannot render without data id');\n    }\n    if (typeof this.getImage(dataId) === 'undefined') {\n      logger.warn('Not rendering non image data, id: ' + dataId);\n      return;\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this._stage.getNumberOfLayerGroups() === 0) {\n      this._createLayerGroups(this._options.dataViewConfigs);\n    }\n\n    // use options list if non provided\n    if (typeof viewConfigs === 'undefined') {\n      viewConfigs = this.getViewConfigs(dataId);\n    }\n\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataId +\n        ' (no data view config)');\n      return;\n    }\n\n    // loop on configs\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this._stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // add view\n      // warn: needs a loaded DOM\n      if (typeof this._dataController.get(dataId) !== 'undefined' &&\n        layerGroup.getViewLayersByDataId(dataId).length === 0) {\n        this._addViewLayer(dataId, config);\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom the layers of the active layer group.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this._stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers of the active layer group.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this._stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty, z: 0});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the active view layer (of the active layer group) opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  setOpacity(alpha) {\n    const viewLayer = this._stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings of the active layer group.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this._stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this._fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {string} The state of the app as a JSON string.\n   */\n  getJsonState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @param {string} jsonState The state of the app as a JSON string.\n   */\n  applyJsonState(jsonState) {\n    const state = new State();\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @function\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App_keydown\n   * @function\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App_keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this._fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo,\n   * - CRTL-Y: redo,\n   * - CRTL-ARROW_LEFT: next element on fourth dim,\n   * - CRTL-ARROW_UP: next element on third dim,\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim,\n   * - CRTL-ARROW_DOWN: previous element on third dim.\n   *\n   * Applies to the active view of the active layer group.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack_undo\n   * @fires UndoStack_redo\n   * @function\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const layerGroup = this._stage.getActiveLayerGroup();\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (viewController.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (layerGroup.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (layerGroup.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (layerGroup.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this._undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this._undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this._stage.getNumberOfLayerGroups(); ++i) {\n          this._stage.getLayerGroup(i).setShowCrosshair(\n            !this._stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display.\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map of the active view of the active layer group.\n   *\n   * @param {string} name The colour map name.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setColourMap(name) {\n    const viewController =\n      this._stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMap(name);\n  }\n\n  /**\n   * Set the window/level preset of the active view of the active layer group.\n   *\n   * @param {string} preset The window/level preset.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this._stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool.\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this._stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this._stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this._toolboxController.bindLayerGroup(layerGroup, layer);\n      }\n    }\n\n    // set toolbox tool\n    this._toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this._toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action.\n   *\n   * @fires UndoStack_undo\n   */\n  undo() {\n    this._undoStack.undo();\n  }\n\n  /**\n   * Redo the last action.\n   *\n   * @fires UndoStack_redo\n   */\n  redo() {\n    this._undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this._undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this._undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {OverlayData|undefined} The overlay data.\n   */\n  getOverlayData(dataId) {\n    let data;\n    if (typeof this._overlayDatas !== 'undefined') {\n      data = this._overlayDatas[dataId];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {string} dataId The data id.\n   */\n  toggleOverlayListeners(dataId) {\n    const data = this.getOverlayData(dataId);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  _fireEvent = (event) => {\n    this._listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  _onloadstart = (event) => {\n    // create overlay data\n    if (typeof this._options.overlayConfig !== 'undefined') {\n      this._overlayDatas[event.dataid] = new OverlayData(\n        this, event.dataid, this._options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App_loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this._fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  _onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App_loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this._fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  _onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this._dataController.addNew(\n          event.dataid, event.data.image, event.data.info);\n      } else {\n        this._dataController.update(\n          event.dataid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data);\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App_loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this._fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      dataid: event.dataid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // update overlay data if present\n    if (typeof this._overlayDatas !== 'undefined' &&\n      typeof this._overlayDatas[event.dataid] !== 'undefined') {\n      this._overlayDatas[event.dataid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n      this.getViewConfigs(event.dataid).length !== 0 &&\n      isFirstLoadItem && this._options.viewOnFirstLoadItem) {\n      this.render(event.dataid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  _onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App_load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this._fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  _onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App_loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this._fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  _onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App_error\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'error';\n    }\n    this._fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  _onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App_abort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'abort';\n    }\n    this._fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  _bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this._fireEvent);\n    group.addEventListener('offsetchange', this._fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this._fireEvent);\n    group.addEventListener('renderend', this._fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this._fireEvent);\n    }\n    // propagate drawLayer events\n    if (this._toolboxController && this._toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this._fireEvent);\n      group.addEventListener('drawdelete', this._fireEvent);\n    }\n    // updata data view config\n    group.addEventListener('wlchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        // reset previous values\n        config.windowCenter = undefined;\n        config.windowWidth = undefined;\n        config.wlPresetName = undefined;\n        // window width and center\n        if (event.value.length === 2) {\n          config.windowCenter = event.value[0];\n          config.windowWidth = event.value[1];\n        }\n        // window level preset name\n        if (event.value.length === 3) {\n          config.wlPresetName = event.value[2];\n        }\n      }\n    });\n    group.addEventListener('opacitychange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.opacity = event.value[0];\n      }\n    });\n    group.addEventListener('colourmapchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.colourMap = event.value[0];\n      }\n    });\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  _addViewLayer(dataId, viewConfig) {\n    const data = this._dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const layerGroup = this._stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this._stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    if (typeof viewConfig.opacity !== 'undefined') {\n      opacity = viewConfig.opacity;\n    } else {\n      if (!isBaseLayer) {\n        opacity = 0.5;\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataId);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n\n    // view controller\n    const viewController = viewLayer.getViewController();\n    // window/level\n    if (typeof viewConfig.wlPresetName !== 'undefined') {\n      viewController.setWindowLevelPreset(viewConfig.wlPresetName);\n    } else if (typeof viewConfig.windowCenter !== 'undefined' &&\n      typeof viewConfig.windowWidth !== 'undefined') {\n      const wl = new WindowLevel(\n        viewConfig.windowCenter, viewConfig.windowWidth);\n      viewController.setWindowLevel(wl);\n    }\n    // colour map\n    if (typeof viewConfig.colourMap !== 'undefined') {\n      viewController.setColourMap(viewConfig.colourMap);\n    } else {\n      if (!isBaseLayer) {\n        if (data.image.getMeta().Modality === 'PT') {\n          viewController.setColourMap('hot');\n        } else {\n          viewController.setColourMap('rainbow');\n        }\n      }\n    }\n\n    // listen to image set\n    this._dataController.addEventListener('imageset', viewLayer.onimageset);\n\n    // optional draw layer\n    let drawLayer;\n    if (this._toolboxController && this._toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataId);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this._stage.fitToContainer();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this._getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    if (flipFlags.offset.x) {\n      viewLayer.addFlipOffsetX();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetX();\n      }\n    }\n    if (flipFlags.offset.y) {\n      viewLayer.addFlipOffsetY();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetY();\n      }\n    }\n    if (flipFlags.scale.x) {\n      viewLayer.flipScaleX();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleX();\n      }\n    }\n    if (flipFlags.scale.y) {\n      viewLayer.flipScaleY();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleY();\n      }\n    }\n    if (flipFlags.scale.z) {\n      viewLayer.flipScaleZ();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleZ();\n      }\n    }\n\n    // layer scale (done after possible flip)\n    if (!isBaseLayer) {\n      // use zoom offset of base layer\n      const baseViewLayer = layerGroup.getBaseViewLayer();\n      viewLayer.initScale(\n        layerGroup.getScale(),\n        baseViewLayer.getAbsoluteZoomOffset()\n      );\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n    }\n    if (typeof drawLayer !== 'undefined') {\n      drawLayer.setScale(layerGroup.getScale());\n    }\n\n    // bind\n    this._stage.bindLayerGroups();\n    if (this._toolboxController) {\n      this._toolboxController.bindLayerGroup(layerGroup, viewLayer);\n    }\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this._toolboxController) {\n        this._toolboxController.init();\n      }\n    }\n  }\n\n  /**\n   * Get the view flip flags: offset (x, y) and scale (x, y, z) flags.\n   *\n   * @param {Matrix33} imageOrientation The image orientation.\n   * @param {string} viewConfigOrientation The view config orientation.\n   * @returns {object} Offset and scale flip flags.\n   */\n  _getViewFlipFlags(imageOrientation, viewConfigOrientation) {\n    // 'simple' orientation code (does not take into account angles)\n    const orientationCode =\n      getOrientationStringLPS(imageOrientation.asOneAndZeros());\n    if (typeof orientationCode === 'undefined') {\n      throw new Error('Unsupported undefined orientation code');\n    }\n\n    // view orientation flags\n    const isViewUndefined = typeof viewConfigOrientation === 'undefined';\n    const isViewAxial = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Axial;\n    const isViewCoronal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Coronal;\n    const isViewSagittal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Sagittal;\n\n    // default flags\n    const flipOffset = {\n      x: false,\n      y: false\n    };\n    const flipScale = {\n      x: false,\n      y: false,\n      z: false\n    };\n\n    if (orientationCode === 'LPS') {\n      // axial\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'LAI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'RPI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.x = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RAS') {\n      // axial\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'LSA') {\n      // coronal\n      flipOffset.y = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.y = true;\n        flipScale.z = true;\n      }\n    // } else if (orientationCode === 'LIP') { // nothing to do\n    } else if (orientationCode === 'RSP') {\n      // coronal\n      if (isViewUndefined || isViewCoronal) {\n        flipOffset.x = true;\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.x = true;\n        flipScale.x = true;\n      } else if (isViewSagittal) {\n        flipOffset.y = true;\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RIA') {\n      // coronal\n      flipOffset.x = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.x = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipScale.y = true;\n      }\n    } else if (orientationCode === 'PSL') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'PIR') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewAxial || isViewCoronal) {\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'ASR') {\n      // sagittal\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipScale.z = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'AIL') {\n      // sagittal\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else {\n      logger.warn('Unsupported orientation code: ' +\n        orientationCode + ', display could be incorrect');\n    }\n\n    return {\n      scale: flipScale,\n      offset: flipOffset\n    };\n  }\n\n} // class App\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper: helps handling the segments list,\n *   but does *NOT* update the associated mask (use special commands\n *   for that such as DeleteSegmentCommand, ChangeSegmentColourCommand...).\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  _mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {MaskSegment[]}\n   */\n  _segments;\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this._mask = mask;\n    // check segments in meta\n    const meta = mask.getMeta();\n    if (typeof meta.custom === 'undefined') {\n      meta.custom = {};\n    }\n    if (typeof meta.custom.segments === 'undefined') {\n      meta.custom.segments = [];\n    }\n    this._segments = meta.custom.segments;\n  }\n\n  /**\n   * Find the index of a segment in the segments list.\n   *\n   * @param {number} segmentNumber The number to find.\n   * @returns {number} The index in the segments list, -1 if not found.\n   */\n  _findSegmentIndex(segmentNumber) {\n    return this._segments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is part of the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return this._findSegmentIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {number[]} numbers Array of segment numbers.\n   * @returns {boolean[]} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        if (typeof segment.displayValue !== 'undefined') {\n          values.push(segment.displayValue);\n        } else {\n          values.push(segment.displayRGBValue);\n        }\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this._mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {MaskSegment|undefined} The segment or undefined if not found.\n   */\n  getSegment(segmentNumber) {\n    let segment;\n    const index = this._findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      segment = this._segments[index];\n    }\n    return segment;\n  }\n\n  /**\n   * Add a segment to the segments list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addSegment(segment) {\n    const index = this._findSegmentIndex(segment.number);\n    if (index === -1) {\n      this._segments.push(segment);\n    } else {\n      logger.warn(\n        'Not adding segment, it is allready in the segments list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeSegment(segmentNumber) {\n    const index = this._findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      this._segments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the segments list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * Update a segment of the segments list.\n   *\n   * @param {MaskSegment} segment The segment to update.\n   */\n  updateSegment(segment) {\n    const index = this._findSegmentIndex(segment.number);\n    if (index !== -1) {\n      this._segments[index] = segment;\n    } else {\n      logger.warn(\n        'Cannot update segment, it is not in the segments list: ' +\n          segment.number);\n    }\n  }\n\n} // class MaskSegmentHelper\n","import {MaskSegmentHelper} from './maskSegmentHelper';\nimport {BLACK} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  _mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {MaskSegment}\n   */\n  _segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  _isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  _offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this._mask = mask;\n    this._segment = segment;\n\n    this._isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this._offsets = mask.getOffsets(segment.displayRGBValue);\n    } else {\n      this._offsets = mask.getOffsets(segment.displayValue);\n    }\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this._offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand_masksegmentdelete\n   */\n  execute() {\n    // remove from image\n    if (typeof this._segment.displayRGBValue !== 'undefined') {\n      this._mask.setAtOffsets(this._offsets, BLACK);\n    } else {\n      this._mask.setAtOffsets(this._offsets, 0);\n    }\n    // remove from segments\n    const segHelper = new MaskSegmentHelper(this._mask);\n    segHelper.removeSegment(this._segment.number);\n\n    // callback\n    if (!this._isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand_masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this._segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand_masksegmentredraw\n   */\n  undo() {\n    // re-draw in image\n    if (typeof this._segment.displayRGBValue !== 'undefined') {\n      this._mask.setAtOffsets(this._offsets, this._segment.displayRGBValue);\n    } else {\n      this._mask.setAtOffsets(this._offsets, this._segment.displayValue);\n    }\n    // add back to segments\n    const segHelper = new MaskSegmentHelper(this._mask);\n    segHelper.addSegment(this._segment);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand_masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this._segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Change segment colour command.\n */\nexport class ChangeSegmentColourCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  _mask;\n\n  /**\n   * The segment to modify.\n   *\n   * @type {MaskSegment}\n   */\n  _segment;\n\n  /**\n   * The new segment colour.\n   *\n   * @type {RGB|number}\n   */\n  _newColour;\n\n  /**\n   * The previous segment colour.\n   *\n   * @type {RGB|number}\n   */\n  _previousColour;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  _isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  _offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to modify.\n   * @param {RGB|number} newColour The new segment colour.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, newColour, silent) {\n    this._mask = mask;\n    this._segment = segment;\n    this._newColour = newColour;\n\n    this._isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this._previousColour = segment.displayRGBValue;\n    } else {\n      this._previousColour = segment.displayValue;\n    }\n    this._offsets = mask.getOffsets(this._previousColour);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-segment-colour';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this._offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeSegmentColourCommand_changemasksegmentcolour\n   */\n  execute() {\n    // remove\n    this._mask.setAtOffsets(this._offsets, this._newColour);\n    // update segment property\n    if (typeof this._newColour === 'number') {\n      this._segment.displayValue = this._newColour;\n    } else {\n      this._segment.displayRGBValue = this._newColour;\n    }\n\n    // callback\n    if (!this._isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event ChangeSegmentColourCommand_changemasksegmentcolour\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'changemasksegmentcolour',\n        segmentnumber: this._segment.number,\n        value: [this._newColour]\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeSegmentColourCommand_changemasksegmentcolour\n   */\n  undo() {\n    // re-draw\n    this._mask.setAtOffsets(this._offsets, this._previousColour);\n    // update segment property\n    if (typeof this._previousColour === 'number') {\n      this._segment.displayValue = this._previousColour;\n    } else {\n      this._segment.displayRGBValue = this._previousColour;\n    }\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event ChangeSegmentColourCommand_changemasksegmentcolour\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'changemasksegmentcolour',\n      segmentnumber: this._segment.number,\n      value: [this._previousColour]\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeSegmentColourCommand class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment view helper: handles hidden segments.\n */\nexport class MaskSegmentViewHelper {\n\n  /**\n   * List of hidden segments.\n   *\n   * @type {MaskSegment[]}\n   */\n  _hiddenSegments = [];\n\n  _isMonochrome;\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number} The index in the array, -1 if not found.\n   */\n  _findHiddenIndex(segmentNumber) {\n    return this._hiddenSegments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this._findHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addToHidden(segment) {\n    if (!this.isHidden(segment.number)) {\n      this._hiddenSegments.push(segment);\n      // base flag on latest added\n      this._isMonochrome = typeof segment.displayValue !== 'undefined';\n    } else {\n      logger.warn(\n        'Not hidding segment, it is allready in the hidden list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this._findHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this._hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the hidden list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [];\n    if (this._isMonochrome) {\n      hiddenColours[0] = 0;\n    } else {\n      hiddenColours[0] = {r: 0, g: 0, b: 0};\n    }\n    for (const segment of this._hiddenSegments) {\n      if (this._isMonochrome) {\n        hiddenColours.push(segment.displayValue);\n      } else {\n        hiddenColours.push(segment.displayRGBValue);\n      }\n    }\n\n    // create alpha function\n    let resultFn;\n    if (this._isMonochrome) {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value === hiddenColours[i]) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    } else {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value[0] === hiddenColours[i].r &&\n            value[1] === hiddenColours[i].g &&\n            value[2] === hiddenColours[i].b) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    }\n    return resultFn;\n  }\n}","/**\n * Mutable 2D scalar ({x,y}).\n */\nexport class Scalar2D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n}\n\n/**\n * Mutable 3D scalar ({x,y,z}).\n */\nexport class Scalar3D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n\n  /**\n   * Z value.\n   *\n   * @type {number}\n   */\n  z;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__654__","__WEBPACK_EXTERNAL_MODULE__324__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","_values","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","numberOfDims","parseInt","substring","Array","fill","ModalityLut","_rsi","_isIdRsi","_length","_lut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","WindowLevel","center","width","defaultPresets","CT","mediastinum","lung","bone","brain","head","VoiLut","_windowLevel","_signedOffset","_ymin","_ymax","_xmin","_xmax","_slope","_inter","wl","_init","getWindowLevel","c","setSignedOffset","WindowLut","_modalityLut","_voiLut","_signedShift","_isDiscrete","modalityLut","isSigned","isDiscrete","size","getVoiLut","getModalityLut","setVoiLut","lut","getSlope","Uint8ClampedArray","floor","buildLut","func","id","invId","lut_range_max","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","RGB","g","b","BLACK","isEqualRgb","c1","c2","getShadowColour","hexColour","hexStr","rgb","isDarkColour","labToUintLab","triplet","d65","x","y","z","srgbToCielab","labFunc","illuminant","fy","ciexyzToCielab","invGammaFunc","rl","gl","bl","srgbToCiexyz","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","_x","_y","_z","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","isCodirectional","Number","EPSILON","REAL_WORLD_EPSILON","isSimilar","tol","abs","Matrix33","_inverse","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","isIdentityMat33","mat33","Point2D","getDistance","_getSquaredDistance","dx","dy","dz","getClosest","pointList","minIndex","minDist","dist","minus","Point","get3D","values0","values1","mergeWith3D","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","keys","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","Uint8Array","charCodeAt","precisionRound","number","precision","factor","delta","round","arraySortEquals","arr0","arr1","arrayEquals","sort","element","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","byteLength","data","trailer","buffer","set","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","transferSyntaxes","transferSyntaxKeywords","Tag","_group","_element","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","_getInfoFromDictionary","getVrFromDictionary","getTagFromKey","getItemTag","isItemTag","tag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys1","foundTag","k0","lenK0","k1","lenK1","DataElement","vl","undefinedLength","startOffset","endOffset","items","flipArrayEndianness","array","blen","u8","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","_buffer","_isLittleEndian","_isNativeLittleEndian","Int8Array","Int16Array","isNativeLittleEndian","_needFlip","_view","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","getCoronalMat33","Orientation","Axial","Coronal","Sagittal","getOrientationStringLPS","matrix","v0","v1","v2","getVectorStringLPS","vector","orientation","orientationX","orientationY","orientationZ","threshold","getOrientationFromCosines","cosines","orientationMatrix","rowCosines","colCosines","normal","getDwvVersion","hasDicomPrefix","reduce","previous","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientMatrix","code","orientStr","getLPSGroup","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","TagKeys","DicomParser","_dataElements","_defaultCharacterSet","_defaultTextDecoder","_textDecoder","_decodeString","_decodeSpecialString","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","_readTag","reader","_readItemDataElement","implicit","itemData","item","_readDataElement","isSeqDelim","isItemDelim","_readPixelItemDataElement","offsetTableVl","readTagRes","is32bitVL","concat","isKnownVR","pixItemData","sqEndOffset","_interpretElement","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","sqBitsAllocated","sqPixelRepresentation","dataElement","subElement","_interpret","elements","parse","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","_listeners","type","callback","remove","nFound","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","_intercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Statistics","min","mean","stdDev","median","p25","p75","getStats","includesFullStatsFlags","stats","getBasicStats","getPercentile","getFullStats","sum","sumSqr","variance","ratio","i0","guid","random","NumberRange","Spacing","Geometry","_origins","_size","_spacing","_timeOrigins","_initialTime","_orientation","_newOrigins","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","_updateSliceSpacing","geoSliceSpacing","origins","spacings","origin1","origin2","sliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestOriginIndex","closestOrigin","pointDir","appendOrigin","equalToOrigin","find","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","getImage2DSize","rows","columns","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","padZeroTwoDigit","getSpacingFromMeasure","dataElements","pixelSpacing","parseFloat","checkTag","warning","TagValueExtractor","_elements","ImageFactory","_warning","_suvFactor","getWarning","checkElements","modality","suvFactor","patWeight","patWeightEl","decayedDose","seriesDateObj","totalDose","halfLife","radioStart","radioInfoSq","totalDoseStr","totalDoseEl","halfLifeStr","halfLifeEl","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","date","getDateTime","Date","seriesTimeObj","scanStart","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","frameRefTime","frameRefTimeElStr","frameRefTimeEl","actualFrameDuration","actualFrameDurationElStr","actualFrameDurationEl","decayConstant","decayDuringFrame","offsetSeconds","exp","decayTime","getDecayedDose","getSuvFactor","create","pixelBuffer","numberOfFiles","size2D","numberOfFramesEl","rowSpacing","columnSpacing","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","getOrientationMatrix","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","meta","Modality","isPetWithSuv","intensityFactor","setRescaleSlopeAndIntercept","safeGet","TransferSyntaxUID","MediaStorageSOPClassUID","SOPClassUID","ImageType","SamplesPerPixel","PhotometricInterpretation","PixelRepresentation","BitsAllocated","BitsStored","HighBit","StudyDate","StudyTime","StudyInstanceUID","StudyID","SeriesInstanceUID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","ImageOrientationPatient","FrameOfReferenceUID","IsSigned","pixelUnit","getPixelUnit","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLutElement","greenLutElement","blueLutElement","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","writerActions","copy","clear","getUID","prefix","getDwvUIDPrefix","uid","datePart","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","_useUnVrForPrivateSq","_fixUnknownVR","_defaultRules","default","_rules","_compulsoryTags","_defaultTextEncoder","_textEncoder","setUseUnVrForPrivateSq","setFixUnknownVR","setRules","rules","addMissingTags","rule","tagKey","isKey","_encodeString","_encodeSpecialString","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","_writeDataElementItems","writer","itemKeys","itemElement","_writeDataElement","itemDelimElement","_writeDataElementValue","hexString","hexString1","hexString2","atValue","diff","message","_writePixelDataElementValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","getBuffer","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","missingTags","originalElement","checkAndFixUnknownVR","_setElementValue","fmiv","getDataElement","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","ArrayBuffer","metaWriter","dataWriter","lenj","metaOffset","lenk","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","join","padOBValue","isTypedArrayVr","isArray","itemPrefixSize","getBpeForVrType","dictVr","getUint8ToVrValue","getElementsFromJSONTags","simpleTags","simpleTag","DicomCode","meaning","longValue","urnValue","schemeDesignator","getCode","getDicomCodeItem","codeItem","CodeValue","LongCodeValue","URNCodeValue","CodingSchemeDesignator","CodeMeaning","MaskSegment","algorithmType","algorithmName","displayValue","displayRGBValue","propertyTypeCode","propertyCategoryCode","trackingUid","trackingId","getSegment","segment","cielabElement","gammaFunc","ciexyzToSrgb","invLabFunc","l0","cielabToCiexyz","cielabToSrgb","getDicomSegmentItem","algoType","segmentItem","SegmentNumber","SegmentLabel","SegmentAlgorithmType","SegmentAlgorithmName","cieLab","RecommendedDisplayCIELabValue","RecommendedDisplayGrayscaleValue","SegmentedPropertyCategoryCodeSequence","SegmentedPropertyTypeCodeSequence","TrackingID","TrackingUID","DicomSegmentFrameInfo","dimIndex","imagePosPat","derivationImages","refSegmentNumber","getSegmentFrameInfo","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","segmentIdSq","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","getDicomSegmentFrameInfoItem","FrameContentSequence","DimensionIndexValues","PlanePositionSequence","ImagePositionPatient","SegmentIdentificationSequence","ReferencedSegmentNumber","sourceImgPurposeOfReferenceCode","segDerivationCode","derivationImageItems","derivationImage","PurposeOfReferenceCodeSequence","ReferencedSOPClassUID","ReferencedSOPInstanceUID","DerivationCodeSequence","SourceImageSequence","DerivationImageSequence","equalPosPat","pos1","pos2","JSON","stringify","tagDefinition","tagValue","enum","createRoiSliceBuffers","segments","sliceOffset","numberOfComponents","getPixelValue","equalValues","inputOffset","buffers","pixelValue","number2","RequiredDicomSegTags","getDefaultDicomSegJson","reqTag","MaskFactory","_dicomElements","frames","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","invOrientation","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","tmpGeometry","isAboveEpsilon","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","frameOffset","frameSegment","SeriesDate","SeriesTime","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","frameOfReferenceUID","lossyImageCompression","LossyImageCompression","toDicom","extraTags","getMeta","Rows","Columns","now","ContentDate","getFullYear","getMonth","ContentTime","getHours","getMinutes","getSeconds","getDicomTime","segmentItems","SegmentSequence","SharedFunctionalGroupsSequence","PlaneOrientationSequence","PixelMeasuresSequence","SpacingBetweenSlices","PixelSpacing","roiBuffers","key0","createRoiBuffers","finalBuffers","referencedSOPs","number40","number4","key1","posPat","posPatArray","sourceIndex","getImageUid","NumberOfFrames","frameInfosTag","PerFrameFunctionalGroupsSequence","refSeriesTag","ReferencedInstanceSequence","ReferencedSeriesSequence","tags1","tags2","keys2","tagName2","mergeTags","dicomElements","pixVl","de","createImage","createMaskImage","_geometry","_imageUids","_rsis","_isIdentityRSI","_isConstantRSI","_photometricInterpretation","_planarConfiguration","_numberOfComponents","_meta","_dataRange","_rescaledDataRange","_histogram","_listenerHandler","imageUids","getSecondaryOffset","containsImageUids","itemArr1","arrayContains","canQuantify","canWindowLevel","isMonochrome","nFiles","_getSecondaryOffsetMax","getRescaleSlopeAndIntercept","isConstantRSI","_getRescaleSlopeAndInterceptAtOffset","inRsi","isIdentityRSI","interp","config","getOffsets","bufferValue","offsets","equal","hasValues","finalValues","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","_realloc","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","_fireEvent","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","_image","_windowLut","_windowPresets","_currentPresetName","_currentWl","_colourMapName","_currentPosition","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","setInitialIndex","getPlaybackMilliseconds","_alphaFunction","_value","_index","getAlphaFunction","setAlphaFunction","_getCurrentWindowLut","currentIndex","sliceWl","setWindowLevel","setWindowLevelPresetById","voiLut","voiLutWl","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getCurrentWindowPresetName","getColourMap","_getColourMapLut","getCurrentPosition","isPositionInBounds","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","isNewWl","isNewName","manual","wc","ww","skipGenerate","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","PlaneHelper","_imageOrientation","_viewOrientation","_targetOrientation","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","ViewController","_planeHelper","_playerID","_isMask","getPlaneHelper","isMask","initialise","getPositionFromPlanePoint","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","_getSlice","sliceValues","sliceOrigin","getImageRegionValues","rescaled","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","point2D","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","_getIncrementIndex","incr","_getDecrementIndex","_getIncrementScrollIndex","_getDecrementScrollIndex","getIncrementPosition","getDecrementPosition","getIncrementScrollPosition","getDecrementScrollPosition","incrementIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","play","window","setInterval","canDoMore","stop","clearInterval","setViewAlphaFunction","bindImageAndLayer","viewLayer","onimagecontentchange","onimagegeometrychange","unbindImageAndLayer","InteractionEventNames","customUI","openRoiDialog","textExpr","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getTouchPoints","targetTouches","changedTouches","getMousePoint","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","_containerDiv","_viewController","_canvas","_offscreenCanvas","_context","_isValidPosition","_imageData","_baseSize","_baseSpacing","_opacity","_scale","_fitScale","_flipScale","_offset","_baseOffset","_viewOffset","_zoomOffset","_flipOffset","_needsDataUpdate","_dataId","_imageSmoothing","_layerGroupOrigin","_layerGroupOrigin0","containerDiv","className","getDataId","getScale","getAbsoluteZoomOffset","setImageSmoothing","setView","dataId","_onWLChange","_onColourMapChange","_onPositionChange","_onAlphaFuncChange","bindImage","getViewController","onimageset","dataid","_setBaseSize","unbindImage","draw","vcSize","origin0","scrollOffset","setBaseOffset","getId","removeFromDOM","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","flipScaleX","flipScaleY","flipScaleZ","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","initScale","absoluteZoomOffset","layerGroupOrigin","layerGroupOrigin0","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","posX","posY","displayToMainPlanePos","display","style","isVisible","layerid","_updateImageData","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","containerSize","divToWorldSizeRatio","fitOffset","needsDraw","divToImageSizeRatio","newViewOffset","scaledImageSize","newFlipOffset","bindInteraction","pointerEvents","names","eventName","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollIndex","filter","save","restore","Style","_fontSize","_fontFamily","_textColour","_lineColour","_baseScale","_zoomScale","_strokeWidth","_shadowOffset","_tagOpacity","_textPadding","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","DrawGroupCommand","_name","_layer","_isSilent","_parent","layer","getParent","getName","execute","getKonvaLayer","onExecute","undo","onUndo","_event","MoveGroupCommand","_translation","translation","move","minusTrans","ChangeGroupCommand","_factory","_startAnchor","_endAnchor","_style","startAnchor","endAnchor","viewController","update","DeleteGroupCommand","DrawMeta","quantification","DrawDetails","color","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","DrawController","_drawLayer","_konvaLayer","_currentPosGroupId","drawLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","list","groups","collec","text","shapeExtrakids","closed","extraName0","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","cmdCallback","exeCallback","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","delcmd","deleteDraw","deleteDraws","shapeGroups","getNumberOfDraws","DrawLayer","_konvaStage","_drawController","getKonvaStage","getLayers","getDrawController","setPlaneHelper","opacity","_updateLabelScale","container","listening","getContent","setAttribute","konvaLayer","isGroupVisible","toggleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromLayerDivId","idString","groupDivId","layerId","getLayerDetailsFromEvent","layerDiv","closest","indexCenter","LayerGroup","_layers","_activeViewLayerIndex","_activeDrawLayerIndex","_showCrosshair","_crosshairHtmlElements","_tooltipHtmlElement","getShowCrosshair","setShowCrosshair","_updateCrosshairOnChange","_showCrosshairDiv","_removeCrosshairDiv","getDivId","getAddedScale","getOffset","getNumberOfLayers","forEach","getNumberOfViewLayers","getActiveViewLayer","tmpLayer","getBaseViewLayer","getViewLayersByDataId","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataId","setActiveViewLayer","setActiveViewLayerByDataId","setActiveDrawLayer","setActiveDrawLayerByDataId","addViewLayer","viewLayerIndex","div","_getNextLayerDiv","append","_bindViewLayer","addDrawLayer","_bindDrawLayer","updateLayersToPositionChange","_unbindViewLayer","_unbindDrawLayer","empty","getElementsByClassName","removeLayersByDataId","removeLayer","numberOfDraws","baseLayer","displayPos","lineH","offsetWidth","left","top","lineV","offsetHeight","showTooltip","removeTooltipDiv","span","createTextNode","someViewLayer","hasOne","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","scrollDiff","planeDiff","hasSetPos","getDivToWorldSizeRatio","maxWorldSize","getMaxWorldSize","maxSize","addScale","scaleStep","addTranslation","binderList","WindowLevelBinder","getEventType","getCallback","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","ColourMapBinder","Stage","_layerGroups","_activeLayerGroupIndex","_binders","_callbackStore","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","setActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","removeLayerGroup","minRatio","hasRatio","_addEventListeners","_removeEventListeners","_getBinderCallback","binder","binderObj","elem","State","toJSON","app","drawController","version","toObject","fromJSON","json","_readV01","_readV02","_readV03","_readV04","_readV05","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","getDataIds","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","_stack","_curCmdIndex","getStackSize","getCurrentStackIndex","command","redo","ToolboxController","_toolList","_selectedTool","_boundLayers","toolList","enableShortcuts","_getCallback","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayerGroup","divId","_getActiveLayerChangeHandler","_internalBindLayerGroup","layerGroupDivId","_unbindLayer","_bindLayer","applySelectedTool","MultiProgressHandler","_progresses","_numberOfDimensions","_callback","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","_getItemProgress","source","_getGlobalPercent","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","_inputData","_requests","_runningLoader","_nLoad","_nLoadend","_aborting","_storeInputData","_clearStoredRequests","_clearStoredLoader","_storeRequest","request","_storeLoader","loader","_addLoad","onload","_addLoadend","onloadend","_augmentCallbackEvent","load","options","onloadstart","_loadDicomDir","_loadUrls","_getLoadHandler","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","errorCallback","abortCallback","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","_stop","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_script","_pool","_areCallbacksSet","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","_algoName","algoName","numberOfData","_decodeCount","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","_pixelDecoder","DicomBufferToView","_options","opt","_dicomParserStore","_finalBufferStore","_decompressedSizes","_factories","_getFactory","modalityElement","_generateImage","_generateImageUncompressed","_generateImageCompressed","dicomParser","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","_onDecodedItem","dataIndex","decodedData","fullSize","_handleNonImageData","_handleImageData","algo","getSyntaxDecompressionName","convert","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","_isLoading","_db2v","canLoadFile","file","url","forceLoader","isNameAccept","acceptHeader","acceptValue","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","tmpFile","File","loadFileAs","fileContentTypes","_opt","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","_mem","_aborted","_createDataUri","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","hasImageExt","DataURL","bytes","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","_filename","_files","_zobjs","_zipAsyncCallback","content","unzipPercent","async","then","JSZip","zip","FilesLoader","_readers","_clearStoredReaders","_storeReader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","_currentLoaders","loadFiles","files","_loadStateFile","_loadImageFiles","loadURLs","_loadStateUrl","_loadImageUrls","loadImageObject","_loadData","getLoadingDataIds","fileIO","urlIO","loadType","eventInfo","loadtype","isFirstItem","eventInfoItem","isfirstitem","DicomData","DataController","_dataList","_dataIdCounter","getNextDataId","getDataIdsFromSopUids","_getFireEvent","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","value1","subValue1","value2","subValue2","mergeObjects","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","_app","_configs","_eventNames","_isListening","_data","_currentDataUid","configs","addAppListeners","addItemMeta","dataUid","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","_onSliceChange","_updateData","sliceOverlayData","mapFunc","isListening","removeAppListeners","ScrollSum","_sum","getSum","wheelDeltaY","deltaY","getSpinY","isTick","ScrollWheel","_scrollSum","wheel","up","preventDefault","layerDetails","newPosition","i18n","t","props","mm","cm2","degree","Line","_begin","_end","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacing2D","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","ShapeEditor","_shapeFactoryList","_currentFactory","_shape","_isActive","_drawEventCallback","setFactoryList","setShape","inshape","_removeAnchors","isFactoryGroup","_addAnchors","getShape","isActive","setDrawEventCallback","enable","_setAnchorsVisible","getLayer","disable","resetAnchors","_applyFuncToAnchors","anchor","setAnchorsActive","_setAnchorOn","_setAnchorOff","getAnchors","getStyle","_getClone","parent","on","cancelBubble","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","DrawTrash","_trash","createTrashIcon","trashLine1","trashLine2","stage","invscale","changeChildrenColourOnTrashHover","eventPosition","shapeGroup","originalShapeColour","isOverTrash","changeGroupChildrenColour","tshape","trashHalfWidth","scaleX","trashHalfHeight","scaleY","changed","ROI","_points","getPoint","addPoint","addPoints","defaults","labelText","arrow","circle","ellipse","freeHand","protractor","rectangle","roi","ruler","RoiFactory","getNPoints","getTimeout","fontSize","fontFamily","px","py","kroi","textPos","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","bits","cost_functor","bucketCount","mask","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","_costFunction","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","Circle","_centre","_radius","centre","getCenter","getRadius","getSurface","getWorldSurface","mulABC","getRound","centerX","centerY","rSquare","maxY","transX","quantif","Ellipse","_a","_b","getA","getB","radiusRatio","rySquare","getEllipseIndices","centerValues","radiusI","radiusJ","radiusJ2","di","dj","jmax","jmin","imax","imin","Rectangle","getRealWidth","getRealHeight","getWidth","getHeight","Threshold","_min","_max","getMin","setMin","getMax","setMax","_originalImage","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","_filter","defaultToolList","_started","_startPoint","_scrollWhell","_start","_update","diffX","diffY","pixelToIntensity","WindowLevelValues","_finish","mousedown","mousePoint","mousemove","mouseup","mouseout","touchstart","touchPoints","touchmove","touchend","dblclick","keydown","context","onKeydown","_bool","_features","Scroll","_touchTimerID","_displayTooltip","_currentDivId","_removeTooltipDiv","_showTooltip","yMove","xMove","setTimeout","clearTimeout","features","displayTooltip","ZoomAndPan","_hasMoved","_pointsLine","_midPoint","_twoTouchStart","tx","ty","_twoTouchUpdate","lineRatio","zoom","_setCurrentPosition","step","Opacity","op","Draw","_shapeEditor","_isDrawing","_tmpShapeGroup","_shapeName","_lastPoint","_activeShapeGroup","_originalCursor","_mouseOverCursor","_withScroll","_autoShapeColour","_lastIsMouseMovePoint","_switchEditOrCreateShapeGroup","getIntersection","_selectShapeGroup","_startShapeGroupCreation","_setToDrawingState","_setToNotDrawingState","selectedShape","_updateShapeGroupCreation","_onNewPoints","_finishShapeGroupCreation","_onFinalPoints","timer","_emitDeleteCommand","destroy","tmpPoints","viewLayerId","finalPoints","finalShapeGroup","_emitDrawGroupCommand","_addShapeListeners","_storeMoveCommand","mvcmd","_getPositionCallback","_updateDrawLayer","_activateCurrentPositionShapes","body","cursor","_resetActiveShapeGroup","_removeShapeListeners","_removeShapeOverListeners","_getRealPosition","_addShapeOverListeners","_getShapeFactory","dragStartPos","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","evt","eventPos","currentTarget","groupId","getOptionsType","autoShapeColour","shapeColour","shapeName","hasShape","mouseOverCursor","withScroll","getEventNames","listener","Filter","_filterList","_selectedFilter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","_blurRadius","_simplifyTolerant","_simplifyCount","_imageInfo","_mask","_initialthreshold","_currentthreshold","_command","_shapeGroup","_initialpoint","_border","_parentPoints","_extender","_painterTimeout","setExtend","getExtend","_getIndex","_calcBorder","simple","MagicWand","cs","icsl","_paintBorder","extend","ini","jl","modifyThreshold","setPoints","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","_path","_currentPath","_tolerance","_clearParentPoints","_clearPaths","_scissors","_finishShape","pn","p0","results","_p","_q","toolOptions","ArrowFactory","tickLen","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2d0","p2d1","p2b","p2e","CircleFactory","_calculateMathShape","_createShape","_createLabel","mathShape","kShape","kLabel","kcircle","right","bottom","centerPoint","_updateCircleQuantification","_getShadowCircle","kshadow","maxX","pixelLine","EllipseFactory","ellipseX","ellipseY","kellipse","radiusAbs","_updateEllipseQuantification","_getShadowEllipse","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectX","rectY","rectWidth","rectHeight","krect","topLeft","topRight","bottomRight","bottomLeft","rect","_updateRectangleQuantification","_getShadowRectangle","rWidth","rHeight","RulerFactory","ThresholdFilter","_resetImage","SobelFilter","SharpenFilter","ViewConfig","wlPresetName","ToolConfig","AppOptions","dataViewConfigs","tools","binders","viewOnFirstLoadItem","overlayConfig","rootDocument","App","_dataController","_toolboxController","_loadController","_stage","_undoStack","_overlayDatas","addNewImage","getMetaData","getToolboxController","appToolList","toolName","toolConstructor","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","_onloadstart","_onloadprogress","_onloaditem","_onload","_onloadend","_onloaderror","_onloadabort","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","studyUID","seriesList","seriesUID","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortAllLoads","abortLoad","initWLDisplay","getViewConfigs","excludeStarConfig","getViewConfig","getDataViewConfigs","setDataViewConfigs","_createLayerGroups","addDataViewConfig","_createLayerGroup","removeDataViewConfig","itemIndex","lg","vls","dls","updateDataViewConfig","configToUpdate","dataKeys","divIds","viewConfigs","viewConfig","getElementById","_bindLayerGroupToApp","setLayerGroupsBinders","instances","_addViewLayer","cx","cy","translate","getJsonState","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","isFirstLoadItem","eventMetaData","imageGeometry","getViewOrientation","getMatrixFromName","isBaseLayer","flipFlags","_getViewFlipFlags","baseViewLayer","viewConfigOrientation","orientationCode","isViewUndefined","isViewAxial","isViewCoronal","isViewSagittal","flipOffset","flipScale","MaskSegmentHelper","_segments","_findSegmentIndex","segmentNumber","hasSegment","maskHasSegments","numbers","unknowns","addSegment","removeSegment","updateSegment","DeleteSegmentCommand","_segment","_offsets","isValid","segmentnumber","ChangeSegmentColourCommand","_newColour","_previousColour","newColour","MaskSegmentViewHelper","_hiddenSegments","_isMonochrome","_findHiddenIndex","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","resultFn","Scalar2D","Scalar3D"],"sourceRoot":""}